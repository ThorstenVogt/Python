<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xml:base='https://viz.mimirhealth.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <repository-location derived-from='https://viz.mimirhealth.com/workbooks/DiagnosesMockDataset?rev=1.0' id='MapMockDataset' path='/workbooks' revision='1.0' />
  <preferences>
    <color-palette custom='true' name='Mimir Diverging Palette II' type='ordered-diverging'>
      <color>#44263a</color>
      <color>#a7bac8</color>
    </color-palette>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Select Disease' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Diabetes&quot;'>
        <calculation class='tableau' formula='&quot;Diabetes&quot;' />
        <members>
          <member value='&quot;High Blood Pressure&quot;' />
          <member value='&quot;High Cholesterol&quot;' />
          <member value='&quot;Ischemic Heart Disease&quot;' />
          <member value='&quot;Arthritis&quot;' />
          <member value='&quot;Diabetes&quot;' />
          <member value='&quot;Heart Failure&quot;' />
          <member value='&quot;Chronic Kidney Disease&quot;' />
          <member value='&quot;Depression&quot;' />
          <member value='&quot;COPD&quot;' />
          <member value='&quot;Alzheimerâ€™s&quot;' />
          <member value='&quot;Atrial Fibrillation&quot;' />
          <member value='&quot;Cancer&quot;' />
          <member value='&quot;Osteoporosis&quot;' />
          <member value='&quot;Asthma&quot;' />
          <member value='&quot;Stroke&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Patients (MockPatientsData)' inline='true' name='excel-direct.42083.668503981484' version='8.3'>
      <connection class='excel-direct' cleaning='no' compat='no' filename='C:\Users\Mahitha\Google Drive\Mock Data\MapMockDataset.twb Files\Data/Desktop/MockPatientsData.xlsx' server-oauth='' workgroup-auth-mode='as-is'>
        <relation name='&apos;Medicare Patients Only$&apos;' table='[&apos;Medicare Patients Only$&apos;]' type='table'>
          <columns header='yes'>
            <column datatype='integer' name='MRNO' ordinal='0' />
            <column datatype='string' name='Last_Name' ordinal='1' />
            <column datatype='string' name='First_name' ordinal='2' />
            <column datatype='string' name='Middle_init' ordinal='3' />
            <column datatype='string' name='Name' ordinal='4' />
            <column datatype='date' name='DOB' ordinal='5' />
            <column datatype='integer' name='Age' ordinal='6' />
            <column datatype='string' name='Gender' ordinal='7' />
            <column datatype='string' name='Address' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Zipcode' ordinal='11' />
            <column datatype='string' name='Marital_Status' ordinal='12' />
            <column datatype='string' name='Spouse' ordinal='13' />
            <column datatype='string' name='Employer' ordinal='14' />
            <column datatype='string' name='Phone' ordinal='15' />
            <column datatype='date' name='VisitDate' ordinal='16' />
            <column datatype='string' name='Insurance' ordinal='17' />
            <column datatype='string' name='Doctor' ordinal='18' />
            <column datatype='string' name='Chronic Care Condition 1- High Blood Pressure' ordinal='19' />
            <column datatype='string' name='Chornic Care Condition 2- High Cholestorl' ordinal='20' />
            <column datatype='string' name='Chornic Care Condition 3- Stroke' ordinal='21' />
            <column datatype='string' name='Chronic Care Condition 4- Osteporosis' ordinal='22' />
            <column datatype='string' name='Chronic Care Condition 5- Cancer' ordinal='23' />
            <column datatype='string' name='Chornic Care Condition 6- Atrial Fibrillation' ordinal='24' />
            <column datatype='string' name='Chornic Care Condition 7- Alzheimers' ordinal='25' />
            <column datatype='string' name='Chornic Care Condition 8- COPD' ordinal='26' />
            <column datatype='string' name='Chornic Care Condition 9- Depression' ordinal='27' />
            <column datatype='string' name='Chronic Condition 10- Chronic Kidney Disease' ordinal='28' />
            <column datatype='string' name='Chronic Condition 11- Heart Failure' ordinal='29' />
            <column datatype='string' name='Chronic Condition 12- Diabetes' ordinal='30' />
            <column datatype='string' name='Chornic Condition 13  Arthritis' ordinal='31' />
            <column datatype='string' name='Chornic Condition 14- Ischemic Heart Diesease' ordinal='32' />
            <column datatype='string' name='Chronic Condition 15- Asthma' ordinal='33' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>MRNO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MRNO]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>MRNO</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Last_Name]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Last_Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[First_name]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>First_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Middle_init</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Middle_init]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Middle_init</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOB</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DOB]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>DOB</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zipcode]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Zipcode</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marital_Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Marital_Status]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Marital_Status</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spouse</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Spouse]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Spouse</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Employer]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Employer</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Phone]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Phone</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VisitDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[VisitDate]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>VisitDate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Insurance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Insurance]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Insurance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Doctor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Doctor]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Doctor</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chronic Care Condition 1- High Blood Pressure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chronic Care Condition 1- High Blood Pressure]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chronic Care Condition 1- High Blood Pressure</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chornic Care Condition 2- High Cholestorl</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chornic Care Condition 2- High Cholestorl]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chornic Care Condition 2- High Cholestorl</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chornic Care Condition 3- Stroke</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chornic Care Condition 3- Stroke]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chornic Care Condition 3- Stroke</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chronic Care Condition 4- Osteporosis</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chronic Care Condition 4- Osteporosis]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chronic Care Condition 4- Osteporosis</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chronic Care Condition 5- Cancer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chronic Care Condition 5- Cancer]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chronic Care Condition 5- Cancer</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chornic Care Condition 6- Atrial Fibrillation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chornic Care Condition 6- Atrial Fibrillation]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chornic Care Condition 6- Atrial Fibrillation</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chornic Care Condition 7- Alzheimers</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chornic Care Condition 7- Alzheimers]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chornic Care Condition 7- Alzheimers</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chornic Care Condition 8- COPD</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chornic Care Condition 8- COPD]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chornic Care Condition 8- COPD</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chornic Care Condition 9- Depression</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chornic Care Condition 9- Depression]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chornic Care Condition 9- Depression</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chronic Condition 10- Chronic Kidney Disease</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chronic Condition 10- Chronic Kidney Disease]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chronic Condition 10- Chronic Kidney Disease</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chronic Condition 11- Heart Failure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chronic Condition 11- Heart Failure]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chronic Condition 11- Heart Failure</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chronic Condition 12- Diabetes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chronic Condition 12- Diabetes]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chronic Condition 12- Diabetes</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chornic Condition 13  Arthritis</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chornic Condition 13  Arthritis]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chornic Condition 13  Arthritis</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chornic Condition 14- Ischemic Heart Diesease</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chornic Condition 14- Ischemic Heart Diesease]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chornic Condition 14- Ischemic Heart Diesease</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chronic Condition 15- Asthma</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Chronic Condition 15- Asthma]</local-name>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias>Chronic Condition 15- Asthma</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[&apos;Medicare Patients Only$&apos;]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[excel-direct.42083.668503981484].[ctd:MRNO:qk]&quot;' value='Medicare coverage' />
        </aliases>
      </column>
      <column caption='High Blood Pressure' datatype='integer' name='[Alzheimer&apos;s (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chronic Care Condition 1- High Blood Pressure])' scope-isolation='false' />
      </column>
      <column caption='Osteoporosis' datatype='integer' name='[Alzheimer&apos;s (copy 3)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chronic Care Condition 4- Osteporosis])' scope-isolation='false' />
      </column>
      <column caption='Cancer' datatype='integer' name='[Alzheimer&apos;s (copy 4)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chronic Care Condition 5- Cancer])' scope-isolation='false' />
      </column>
      <column caption='Chronic Kidney Disease' datatype='integer' name='[Alzheimer&apos;s (copy 5)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chronic Condition 10- Chronic Kidney Disease])' scope-isolation='false' />
      </column>
      <column caption='Diabetes' datatype='integer' name='[Alzheimer&apos;s (copy 6) (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chronic Condition 12- Diabetes])' scope-isolation='false' />
      </column>
      <column caption='Asthma' datatype='integer' name='[Alzheimer&apos;s (copy 6) (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chronic Condition 15- Asthma])' scope-isolation='false' />
      </column>
      <column caption='Heart Failure' datatype='integer' name='[Alzheimer&apos;s (copy 6)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chronic Condition 11- Heart Failure])' scope-isolation='false' />
      </column>
      <column caption='Ischemic Heart Disease' datatype='integer' name='[Alzheimer&apos;s (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chornic Condition 14- Ischemic Heart Diesease])' scope-isolation='false' />
      </column>
      <column caption='COPD' datatype='integer' name='[Calculation_1390320162517653]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chornic Care Condition 8- COPD])' scope-isolation='false' />
      </column>
      <column caption='High Cholesterol' datatype='integer' name='[Calculation_1570320162056628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chornic Care Condition 2- High Cholestorl])' scope-isolation='false' />
      </column>
      <column caption='Cholesterol' datatype='boolean' name='[Calculation_3130320161805044]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='NOT ISNULL([Chornic Care Condition 2- High Cholestorl])' scope-isolation='false' />
      </column>
      <column caption='Selected Disease present' datatype='boolean' name='[Calculation_4490320164136082]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;High Blood Pressure&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Care Condition 1- High Blood Pressure])&#13;&#10;OR&#13;&#10;&apos;High Cholesterol&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 2- High Cholestorl])&#13;&#10;OR&#13;&#10;&apos;Ischemic Heart Disease&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Condition 14- Ischemic Heart Diesease])&#13;&#10;OR&#13;&#10;&apos;Arthritis&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Condition 13  Arthritis])&#13;&#10;OR&#13;&#10;&apos;Diabetes&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Condition 12- Diabetes])&#13;&#10;OR&#13;&#10;&apos;Heart Failure&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Condition 11- Heart Failure])&#13;&#10;OR&#13;&#10;&apos;Chronic Kidney Disease&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Condition 10- Chronic Kidney Disease])&#13;&#10;OR&#13;&#10;&apos;Depression&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 9- Depression])&#13;&#10;OR&#13;&#10;&apos;COPD&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 8- COPD])&#13;&#10;OR&#13;&#10;&apos;Alzheimerâ€™s&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 7- Alzheimers])&#13;&#10;OR&#13;&#10;&apos;Atrial Fibrillation&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 6- Atrial Fibrillation])&#13;&#10;OR&#13;&#10;&apos;Cancer&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Care Condition 5- Cancer])&#13;&#10;OR&#13;&#10;&apos;Osteoporosis&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Care Condition 4- Osteporosis])&#13;&#10;OR&#13;&#10;&apos;Asthma&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Condition 15- Asthma])&#13;&#10;OR&#13;&#10;&apos;Stroke&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 3- Stroke])' scope-isolation='false' />
        <aliases>
          <alias key='false' value='not present' />
          <alias key='true' value='present' />
        </aliases>
      </column>
      <column caption='Atrial Fibrillation' datatype='integer' name='[Calculation_4610320162225661]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chornic Care Condition 6- Atrial Fibrillation])' scope-isolation='false' />
      </column>
      <column caption='Alzheimer&apos;s' datatype='integer' name='[Calculation_6150320162451356]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chornic Care Condition 7- Alzheimers])' scope-isolation='false' />
      </column>
      <column caption='Number of Chronic Diseases' datatype='integer' name='[Calculation_6280320162927092]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT(NOT ISNULL([Chornic Care Condition 2- High Cholestorl]))+&#13;&#10;INT(NOT ISNULL([Chornic Care Condition 3- Stroke]))+&#13;&#10;INT(NOT ISNULL([Chornic Care Condition 6- Atrial Fibrillation]))+&#13;&#10;INT(NOT ISNULL([Chornic Care Condition 7- Alzheimers]))+&#13;&#10;INT(NOT ISNULL([Chornic Care Condition 8- COPD]))+&#13;&#10;INT(NOT ISNULL([Chornic Care Condition 9- Depression]))+&#13;&#10;INT(NOT ISNULL([Chornic Condition 13  Arthritis]))+&#13;&#10;INT(NOT ISNULL([Chornic Condition 14- Ischemic Heart Diesease]))+&#13;&#10;INT(NOT ISNULL([Chronic Care Condition 1- High Blood Pressure]))+&#13;&#10;INT(NOT ISNULL([Chronic Care Condition 4- Osteporosis]))+&#13;&#10;INT(NOT ISNULL([Chronic Care Condition 5- Cancer]))+&#13;&#10;INT(NOT ISNULL([Chronic Condition 10- Chronic Kidney Disease]))+&#13;&#10;INT(NOT ISNULL([Chronic Condition 11- Heart Failure]))+&#13;&#10;INT(NOT ISNULL([Chronic Condition 12- Diabetes]))+&#13;&#10;INT(NOT ISNULL([Chronic Condition 15- Asthma]))' scope-isolation='false' />
      </column>
      <column caption='Stroke' datatype='integer' name='[Calculation_6570320162128224]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chornic Care Condition 3- Stroke])' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Chornic Care Condition 2- High Cholestorl]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chornic Care Condition 3- Stroke]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chornic Care Condition 6- Atrial Fibrillation]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chornic Care Condition 7- Alzheimers]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chornic Care Condition 8- COPD]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chornic Care Condition 9- Depression]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chornic Condition 13  Arthritis]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chornic Condition 14- Ischemic Heart Diesease]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chronic Care Condition 1- High Blood Pressure]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chronic Care Condition 4- Osteporosis]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chronic Care Condition 5- Cancer]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chronic Condition 10- Chronic Kidney Disease]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chronic Condition 11- Heart Failure]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chronic Condition 12- Diabetes]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Chronic Condition 15- Asthma]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Arthritis' datatype='integer' name='[Depression (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chornic Condition 13  Arthritis])' scope-isolation='false' />
      </column>
      <column caption='First name' datatype='string' name='[First_name]' role='dimension' type='nominal'>
      </column>
      <column caption='Last Name' datatype='string' name='[Last_Name]' role='dimension' type='nominal'>
      </column>
      <column aggregation='CountD' caption='Mrno' datatype='integer' name='[MRNO]' role='measure' type='quantitative'>
      </column>
      <column caption='Marital Status' datatype='string' name='[Marital_Status]' role='dimension' type='nominal'>
      </column>
      <column caption='Middle init' datatype='string' name='[Middle_init]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Depression' datatype='integer' name='[Stroke (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Chornic Care Condition 9- Depression])' scope-isolation='false' />
      </column>
      <column caption='Visit Date' datatype='date' name='[VisitDate]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <column-instance column='[MRNO]' derivation='CountD' name='[ctd:MRNO:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4490320164136082]' derivation='None' name='[none:Calculation_4490320164136082:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chornic Care Condition 2- High Cholestorl]' derivation='None' name='[none:Chornic Care Condition 2- High Cholestorl:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chornic Care Condition 3- Stroke]' derivation='None' name='[none:Chornic Care Condition 3- Stroke:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chornic Care Condition 6- Atrial Fibrillation]' derivation='None' name='[none:Chornic Care Condition 6- Atrial Fibrillation:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chornic Care Condition 7- Alzheimers]' derivation='None' name='[none:Chornic Care Condition 7- Alzheimers:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chornic Care Condition 8- COPD]' derivation='None' name='[none:Chornic Care Condition 8- COPD:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chornic Care Condition 9- Depression]' derivation='None' name='[none:Chornic Care Condition 9- Depression:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chornic Condition 13  Arthritis]' derivation='None' name='[none:Chornic Condition 13  Arthritis:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chornic Condition 14- Ischemic Heart Diesease]' derivation='None' name='[none:Chornic Condition 14- Ischemic Heart Diesease:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chronic Care Condition 1- High Blood Pressure]' derivation='None' name='[none:Chronic Care Condition 1- High Blood Pressure:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chronic Care Condition 4- Osteporosis]' derivation='None' name='[none:Chronic Care Condition 4- Osteporosis:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chronic Care Condition 5- Cancer]' derivation='None' name='[none:Chronic Care Condition 5- Cancer:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chronic Condition 10- Chronic Kidney Disease]' derivation='None' name='[none:Chronic Condition 10- Chronic Kidney Disease:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chronic Condition 11- Heart Failure]' derivation='None' name='[none:Chronic Condition 11- Heart Failure:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chronic Condition 12- Diabetes]' derivation='None' name='[none:Chronic Condition 12- Diabetes:nk]' pivot='key' type='nominal' />
      <column-instance column='[Chronic Condition 15- Asthma]' derivation='None' name='[none:Chronic Condition 15- Asthma:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Chornic Care Condition 2- High Cholestorl,Chornic Care Condition 3- Stroke,Chornic Care Condition 6- Atrial Fibrillation,Chornic Care Condition 7- Alzheimers,Chornic Care Condition 8- COPD,Chornic Care Condition 9- Depression,Chornic Condition 13  Arthritis,Chornic Condition 14- Ischemic Heart Diesease,Chronic Care Condition 1- High Blood Pressure,Chronic Care Condition 4- Osteporosis,Chronic Care Condition 5- Cancer,Chronic Condition 10- Chronic Kidney Disease,Chronic Condition 11- Heart Failure,Chronic Condition 12- Diabetes,Chronic Condition 15- Asthma)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Chornic Care Condition 2- High Cholestorl:nk]' />
          <groupfilter function='level-members' level='[none:Chornic Care Condition 3- Stroke:nk]' />
          <groupfilter function='level-members' level='[none:Chornic Care Condition 6- Atrial Fibrillation:nk]' />
          <groupfilter function='level-members' level='[none:Chornic Care Condition 7- Alzheimers:nk]' />
          <groupfilter function='level-members' level='[none:Chornic Care Condition 8- COPD:nk]' />
          <groupfilter function='level-members' level='[none:Chornic Care Condition 9- Depression:nk]' />
          <groupfilter function='level-members' level='[none:Chornic Condition 13  Arthritis:nk]' />
          <groupfilter function='level-members' level='[none:Chornic Condition 14- Ischemic Heart Diesease:nk]' />
          <groupfilter function='level-members' level='[none:Chronic Care Condition 1- High Blood Pressure:nk]' />
          <groupfilter function='level-members' level='[none:Chronic Care Condition 4- Osteporosis:nk]' />
          <groupfilter function='level-members' level='[none:Chronic Care Condition 5- Cancer:nk]' />
          <groupfilter function='level-members' level='[none:Chronic Condition 10- Chronic Kidney Disease:nk]' />
          <groupfilter function='level-members' level='[none:Chronic Condition 11- Heart Failure:nk]' />
          <groupfilter function='level-members' level='[none:Chronic Condition 12- Diabetes:nk]' />
          <groupfilter function='level-members' level='[none:Chronic Condition 15- Asthma:nk]' />
        </groupfilter>
      </group>
      <folder name='Disease Counts' role='measures'>
        <folder-item name='[Alzheimer&apos;s (copy 2)]' type='field' />
        <folder-item name='[Alzheimer&apos;s (copy 3)]' type='field' />
        <folder-item name='[Alzheimer&apos;s (copy 4)]' type='field' />
        <folder-item name='[Alzheimer&apos;s (copy 5)]' type='field' />
        <folder-item name='[Alzheimer&apos;s (copy 6) (copy 2)]' type='field' />
        <folder-item name='[Alzheimer&apos;s (copy 6)]' type='field' />
        <folder-item name='[Alzheimer&apos;s (copy)]' type='field' />
        <folder-item name='[Calculation_1390320162517653]' type='field' />
        <folder-item name='[Calculation_1570320162056628]' type='field' />
        <folder-item name='[Calculation_4610320162225661]' type='field' />
        <folder-item name='[Calculation_6150320162451356]' type='field' />
        <folder-item name='[Calculation_6570320162128224]' type='field' />
        <folder-item name='[Depression (copy)]' type='field' />
        <folder-item name='[Stroke (copy)]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_4490320164136082:nk]' type='palette'>
            <map to='#42758f'>
              <bucket>true</bucket>
            </map>
            <map to='#a7bbc9'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Disease' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Diabetes&quot;'>
          <calculation class='tableau' formula='&quot;Diabetes&quot;' />
          <members>
            <member value='&quot;High Blood Pressure&quot;' />
            <member value='&quot;High Cholesterol&quot;' />
            <member value='&quot;Ischemic Heart Disease&quot;' />
            <member value='&quot;Arthritis&quot;' />
            <member value='&quot;Diabetes&quot;' />
            <member value='&quot;Heart Failure&quot;' />
            <member value='&quot;Chronic Kidney Disease&quot;' />
            <member value='&quot;Depression&quot;' />
            <member value='&quot;COPD&quot;' />
            <member value='&quot;Alzheimerâ€™s&quot;' />
            <member value='&quot;Atrial Fibrillation&quot;' />
            <member value='&quot;Cancer&quot;' />
            <member value='&quot;Osteoporosis&quot;' />
            <member value='&quot;Asthma&quot;' />
            <member value='&quot;Stroke&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='All Patients (MockPatientsData)' inline='true' name='excel-direct.42083.733673437499' version='8.3'>
      <connection class='excel-direct' cleaning='no' compat='no' filename='C:\Users\Mahitha\Google Drive\Mock Data\MapMockDataset.twb Files\Data/Desktop/MockPatientsData.xlsx' server-oauth='' workgroup-auth-mode='as-is'>
        <relation name='&apos;All Patients$&apos;' table='[&apos;All Patients$&apos;]' type='table'>
          <columns header='yes'>
            <column datatype='integer' name='MRNO' ordinal='0' />
            <column datatype='string' name='Last_Name' ordinal='1' />
            <column datatype='string' name='First_name' ordinal='2' />
            <column datatype='string' name='Middle_init' ordinal='3' />
            <column datatype='string' name='Name' ordinal='4' />
            <column datatype='date' name='DOB' ordinal='5' />
            <column datatype='integer' name='Age' ordinal='6' />
            <column datatype='string' name='Gender' ordinal='7' />
            <column datatype='string' name='Address' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Zipcode' ordinal='11' />
            <column datatype='string' name='Marital_Status' ordinal='12' />
            <column datatype='string' name='Spouse' ordinal='13' />
            <column datatype='string' name='Employer' ordinal='14' />
            <column datatype='string' name='Phone' ordinal='15' />
            <column datatype='date' name='VisitDate' ordinal='16' />
            <column datatype='string' name='Insurance' ordinal='17' />
            <column datatype='string' name='Doctor' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>MRNO</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MRNO]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>MRNO</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Last_Name]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Last_Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[First_name]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>First_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Middle_init</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Middle_init]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Middle_init</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOB</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DOB]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>DOB</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zipcode]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Zipcode</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marital_Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Marital_Status]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Marital_Status</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Spouse</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Spouse]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Spouse</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Employer]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Employer</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Phone]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Phone</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VisitDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[VisitDate]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>VisitDate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Insurance</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Insurance]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Insurance</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Doctor</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Doctor]</local-name>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias>Doctor</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[&apos;All Patients$&apos;]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Hypothetical Provider' datatype='string' name='[Calculation_0760320175516236]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF INT([Zipcode])&lt;77000 THEN &apos;Provider A&apos;&#13;&#10;ELSEIF INT([Zipcode])&lt;78000 THEN &apos;Provider B&apos;&#13;&#10;ELSEIF INT([Zipcode])&lt;79000 THEN &apos;Provider C&apos;&#13;&#10;ELSE &apos;Provider D&apos;&#13;&#10;END' scope-isolation='false' />
      </column>
      <column caption='IsMedicare' datatype='string' name='[Calculation_5890320174822010]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IFNULL([Insurance],&apos;not Medicare&apos;)' scope-isolation='false' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='First name' datatype='string' name='[First_name]' role='dimension' type='nominal'>
      </column>
      <column caption='Last Name' datatype='string' name='[Last_Name]' role='dimension' type='nominal'>
      </column>
      <column caption='Mrno' datatype='integer' name='[MRNO]' role='measure' type='quantitative'>
      </column>
      <column caption='Marital Status' datatype='string' name='[Marital_Status]' role='dimension' type='nominal'>
      </column>
      <column caption='Middle init' datatype='string' name='[Middle_init]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Visit Date' datatype='date' name='[VisitDate]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Diagnoses'>
      <table>
        <view>
          <datasources>
            <datasource caption='Patients (MockPatientsData)' name='excel-direct.42083.668503981484' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42083.668503981484'>
            <column caption='High Blood Pressure' datatype='integer' name='[Alzheimer&apos;s (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chronic Care Condition 1- High Blood Pressure])' scope-isolation='false' />
            </column>
            <column caption='Osteoporosis' datatype='integer' name='[Alzheimer&apos;s (copy 3)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chronic Care Condition 4- Osteporosis])' scope-isolation='false' />
            </column>
            <column caption='Cancer' datatype='integer' name='[Alzheimer&apos;s (copy 4)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chronic Care Condition 5- Cancer])' scope-isolation='false' />
            </column>
            <column caption='Chronic Kidney Disease' datatype='integer' name='[Alzheimer&apos;s (copy 5)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chronic Condition 10- Chronic Kidney Disease])' scope-isolation='false' />
            </column>
            <column caption='Diabetes' datatype='integer' name='[Alzheimer&apos;s (copy 6) (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chronic Condition 12- Diabetes])' scope-isolation='false' />
            </column>
            <column caption='Asthma' datatype='integer' name='[Alzheimer&apos;s (copy 6) (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chronic Condition 15- Asthma])' scope-isolation='false' />
            </column>
            <column caption='Heart Failure' datatype='integer' name='[Alzheimer&apos;s (copy 6)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chronic Condition 11- Heart Failure])' scope-isolation='false' />
            </column>
            <column caption='Ischemic Heart Disease' datatype='integer' name='[Alzheimer&apos;s (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chornic Condition 14- Ischemic Heart Diesease])' scope-isolation='false' />
            </column>
            <column caption='COPD' datatype='integer' name='[Calculation_1390320162517653]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chornic Care Condition 8- COPD])' scope-isolation='false' />
            </column>
            <column caption='High Cholesterol' datatype='integer' name='[Calculation_1570320162056628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chornic Care Condition 2- High Cholestorl])' scope-isolation='false' />
            </column>
            <column caption='Selected Disease present' datatype='boolean' name='[Calculation_4490320164136082]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;High Blood Pressure&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Care Condition 1- High Blood Pressure])&#13;&#10;OR&#13;&#10;&apos;High Cholesterol&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 2- High Cholestorl])&#13;&#10;OR&#13;&#10;&apos;Ischemic Heart Disease&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Condition 14- Ischemic Heart Diesease])&#13;&#10;OR&#13;&#10;&apos;Arthritis&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Condition 13  Arthritis])&#13;&#10;OR&#13;&#10;&apos;Diabetes&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Condition 12- Diabetes])&#13;&#10;OR&#13;&#10;&apos;Heart Failure&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Condition 11- Heart Failure])&#13;&#10;OR&#13;&#10;&apos;Chronic Kidney Disease&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Condition 10- Chronic Kidney Disease])&#13;&#10;OR&#13;&#10;&apos;Depression&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 9- Depression])&#13;&#10;OR&#13;&#10;&apos;COPD&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 8- COPD])&#13;&#10;OR&#13;&#10;&apos;Alzheimerâ€™s&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 7- Alzheimers])&#13;&#10;OR&#13;&#10;&apos;Atrial Fibrillation&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 6- Atrial Fibrillation])&#13;&#10;OR&#13;&#10;&apos;Cancer&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Care Condition 5- Cancer])&#13;&#10;OR&#13;&#10;&apos;Osteoporosis&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Care Condition 4- Osteporosis])&#13;&#10;OR&#13;&#10;&apos;Asthma&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chronic Condition 15- Asthma])&#13;&#10;OR&#13;&#10;&apos;Stroke&apos;= [Parameters].[Parameter 1] AND NOT ISNULL([Chornic Care Condition 3- Stroke])' scope-isolation='false' />
              <aliases>
                <alias key='false' value='not present' />
                <alias key='true' value='present' />
              </aliases>
            </column>
            <column caption='Atrial Fibrillation' datatype='integer' name='[Calculation_4610320162225661]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chornic Care Condition 6- Atrial Fibrillation])' scope-isolation='false' />
            </column>
            <column caption='Alzheimer&apos;s' datatype='integer' name='[Calculation_6150320162451356]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chornic Care Condition 7- Alzheimers])' scope-isolation='false' />
            </column>
            <column caption='Stroke' datatype='integer' name='[Calculation_6570320162128224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chornic Care Condition 3- Stroke])' scope-isolation='false' />
            </column>
            <column caption='Arthritis' datatype='integer' name='[Depression (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chornic Condition 13  Arthritis])' scope-isolation='false' />
            </column>
            <column aggregation='CountD' caption='Mrno' datatype='integer' name='[MRNO]' role='measure' type='quantitative'>
            </column>
            <column caption='Depression' datatype='integer' name='[Stroke (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Chornic Care Condition 9- Depression])' scope-isolation='false' />
            </column>
            <column-instance column='[MRNO]' derivation='CountD' name='[ctd:MRNO:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4490320164136082]' derivation='None' name='[none:Calculation_4490320164136082:nk]' pivot='key' type='nominal' />
            <column-instance column='[Alzheimer&apos;s (copy 2)]' derivation='User' name='[usr:Alzheimer&apos;s (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alzheimer&apos;s (copy 3)]' derivation='User' name='[usr:Alzheimer&apos;s (copy 3):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alzheimer&apos;s (copy 4)]' derivation='User' name='[usr:Alzheimer&apos;s (copy 4):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alzheimer&apos;s (copy 5)]' derivation='User' name='[usr:Alzheimer&apos;s (copy 5):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alzheimer&apos;s (copy 6) (copy 2)]' derivation='User' name='[usr:Alzheimer&apos;s (copy 6) (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alzheimer&apos;s (copy 6) (copy)]' derivation='User' name='[usr:Alzheimer&apos;s (copy 6) (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alzheimer&apos;s (copy 6)]' derivation='User' name='[usr:Alzheimer&apos;s (copy 6):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alzheimer&apos;s (copy)]' derivation='User' name='[usr:Alzheimer&apos;s (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1390320162517653]' derivation='User' name='[usr:Calculation_1390320162517653:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1570320162056628]' derivation='User' name='[usr:Calculation_1570320162056628:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4610320162225661]' derivation='User' name='[usr:Calculation_4610320162225661:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6150320162451356]' derivation='User' name='[usr:Calculation_6150320162451356:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6570320162128224]' derivation='User' name='[usr:Calculation_6570320162128224:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Depression (copy)]' derivation='User' name='[usr:Depression (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Stroke (copy)]' derivation='User' name='[usr:Stroke (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42083.668503981484].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Calculation_6150320162451356:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Depression (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 6) (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Calculation_4610320162225661:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Calculation_1390320162517653:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 4):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 5):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Stroke (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 6) (copy 2):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 6):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 2):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Calculation_1570320162056628:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[ctd:MRNO:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 3):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[excel-direct.42083.668503981484].[usr:Calculation_6570320162128224:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[excel-direct.42083.668503981484].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[excel-direct.42083.668503981484].[ctd:MRNO:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Calculation_1570320162056628:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 6) (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Depression (copy):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 6):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 5):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Calculation_1390320162517653:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Stroke (copy):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 3):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Calculation_6150320162451356:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 4):qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Calculation_4610320162225661:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Calculation_6570320162128224:qk]&quot;</bucket>
              <bucket>&quot;[excel-direct.42083.668503981484].[usr:Alzheimer&apos;s (copy 6) (copy):qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='manual' column='[excel-direct.42083.668503981484].[none:Calculation_4490320164136082:nk]' direction='ASC'>
            <dictionary>
              <bucket>false</bucket>
              <bucket>true</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[excel-direct.42083.668503981484].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.42083.668503981484].[:Measure Names]' value='44' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Montserrat' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[excel-direct.42083.668503981484].[none:Calculation_4490320164136082:nk]' value='Selected Disease is...' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Montserrat' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.42083.668503981484].[none:Calculation_4490320164136082:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[excel-direct.42083.668503981484].[Multiple Values]&gt; </run>
                <run>&#10;patients with </run>
                <run bold='true'>&#10;&lt;[excel-direct.42083.668503981484].[:Measure Names]&gt;</run>
                <run>&#10;with</run>
                <run bold='true'> &lt;[Parameters].[Parameter 1]&gt;  &lt;[excel-direct.42083.668503981484].[none:Calculation_4490320164136082:nk]&gt;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.42083.668503981484].[Multiple Values]</rows>
        <cols>[excel-direct.42083.668503981484].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Mapping of Patients'>
      <layout-options>
        <title>
          <formatted-text>
            <run>South Congress Primary Care Patient Population by Zip Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='MappingofPatients' path='/workbooks/MapMockDataset' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='All Patients (MockPatientsData)' name='excel-direct.42083.733673437499' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42083.733673437499'>
            <column caption='Hypothetical Provider' datatype='string' name='[Calculation_0760320175516236]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF INT([Zipcode])&lt;77000 THEN &apos;Provider A&apos;&#13;&#10;ELSEIF INT([Zipcode])&lt;78000 THEN &apos;Provider B&apos;&#13;&#10;ELSEIF INT([Zipcode])&lt;79000 THEN &apos;Provider C&apos;&#13;&#10;ELSE &apos;Provider D&apos;&#13;&#10;END' scope-isolation='false' />
            </column>
            <column caption='IsMedicare' datatype='string' name='[Calculation_5890320174822010]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([Insurance],&apos;not Medicare&apos;)' scope-isolation='false' />
            </column>
            <column caption='Mrno' datatype='integer' name='[MRNO]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' default-format='*00000' name='[Zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
            </column>
            <column-instance column='[MRNO]' derivation='Count' name='[cnt:MRNO:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0760320175516236]' derivation='None' name='[none:Calculation_0760320175516236:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5890320174822010]' derivation='None' name='[none:Calculation_5890320174822010:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zipcode]' derivation='None' name='[none:Zipcode:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42083.733673437499].[Latitude (generated)]' included-values='non-null'>
          </filter>
          <filter class='quantitative' column='[excel-direct.42083.733673437499].[Longitude (generated)]' included-values='non-null'>
          </filter>
          <filter class='categorical' column='[excel-direct.42083.733673437499].[none:Calculation_0760320175516236:nk]'>
            <groupfilter function='member' level='[none:Calculation_0760320175516236:nk]' member='&quot;Provider A&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.42083.733673437499].[none:Calculation_5890320174822010:nk]'>
            <groupfilter function='member' level='[none:Calculation_5890320174822010:nk]' member='&quot;Medicare&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.42083.733673437499].[none:Zipcode:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Zipcode:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Zipcode:ok]' member='71497' />
                <groupfilter function='member' level='[none:Zipcode:ok]' member='74966' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.42083.733673437499].[Latitude (generated)]</column>
            <column>[excel-direct.42083.733673437499].[Longitude (generated)]</column>
            <column>[excel-direct.42083.733673437499].[none:Calculation_5890320174822010:nk]</column>
            <column>[excel-direct.42083.733673437499].[none:Calculation_0760320175516236:nk]</column>
            <column>[excel-direct.42083.733673437499].[none:Zipcode:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.42083.733673437499].[Longitude (generated)]' field-type='quantitative' max='-10339719.694938287' min='-11861906.102194374' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.42083.733673437499].[Latitude (generated)]' field-type='quantitative' max='4409758.4713560473' min='2967140.8990247091' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.42083.733673437499].[cnt:MRNO:qk]' max='13' num-steps='6' palette='Mimir Diverging Palette II' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.42083.733673437499].[none:Zipcode:ok]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42083.733673437499].[none:Zipcode:ok]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42083.733673437499].[none:Zipcode:ok]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Montserrat' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[excel-direct.42083.733673437499].[cnt:MRNO:qk]' value='Count of Patients'>
              <formatted-text>
                <run>Count of Patients</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[excel-direct.42083.733673437499].[none:Calculation_0760320175516236:nk]' value='Providers' />
            <format attr='title' field='[excel-direct.42083.733673437499].[none:Calculation_5890320174822010:nk]' value='Medicare Coverage'>
              <formatted-text>
                <run>Medicare Coverage</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Montserrat' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42083.733673437499].[cnt:MRNO:qk]' />
              <lod column='[excel-direct.42083.733673437499].[none:Zipcode:ok]' />
              <geometry column='[excel-direct.42083.733673437499].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[excel-direct.42083.733673437499].[cnt:MRNO:qk]&gt; patients in </run>
                <run fontcolor='#787878'>Zipcode&#9;</run>
                <run bold='true'>&lt;[excel-direct.42083.733673437499].[none:Zipcode:ok]&gt;&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[excel-direct.42083.733673437499].[Latitude (generated)]</rows>
        <cols>[excel-direct.42083.733673437499].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Diagnoses Dashboard'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Montserrat' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-family' value='Montserrat' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='90375' id='5' param='horz' type='layout-flow' w='100000' x='0' y='9625'>
            <zone h='90375' id='3' type='layout-basic' w='80000' x='0' y='9625'>
              <zone h='90375' id='1' name='Diagnoses' show-title='true' w='80000' x='0' y='9625'>
              </zone>
            </zone>
            <zone fixed-size='160' h='90375' id='4' is-fixed='true' param='vert' type='layout-flow' w='20000' x='80000' y='9625'>
              <zone fixed-size='380' h='64667' id='8' is-fixed='true' name='' type='empty' w='20000' x='80000' y='9625'>
              </zone>
              <zone h='8667' id='7' param='[Parameters].[Parameter 1]' type='paramctrl' w='20000' x='80000' y='74292'>
              </zone>
              <zone fixed-size='24' h='5334' id='11' is-fixed='true' type='empty' w='20000' x='80000' y='82959'>
              </zone>
              <zone h='10667' id='6' name='Diagnoses' pane-specification-id='1' param='[excel-direct.42083.668503981484].[none:Calculation_4490320164136082:nk]' type='color' w='20000' x='80000' y='88293'>
              </zone>
            </zone>
          </zone>
          <zone h='9625' id='9' type='empty' w='50000' x='0' y='0'>
          </zone>
          <zone h='9625' id='10' is-scaled='1' param='C:\Users\Mahitha\Google Drive\Mock Data\MapMockDataset.twb Files\Image/Mimir Logo resize.jpg' type='bitmap' url='mimirhealth.com' w='50000' x='50000' y='0'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Map Dashboard'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Montserrat' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-family' value='Montserrat' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='78125' x='0' y='0'>
              <zone h='100000' id='12' name='Mapping of Patients' show-title='true' w='78125' x='0' y='0'>
              </zone>
            </zone>
            <zone fixed-size='175' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='21875' x='78125' y='0'>
              <zone fixed-size='52' h='10668' id='8' is-fixed='true' name='' type='empty' w='21875' x='78125' y='0'>
              </zone>
              <zone fixed-size='24' h='5334' id='11' is-fixed='true' type='empty' w='21875' x='78125' y='10668'>
              </zone>
              <zone h='11001' id='13' name='Mapping of Patients' param='[excel-direct.42083.733673437499].[none:Calculation_5890320174822010:nk]' type='filter' w='21875' x='78125' y='16002'>
              </zone>
              <zone h='20001' id='14' name='Mapping of Patients' param='[excel-direct.42083.733673437499].[none:Calculation_0760320175516236:nk]' type='filter' w='21875' x='78125' y='27003'>
              </zone>
              <zone h='10001' id='15' name='Mapping of Patients' pane-specification-id='0' param='[excel-direct.42083.733673437499].[cnt:MRNO:qk]' type='color' w='21875' x='78125' y='47004'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='7333' id='10' is-scaled='1' param='C:\Users\Mahitha\Google Drive\Mock Data\MapMockDataset.twb Files\Image/Mimir Logo resize.jpg' type='bitmap' url='mimirhealth.com' w='22250' x='78000' y='1167'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Diagnoses'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='1' param='[excel-direct.42083.668503981484].[none:Calculation_4490320164136082:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='122'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42083.668503981484].[none:Calculation_3130320161805044:nk]</field>
          <field>[excel-direct.42083.668503981484].[none:Calculation_4490320164136082:nk]</field>
          <field>[excel-direct.42083.668503981484].[none:Calculation_6440320161921190:nk]</field>
          <field>[excel-direct.42083.668503981484].[none:Chornic Care Condition 2- High Cholestorl:nk]</field>
          <field>[excel-direct.42083.668503981484].[none:Chornic Care Condition 3- Stroke:nk]</field>
          <field>[excel-direct.42083.668503981484].[none:Chornic Care Condition 6- Atrial Fibrillation:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Diagnoses Dashboard'>
      <active id='7' />
      <zones>
        <zone name='Diagnoses'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[excel-direct.42083.668503981484].[none:Calculation_4490320164136082:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone h='9625' id='9' name='' type='empty' w='50000' x='0' y='0' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone fixed-size='24' h='5334' id='11' is-fixed='true' name='' type='empty' w='20000' x='80000' y='82793' />
        <zone name='Diagnoses' pane-specification-id='1' param='[excel-direct.42083.668503981484].[none:Calculation_4490320164136082:nk]' type='color' />
        <zone h='9625' id='9' name='' type='empty' w='50000' x='0' y='0' />
        <zone is-scaled='1' name='' type='bitmap' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Mapping of Patients'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42083.733673437499].[cnt:MRNO:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='157'>
            <card mode='radiolist' param='[excel-direct.42083.733673437499].[none:Calculation_5890320174822010:nk]' show-all='false' type='filter' />
            <card mode='radiolist' param='[excel-direct.42083.733673437499].[none:Calculation_0760320175516236:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42083.668503981484].[none:Zipcode:ok]</field>
          <field>[excel-direct.42083.733673437499].[cnt:MRNO:qk]</field>
          <field>[excel-direct.42083.733673437499].[none:Zipcode:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Map Dashboard'>
      <zones>
        <zone name='Mapping of Patients'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone fixed-size='24' h='5334' id='11' is-fixed='true' name='' type='empty' w='20000' x='80000' y='48626' />
        <zone fixed-size='24' h='5334' id='11' is-fixed='true' name='' type='empty' w='21875' x='78125' y='10668' />
        <zone mode='radiolist' name='Mapping of Patients' param='[excel-direct.42083.733673437499].[none:Calculation_5890320174822010:nk]' show-all='false' type='filter' values='relevant' />
        <zone name='Mapping of Patients' pane-specification-id='0' param='[excel-direct.42083.733673437499].[cnt:MRNO:qk]' type='color' />
        <zone is-scaled='1' name='' type='bitmap' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Diagnoses' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Diagnoses Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAZ8klEQVR4nO3dV3hc553f8e+Zcqaj9zIgQBLsFCmKTYWUtLIsyStb1torx7bWeZIn2b1I
      LuLc5yZ+kqvsZlPsC8flWa+TJy7rrB53NcuUSLGIFRhUos6gzwwwvZySC5CUuBQGBAmAAM//
      c8nz8sU75Xfe97znPe8opmmaCGFRtgfdACEeJMeDboAQAA9qICIBEBuGoijr/jdlCCQ2FdM0
      YRU7C+kBxKaQz+V555e/59KZj/jsqy9x8Phj2Gz3f/6WHkBsaKZpcv7Uh/zke/+b9s6tVNdV
      A/Cj//l9xofH7rt+RaZBxUZgmuanXgP8/bd/wO6D+4jPxZiZmGLXgb1cPH2eIyePEx4aw+Vx
      c+LFZ/nNuS6e2redcp+ba8MTFHUd3TCoLfMzPjdPS00FW+qrmYjO0xeeZkt9NdFEWoZAYmNz
      ezyELnWhAF/511/H7nDQuWcH3/rmf+Av/s2/5Nr5yxiGyU/eu8h0PMnrzx3lr3/+Nsd2tZMv
      auxua+CDriGy+QL/6V+8wvd/d4ZkNs9zB3fQMzYlARAbn9frYc+h/fz9d35IdV0NC7F5vvDV
      V8mmM7euh+12G3+42k+F30M8mbnt/ysK9EVm+N2Fbi5fD7Otue7WMbkGEJtC596dfPUvv0Eq
      keKrf/UNqmprgI+HTE67jSf3buN7vz3DC4d33XZfwTThlcf38zf/8A6fO7qXT04jSQ8gNrTJ
      8QiapnH+1IccOHoIl9tNLpPlytmLpFNpHM7Fr7BpwguP7WZbUw2JTJ7peOK2ena1NvLvv/Qn
      NFWX0zc+fevf5SJYbAifdhFsAj/+9g+oa2qguraansvdjA2N0N65lYPHHuP8+2fZtms7x555
      gvBsnMbqcux2G4l0jqKmY2LidjpJ5/KU+Tx4VCf5okYsmSbgcZMrFiUAYmNYKgCYJkO9g5x+
      5xQ79++m53I3ja1NxKNxPvOFF6isqbqvvysBEBvCUtOgN+maxoX3z3H2vTO8/M9eYcv2jlVZ
      OiEBEBvCcgFY7A+UG+Vu/tv9B0AugsUmsfhlX+0FczINKjaEB7ESFCQAwuIkAMLSJADC0m4F
      wDRNtGIRTdMB0HIpwlNzD6xhQqyHW7NAhVSMb/3Hb1FZ34jpaeT1lw9z6vIUf/7CUYZHIjQF
      t+B2mIQjk3hcLnwBH+l0lkyuSLC1CS2XYmxijmBbEEXLMRqeJrilDSOfIjw9z5a2Vgrpeabi
      Gdpam7A9oIseIT7p42lQ00Atb+bffvOb/Ozb/5nL/c3MxpN0f3SGi10hZrRa9pTFGMv5GLp4
      mS9942V+/stzbAkU2PeZ17jw6/9LbVMTv/5jFY36CDFHLU/b7fzsh98n2FrLexXbSPefobzj
      AIHKF6gJuB/gyxZi0W3XAIauEZudIhzNUuFXMQyTc6feBbefWHSOyekYBx87Rm25B9M06dh1
      gMP7tjM7EyGp+XjhuZPMT0fYd+wEmclBBvpCjEzGyBp2qsrKePLkCUa7zhKJZpZqjxDr6lYP
      YHO66QxW8cYbv+XJz7/OnhYvSd1P3c4A5/snOX5oL4e3VfLLd/5A0rBTXtXAbsWk1luF293M
      Vr/Bz3/1B7745VdJha/ir21j9yPHqXPpXBqcYd+urQxdeo+WzkdoqfU/yNcsxC0rWgoxEjrP
      r989R3DXY7z49BHsNhnHi81N1gIJS1v1tUCJROKB3dYWYqVWPQCKohAIBFa7WiHWhNwJFpYm
      ARCWJgEQliYBEJYmARCWtuwskGmaJBbiOFw+7EaBjAaVfg+z0ThVNTVkk3Fwegl4P17bMxVd
      IJpIl6x3R7Aeh91+/69AiPtwF9OgJldPv4lRt4/c7Cg2BdxeF6rbTd/AdWKxBHabyYuf+yw3
      v84Tc/P0f2LzoU+ztblWAiAeuLsaAgW37yY5M4bh8FJX5mFuPk371nay8SnU8gY8dpNcoUAy
      mcQwjLVusxCrZvkewNSZX8iw7+BhbNlZolk7L+yt4mrPIEeefYmp69ewBffjU1VQVZLJ5Do0
      W4jVseprgZLJJAMTsWWHQK+cOIhbda7mnxZixWQWSFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoE
      QFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFiaBEBYmgRAWJoEQFjaXW2L
      MhS6TM/oHM01HiZTdvYGywkNjNK26xEmeq+Ar5pnnjyCbIouNpu76AEUgu3bcCgmXp+fYmqe
      y/0jPHHyccYvvIdWsQ1HdoGUbIsiNqG7GgJdPX+Kgt2DiR2H3c72YBNn3v+Q5kefwhYbQHOX
      41dVAoEANpuMqsTmIduiCEuT07WwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0
      CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwtGW3RTGNIqffexd7RQvO
      3ByxnMLuLXV09Q/TsecgkZ7LKP4aThw/JNuiiE1n2R5AURzs2LaFQjZBNOegNWDj1JU+njhx
      jJFz71Ao64BUTLZFEZvSsgEwjDxvvn0Kf3kVPtKMxvMc2h7kzPtnadj/OOZcPwXVL9uiiE1J
      tkURliana2FpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpnxoA0zRY5RUS
      QmxIdwZAz/PWP/6E379/maIuIRAPtzsDYGpkcznGxsMYSADEw+3OB2IUBw0t7dizCg5FHnER
      D7c7ewDFTmNrG2YhjWZIDyAebnf0AJHRQXr7R3CXVeOwSQ8gHm53BKC8uoaKshi6yyPP+IqH
      3h1DIL/byXR4iu7+PgoyCyQecnf0AGNjEXYfO85xnweXQ+6TiYfbHQFobuvg7Htv8vP+OP/u
      L7+Ow27D0IucOXWKsgofE/MG+9trudZ7nW37DxHpuYjir+OJIwdkyCQ2nTtO8SP93aSUMl5/
      7QvYb+zwYLM7sWt58oaNYibN5d5BHj9xlOtn3iTrbUdfmJVtUcSmdEcPsHXPIbbuubOgx+fD
      4fFiajM0NtRy+tSH1O85QqQvhOmvxK+qKKpKMplcj3YLsSqW3RnupkeOnwBgz67b0/HIjq2r
      2yIh1pFc5QpLkwAIS7vrIdBaMUyTyGy8ZBm/20VlmW+dWiSs5MEHwDD44OpgyTJbm2s5XNa+
      Ti0SViJDIGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaRIAYWkSAGFpEgBhaQ98LdBK
      TUUXmIknSpbZ2daI6tx0L008AJvuWzITTxAamSxZZmtznQRA3BUZAglLkwAIS7urcUJ8apSh
      uTxqbo65rI29HfVc6h5gx4EjREIXUAL1HDu0T7ZFEZvOXfUAZZXVzIUHmUxCo0fn7fPXePyp
      I/S//xtS7iCF2JRsiyI2pbsbAik23IEKnMUFrs+k2NfWwOlTZ6jeeYjCVC9pVHyqSiAQwGaT
      UZXYPO5qCGRXvZx84vHb/u3m5iiP7u5c7TYJsW7kdC0sTQIgLG1N7hZdGBzjH09fKVnmxeP7
      cKvOtfjzt/nmd35a8vihziBf+5Oja94OsTGtSQA03SBX1EqWWa9fYb0yHCl5vLYisD4NERuS
      DIGEpcmCmU8Yn4mRLyzdc6lOO8H66nVskVhrEoBPCA1PEE9mljxe5nVLAB4yMgQSliYBEJYm
      Q6B7VChqzKeyJcuU+dzrMtUr7p0E4B5FF1K8d7m/ZJljezrY0lizTi0S90KGQMLSJADC0iQA
      wtIkAMLSJADC0iQAwtIkAMLSJADC0lZ0I2x+doLR6QV2bt/C4OAI23buIBYZBm8NjTXla9XG
      h8JMPEG+xDMSDpuNxpqKdWyRgBUGYKT3MpNGHdno+9S2tvLHt94kqwRwFnqp+dxL2E0Tc72e
      dNlkrl0PMzufWvK4163y+ScPrGOLBKxwCNTUsQdHIsJ0Ko9hgs2moACKYkfTNDKZjARAbCor
      6gE8Xi8d+w4RbKxieCTME888R3xyFMWzB4/TCU4nyWRyrdpqGfFkhot9IyXL7GxrpLm2cn0a
      9BBbUQAClbUEbrznnTsW9wNqbG1f9UaVMhlPcGkoXLLMZ4/uxbdO7VkLRU0vOVwCaGsorlNr
      Hm6bbjVoODrPhcGxkmUKWukH8h8m+aJGOpsvWSbgdeF0bLqPel3Iu7LJTc7N82H3UMkyJw90
      ygzTEiQAFvPm+RCpTG7J4xV+L88c2rmOLXqwJAAWUyxqJe9HfHL4GE2k6B+bLllfZ7Ce6jL/
      qrVvvW2IABR1veRx3ZCp1QchkyswOhUtWaalrpLqsnVq0Bp44AHQdIMfvn22ZJnPHd3LsT0d
      69Qica8+6h0hWeKC3OtSObJ7fWcNl/PAAyAeHnMLqWX3VdpoZDGcsDTpAT4hND5FeDa+5PG6
      yjJeenz/Orbo4ZXO5ktejANUBrwoytr+8pwE4BP6IjMMRGaWPB5ML929i5UJjUxwPTJbssyX
      njmEw25f03ZIAO7RRGyBH717rmSZuppy2Rdog5MA3CPDNJf9DQR9HX4x8/rUHD9468OSZbYF
      6+VO8BIkAJucYZpoywRNlqgvTQKwTvKaTraw9ApOu10m5Jai6wbDk3Mly1T4PdTc+LUfTdOX
      PSm4nA4URZEArJffX+rh2vDEksfrKgJ8+ZnH1rFFm0dR17nQO1KyTGdr/a0AXL0epn+89BKO
      V04cxK06JQAbUTSZ4hdnSv/IYE1VgG0tdSuuO5HNEU8tPZvlcKztrMu90HVj2WdAfD43j95D
      3fcZAJOui+fAX8/ezi33V5W4pagZzCXTJcvkSvyUUym/u9TD2MzS9zq2N9fxpacP3VPdb13p
      Y6jEUKW5puKe7qMUdWPZZ0DaGu7tl3vuLwDJccbTXlwzfRQ6t6DeV2Vis0tm88ynl/7NhDLf
      xlsKcX8BcJeRmb5E3uVm43Wcwqrm01nG55bu5QCMGyuM7y8Azgo+/4UXURS7BECsSF9khlPX
      BkqW+eLJR7mXS5Le8DS/vdhTssy/+tMTeAHFXKVJ4kKhQD6fJ5vN4vF4bjumaRqOT3km9dPK
      LlVe0zQMw0BV1WXLrrRuwzAoFou4XK57rtswDEzTxP5Pbt2vpB1LlTdNE8Mw7qpuXddRFAWb
      zbZs2Xt5jcCa1L0an2OxuDjN7HQ6ly17s+5VmwVSVRVVVVEUBb//7p4QWknZYrGIruu43Xc3
      jlxJ3bquUygUPvWNvt+6V1J2LeveKO1Yy7oLhQLAHSfJUnWv+t0Xv99PfHqcsakYM+EhpmK3
      b+8x0NtFd08vBc249cLisxMkUlmGR0fpCfVx8xbGzGgfM8mPU+12u5kIj1G87QEyk96ubv7p
      nIjf72dqbJBzFy6RSKXp6fu4uw11dfHJKux2Ox63m5HrA2RvVJ5LRpmJp+jq6vrU1wgwNjaG
      nl1gaGyU/sHxW8f7e7spaMatsnoxTWRijonwKLnip9+gmRgbQ7tZt2ky1HuF0+evMNjTRWqJ
      CR+/309sapT3/niaRCZHz5ULXOrqJxGb5tzZc0zFknRfOktX7yBur49UbIqz584zFU2wXLfv
      9/sIXw/xwblL5G+8llwqxnTszu1abr4fU2PDzKfzt73+3q6uOz4bn89D75ULnL/Sy3KLRW6+
      HyPX+8kWDSLjY9yomlAodKtcf1cXqCqq6mS49woXrvUxExkjW+JhQ7/fv3pDoE/66K2f8cbV
      OSqTg3Q89WdEr1+ltn03WmycwfAM7e0dPP/iSwTcix3QxXf/H5F8gOFwhLaqMlR7kchEko6t
      fnpG0hx/5kUe3d4AwBs//TFVtfVEix4qzTniZjmpsS6Knir2dQY5fzHEsy9/mc7mSn7z47+j
      4fBBrp4LESjzUWnPMVmsID12EVdlCy9/+TUq3YvDinxymv/61/+Do5//58S638bl8xO1B8kO
      n8ZX20FTlYKz4RGeOrDt1uv88Q+/y462ei7PQo1qo5hNkNFVXMYcqaKHV77yNWp8DjKJEX70
      f06j6HPs2rOP7p4Bjhw9zPkzH3D46FEuhMKY0UGef/2vaK8OkJwa4KfvdHPswA6Gr54hknWy
      f0eQwaksVY40iaLKK1/4HG6Hje9++zs88/yzpKbD9CddVGdHSdlcZEwXyQUde36S7c3VODue
      pCbRTV++gpnBEO1N5fSNz7O7vYbR6QRbtm1hIDTOV77+Gl4naAth/tcvTvP03mq6JjQSsVl2
      tPgZTJbTwDTjKQd/8dVXUW/cwTaKGb773/+G6j3P4kiM0NRUxx+vRAi6U6SdZbz8xdeo8S8O
      TaYGzvFOd5IDO1rRkxN8cDXC9hYPkZk8Bx7dTffVEEeefpGtTRUffzb/5b9x7OXX6X3/lxx6
      4nFCI0m8SppgtZurkRxVZHn+a1/DT5Hv/e3fUrnzCIQv0fj4c3T/4SzbOluZmI5x8sWXaa70
      3voM1+j+u4NtjT4atz9CMR0nPB2jmM8RS+XwuZzkclnM257zVSivqMBhV8hmk8xGFyikkxRN
      kyMH9zI0PnVb7Xa7neuDA4QnZqks9+P0VrGl3ktf7yCJTA7TvHle0RgaGMIXKCe9EKP3+gjh
      kRFwqiiFJD1d1+jp7SGeNej+6EMqgzvounCGjOnl0f2d6FoBf00ztc4c0ws5gg0VhLpDDI5O
      3nj3HFRXlIFpkExESaQLpBYWUDzl7GxyM73w8enH4wvgdatMhcdIZgtMDPcSjccYG5+gaetO
      GmuqKOQXezvV46WYijI4NAY2F/s7WxkejRBsb2MuliabiN06K3tUg76+AfAESM9NMJPIE/A4
      SSU1nvvMU2QSMSJzSQI+F2AyMTqMovoIjw2TL2qk5uOoHhcTkQlqmjoYH+imO9SN6fRhLyQZ
      Gp+hosJPNjZN3uFD0bNcHx5D0zR6QiF6u7spAJGBKxS8DYT7rpDI60yODFHT0Ayucjpby7h2
      9Rqh7hDRVA6Pt5xUdIKhsQlCoR6ikyPMLGTpaKmht28QxRMgNx+ht6eH4akFus59QGX7Lrou
      XqSquoLUQozW9k7yuSyhnh4mR0a5tcjEgGBHO72XL1JWXUM+nyZQEyQdncZly9MX6iYU6mYy
      ngXMtekB8tkMikPFZuoUTRuFTAKnJ4BRyFDQFVyqA4/Hi822+LBDIZdBsavk83kUBUIfnaJr
      NMWfvfoCLocTzVTwuRfHdZl0GjDIawpeVSGd13E57dhtCorNTiqVpryyAofNRjadIJ0tUl5Z
      QSGXQy8WMBQHdjSKph2vakM3FVS3l2IujcvjI5dJYwB+r5v4QhqX6sC2+L6iqiqFfAHF4cDr
      dpFOp/G6nKTzGuh5Tr37JllnHc+fPIzDBjanF9WhYBgauZwGpobD6SSZTBPwe0im0ng8XhS7
      E0XPoSsqPs/ihXgmtUBOU/Codmx2O5qmY3e6MAoZiqadMr8PRVl87xLpHJWVlWSS8xg2Fa9q
      w7CpuJx24tFZcLipKA+g5bPMJ9IEysuxGUWS2SLh7jO4gkdob/Ch64ChYQA+r498Nkk6p1NR
      5mN+IUGgrIx0OoPLaaOgKzhtCijg8fkoZNPYnR60QpaiboJeJK+ZeDwunHaFomaiAKrbg9Oh
      kFqYR1OcuGwGmYKO26Uuroey2ckkk7g9HkzTxOZwYRZzuHw+cuk0YKKboLo86MU8pl78+Dvl
      82HDJJ1MUDDs+N12MgUNh82J6jBJpPP4vS403cChunE5bWsTgJUwTYPxket4qxrIJhK0tjZj
      GgYmCvnkHCn81JZ/+sVpbmGGuO6jsWr9N0JMzUeJJrI01pQxmzZorq3AMHQUxXbHU0yFbJLJ
      mRgVNfWU+9wU0nFm57MYdhety9zBHB4epr197R4kX/z4Fdb4wav7kk7EmIuncCgmisOOO1BL
      VWDxRBEeHqa+vZ17/Tny1V8LZGqceuv3aP5G/HqUecMPCxHqt3Ryvb+PXYdPsDP48RqWrvd/
      Rc+Cj2BTgiun/kjD9n3saq3gSv84O5r8xHy7eHp/y63y77/5BlPJIkZRZ9/OIBMZFx9GBtl1
      +CQ721a+NuZenX/7V1wciXDwwGFmck58+VlqO/ZgxseIFt288NwJHDd6uImeC/zszCDPPf0k
      kcEemppbmI9HmYhlaN+xD7IxHj9+7OPKiwn+4Re/w9/QRiExTTYaZmBW48XPPoO6yoPWtX7k
      cDVc+eB3XJ2ysbO5nFwxSX84yxPHD9B/JYTX7+fZDRWA/AIDkymePunnnTdOMV2w01ZfRXNy
      nP7RCfz1IwRsRRyeAPXVZYvTj9563C4Vf00LjvwcH5wfp6OpnNDwDOXBOiIRBVegkpoyL7PR
      JE6HSrCjlms9wyykc9QEd1Lhc5FLxpiJp/BX1lEVWNvb7qYJ1dUVzEVjLCwkURrb6PnoNDh9
      eJQ8fUNtlKt2GoKtANQ2tKCkpgn19jKXyFMZcIGe4+qVq5iFFMHWFsBGS0sTGHmytjKy4wNg
      6lyORXn0+AlsikkkPIGJSVNzC7aN/91dJQpNrW04ijPkijqt7S10X/wIxdeCIzPD1GSYhKFQ
      Xd+E27GyN2VNhkBT40PkbH7IzFFwBPC7HNTXVdHfO0BtYwPFfBGHx09tZQDT0OjvCRGoa4Fi
      AafdxKU6GZ2M0dFczXw6jw0FV6CCqoCH6ckJFMWG26OSyeSxuX3EJ8eoC27DQ5a5+TS+8hoq
      1zgA0alxxqdibNkSJKcppKMRyuraMDNzJHUXfufiE2F1zc0UEzFyNi9+h0b/4DAVVTU47TY0
      m5PM3AQ2bwVupw0UG02NDWAUmJhJgLE4r+132YjEcuzY1sbM5BQGJg2NTZYJwPzcFGpZHXoq
      SqaoMTsbpam1lVxWw2nk0e1gGApVtfW4HSvrIh/4NYAQD5I8hiQsTQIgLE0CICxNAiAsTQIg
      LO3/A0yIzeId+EdUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Mapping of Patients' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9abBkyXWY99219nr71v1eL9PbLD09g5kBCECUSFGUFFLIJm2FrbAj7HCE
      LEfY4V8O/3bgj8IOW+FFprWDkAiSIilRJEGIBGaAWYDZZ3p6ppfpfXvvdb99qb3qrv5xK+/L
      yspbr0c0CUcIBzHoevfmzTx58mx58mSmEcdxzE/hp/DvKZg/aQR+Cj+FnyT8VAB+Cv9ew08F
      4Kfw7zUcCEAc8fjhbS59doV6u5f5Qeh1WHm0TkyXH/3oQ+VtzOajB1y8eImdevtPCWXYWlvh
      +vUbrKxtpc+6jU3eevfSn6jedmOXSxcvcn91gyedGW09Xub6jRusrm0x8EnQ5f7KGlHY44c/
      eJMw4/s4jlh58JCg/3ertsP169e5c3+ZIHoyJKLA49133h9oo9vcZ21rj15tnTff/+ywGvj0
      w3epd/RYRmHAvdvXuX79Orfu3ufO1Y+5tbKjLVvbWePixYs83tpDh31r7zEXL99+on79WYD1
      jW984xsAnfpj/re/94+oVIuQn8TqbPLqD94iPz7H7vINOlaJu9cusb+5zK98819y5rnT/Jvf
      +H163TrFqSNUizke3/yYf/Dt71AumFy/t8mpo2O89r3vU49ylOMG7374CddvP2Tx2CK3P32P
      yzfusrHfpb31gJt3lymVyvz49dfY7RpMl01e/ePv0bHKxI3HvPbmB0wtLFLKO3z313+Fm9sx
      7/zRv2Ji6TTXr16h2Wmx/Ggfq7vDp1evsN/qcemD97AqswT1NX7wgzeI8mO0Nu5y+dp9llfu
      UZ1d5Pan7+JOHMEOavz9v/d/Erglrl+9xtKxBd5+/TXWmjHjVpsPPrlMbBd5cO0jLt14yNFj
      SziWyXe+/Svc3gp559XvMH3iLNc+/BF31usUu4/5u7/ybc49c54b167yzJljvPHaa2w2Iqqu
      xwcffMLVG7eZHcvzP//d/5WxE+c4NjvJrQ9f5V+/cZnNWx+xFkxQ8jZ4/e0PmZg9ytqdK3x2
      9Sor2y2qdo9bq3sE+4/Yavj88b/9Y5579gSvv/YD6oHL46tv8u3v/Jjz557i6r0NTszkee3V
      H9K1itjdbT745DNu3F7lxFPHsYyI7/7Ot1ndadLyoLP9gLZZZfPeZdrWGOWcydVPL/LBj17j
      netbnJx28HJj3Lv8KVevXsauTjNRKdLcus///ve/Sb5c4vLVWzx7epE3f/B91usRi/MTXHrv
      LS5+eombqx1Oz+f4/qtvYJWnmRor/cQEILUAbmGC82cXuPjJZTqdPf7ZN3+D0+dO86v/6J/y
      2Udvc39zj7ff+AGRU2Fsao6F6Spet8N0GX7rO68D8PlnF/nyX/plfumX/yb/2S//Iv/mn/9j
      CotneOv3v81nV6/y4c0NWssXeetH7/Db3/+IKafN99/+hE/f/SH3t7u89Qe/zucr2/zrb/0T
      3nnvR3xwfQW/1+WNP/oDthpdwvBAp1THxjHigObWMn/wg/fJ52D10SaX3vkhHavAb/7qP2du
      usiv/fZ32V1fZXt3g1/79X/N55fe4drKLuH+Mq+9/ga/84dvU8pb1Nfu0hs/w9/6m7/M3/nb
      /yU5b5+13Qa/+6v/hNsPbvHae1epr3zGb/3xu9y++Drfe+dqHxOD6vgYRCG9ToPV9W1e/Z1v
      sxfnKY/PcmS6yoPlh/zoD3+LT++v84e/+atcunaFd68sE25e56N7dcYrFU4eP5L2rVCukndM
      /MYa//jX/y2nlib55r/4ba588CZ7cZkrP/xd3vnoE969dJN7Vz/k84ebADT3Ntne3ebbv/br
      5MvjzB49SdXs8HBtg9/5tW8xfvQp/ui3f42rVy5xZbnB5vU3ubpcByAOAyZnj/CD3/0N1jbX
      +c73XuO3fvsPKJcLWLbLixeeYbtl89/+1/85nf119pp7fOf3vsexE0f55j/7NUJg9fZV5s//
      LP/xL/0Sf/u/+E944/f+Be3CItfe+n1ef/N1/uj9u0yXHUJCvvUP/x8anRa/8iv/JLV+PwlI
      BcDr1PCscZ5/apqLl29jGRHbW5vEpk25lOPzTz5iZatGsVQm7NR5+GiD4vgsF84+hef7AJx7
      7nnee/X3efV73+V3vvsGbs5hZ2uLjhfiWCYz80eYm54gNCyC9j73Vh4nCNguL730MqW8Tbfd
      4dyLLzM/f5zzxwr8wR+/xannX6G98ikfff7wAHPD5D/9b/4HnpkvcvzMsxyZqvZfuJw9/yyT
      U1M8//zT4HV578dvEjtlYt8jBl788lf4+l/4eX70u9/mma/9Aq5pUJk7CZvX+M4ffZ9vfus3
      +OiDd9lpxzhmSBDC6WcuMDdZJfJ75CeO8NypoxIuNn/r7/z3lOr3ubvRouAaGPkyRqfGw9UN
      ABwn6dtTz73ITDnPzNwR5menCGKDohtz5+7DA5chjnnx5/8jfukXXsIIPba3tjFtB4jZ29mm
      6YWMV8usPbzF1Vv3UzQuvf82rdjBiEPK5Sq13XU2tuuAgWObbG9v4YVgmQZzRxaZnRrH85Kx
      i6OIne1NAmzOvvhVNi5+j8JTrzCeMwm8Bv/w//q/mT/1NA9u3cALEkxD32NzcxPTdjGAI089
      w8NLb/K9V7/Pt37z97Bdl72dLZodj2KpRNCts71bI8bAsS2aHY+vfu0rP9GJqJGuA8Qxq/dv
      sbrd5PkXXoDOHldu3OXscy9SsX0+u3oTN1/gzLlzrN27jlmdplNrcfbELHfWG5w7mTDExuo9
      7q9u8/TzL1B1Qz755DIzx84wUwjZbJuUaRIVJ/n0jT9idXsLr3SGv/H1U1TnTlByQq5+dpni
      9BLHpvJ8du0mS6efxexs82CtxoUXL1BwLFbv3aA8d4rxkoPX2mN5p8fxuRIPVvfJ02V88RiP
      7z/gzKklbt7fZHEqx80HGxTLZSaLBs74Iq31O/zTf/ot/rv/6X9hoWwD0G3scvnaTWaWTrM0
      lefSZzcolIocWZih4VkcX5hk+c51Npvw4oVnsE2DlXs3qcydZLzkEvpdrly+guUWOH7maXaX
      rxMVZvFa+5w9c5Jrlz/DHT/Csak8G/WQqt3DcyewOltstAyeO3uCxvZj9oMcx+anANjbWOHm
      ww3OX3iBV3/9H5E/+zJPLR7j3MkFrn92idDKMT2/SH13i6Uj01y79YBCvsDTT5/h+meXmD26
      xH475Kn5Kp9dvsbCU09TMTvUwwJ2bwd3YonJssODOzdptruUpo5Sihv8i2/+M37xv/of+dLx
      SUK/xaefXCUATLfA4kwVq+zwD/6P3+SX/sZf4Ni5C0xVCwDUtte4fvshx88+y/xEgcuffEJx
      5hhnjs+zfOcGtV5MqTLJ0ckcn169yfGzzzE/Wfmz5/w+GD+RhbA45ObVT9msB7z85Vcoutaf
      OQoPb11hLyzx4jNP/Zm3/e8Kjx/cpTS3xFjB/VNtZ3P1Lve3unz5xWcxDSOjlMf168s888zp
      P1Vc/rThJyMAP4Wfwv9PwBY/Go0GrXabMMoK2D0ZWKal1RpRHGEaem8vCEPivgdsGAa2mViE
      OI4xMjXQaIjjOK0zaT/mMFm3TSttzzRNms0mlUqFMBymyZ8Et1Hwk6r3T6vdJwHLsmg0GpTL
      ZaIoGllWxVOM6b8L7mEUHQhAFEWYpokfDc/J4zjGsWzCKCKK9QiahklMhGPaWH0GNgyDOI4J
      ggDHdoYQj+O432ZIFMcUnFxaRu6o/F0URWm98rv0O2LiOCnX8wfXM0YSKY4xLQfTMBMhtG1c
      1yWXy9Hr9QbbUARJV69uYESfRB90AynKiD7q6KHSUK1LV8Y0zcw6DuvLnwQOa9MwDBzHIZfL
      4bouQTDIfzKtZJrKdch0EP3Mal/+bcXx4RNw27RwLBvHdjD7iOgqtEyTvJ3DMq0hosoaVB20
      OI6xTRODROvqEO31ekN1mqaJaZoDDBIT0/F6dLwuvcBL2xjFICleJMSWNVCz1SKMIvwgIIoj
      wjAkCEP8MBhg2DiOiaLoUAsjyutwkS2PKvB/Ui9VZRhdu+rv/y9A12YWHq1WS1tO8ISgswC5
      T1EU0W636Xa7Wj6ReU1+H8kWABImVsE0TcIwpOt1k9VRiUaOZRP0XaYojogZ1jKGYZDP57Wd
      Fu9t68BqCG0lIAzDxII4zoCEZ2rMg5oxDAPXtiFOXCAv9DPxAPDCANu00var1SqGYRBEIUF0
      4Ka5Gmv2JJBlQWTQaeQsxhyyfk/oDujaF5bJ1PDAYfU+SbuH0ahSqaSKRMYhy5ICQ7jq3CO5
      XbW8ZVmDAmAYBnkn168ofYrlmKnmO0Bg0CyFUUQYeTiWjWs7h3ZaZmC5gyqSpmlSKo1eKZTr
      KLjDwhbHMbHGt5S/Swkn/W632+TyuYG5hGPZSV2SmyfgSbXpYQz9RfzaUS6SDKpikb/Joj0c
      uMajxlJ263S4id+jcOz1eqmydV1X6/7q/oaEkfP5PJaljybqlIqYkw4IgG3bOApBxb8uMWEY
      YhhmYgVigBjXdYcqt0wLQ+q0SgDdM1nydb5elk8sv5cHQQy4eBbFEaZlDgy42gaAaRiYhplo
      B8vCsW3KxRKmYRD1y1nGoFnV1aPiKuMCw4w1yufX1XVYv9X3grYqo+q+/yLv1fF60jpkHG3b
      JgxDLOvAfc7S/DpBNoxkzpaFk5aP6Lvf8ge7u7sUi0V836fnexQKBdqtFsVCEdM06XQ65PN5
      wjDE8zzK5TKtVgvDNLBth1a7RbFYJI5iwiBI39u2jeM4tFrJ+yiK6PV6lEol2u02tm1j2zbt
      dptisZjWf9h7Ub/jONi2PVR/uVwe+H53dxfDMKiOVYmimG63Q7lcodNuY1oWruPQaDRSq9Nq
      tcCAKIwoFos0Gg0KhQKmadJoNBgfH6fb7RJFB++FJmo0GlSrVTzPI4oiCoVC+r38vtfrDb23
      bZtOp4NpmuRyOer1ehoh6XQ6VCoV2u02pmmSz+ep1WpUKpXM91nfW5ZFLpdLvw/DkG63S6VS
      GWhfrr/b7VIulwfe7+3tYVlWaqlbrRaVSoVutwtAoVCgXq8PvK9Wq3Q6HQzDSGk3NTXFKJCV
      R9ZcNI7jxN0NfCzTTL0R1bpGUUQQRwfrALVabaCxXuAnWhODnONmRhtEhX4YJBM2EgNhmSa2
      ZWeaRxBGJNssCmmNooggCIasjQ5ULSy0hWEY6WRcaJon8cm/COh8ULUv8t9P8o1av+75k+D1
      JN/paPKk84kndcUEJNY00cRCOeZyuXSMdPWqoLYTxTFdr0vUx8EyTfJOTtu+HwT4oT/oAsnR
      miDwCcIQ0zSxNZGdIcTiGD/wCSVmd20Hx7IHyokwqmmYdLweURzhWPbA5FNuQ243DMMh10cu
      pz4X7QpB8Dwvwct1ByZcWW6M2le1XiHcwKHhNx1jZLk4WZDlR8t9FN8HUTiwrvEk9Y56fxjI
      rovs7mUJVEq/OMKyLFqtFvl8/tCxUNuUy8VRlLqpkAhEEAQDcwNR3rFtTNMYFAAZbNMmCMM0
      qqL6UbpOmYZJSMIQlmkORHbE90GYRFQs0yQmeS6iLK7tYBnmkOZW5yM6EARX492y9XEcZ+Cb
      NKJEYrVUgZCZ6otOanXmeRTuYpCyrMGottQ2er5HEIWYjpnGubPmHvL3Mi3UMR5FgyAIEo1r
      WQPjNGo+o9LEtu2hZ1kujqr85DbzTo4ojvCCJOLnhQFx6GOQ8LRtHSgFYgYFQEZUxPxjBgdC
      nVzIcXOZpInw+OQcN/0uCEPCOIlrh1EkzaXj1NKodcptwfDCSIqvosnlb4MwxJFcIDFhkq2X
      jLuoV56UZ1kBOSyr0/hZkzr5vcqQKgM8qVuRto3EtP26BeNnRXREH2RhlN+pv7OskPpMp4h0
      4DiOtg51nL3AT0LvMdiWhU2Ca+AnQui6LmFkYBj9tZo0uJcEb2QcIuLhMKiKuHh+mEmL4mRB
      K4wOBi+UVo2jKMIL/YG6XdsdaCOLIXTtqb9VhkvxJMYPfSIiojAaSLNQ+y4Lkwy68KBMhyAM
      gRinP+ESAqzTdHLbulXOUaCb/Kl1Q5+umjEUbWfNO+RFI/k7nRWQ6Wzb9oBLqKt7lBWM45h6
      vU6hUBjisax6MRI3L02jCRLFalmJK20aJmF84NJHcUTcH3/RJ9u0BqNAakcNaVlJZgLZ74Vk
      AuwFfhoaRWOuslwYefEt7M85ZGbo+h55Z1BQdCBrYhlX0zBxLIeImJzrYhgmYTyY0tEfmiQE
      ekjMWweytRC4fBFQrcQX1fgqmIaRjoHAT64/y03Mml/I/8r1qWVE3QKyBFYFwzCYmJgYCIPq
      yggGx0w4M05ZzcDN2+nYG4aBG9uEcRKOT9wecyA0n7peaiPyb0tyAWLilMkNw8CWIimBmDwb
      6f+l0Ool4bK87VJwc0SRSFKLsfrIqi6HTFjXsgcQzhoIdXBlS2JbFqZtsbW5ie8HlCtlbMum
      Vq8xNjaG7/n4gU+1XEnCqq6D67jUajXGx8fxPA/f9ymXyzSbTVzXxXEcarXke8/zCIIgDZ06
      jjPw3vd9fN/Xvp+cnCSXy6UT9KzBF33TgW6OlOUqqto0yxrofHbVwo6aE2a5hzKu8u/V1VWO
      Hj2ahrKDIBikmesSE9PtdCj03wdBQLFQpN1uEfXDz91ul0KhcPC+WKTVTGguQvkilO77/kEY
      dH9/v7/QdRB6lDsexRHtXveAoBjpRDeIwswkOUg0Us52hwQsjMJ0oiwTUCW8+uwwUIUkiiJM
      26JeqzExMZFGqnRuk/gtTKVO8OR2RkV/dK6kWs/Ozg7T09MDAhDHSSxbto6HaWC1brVPwrdX
      BWKUxtW1rfZFDj7ocBmFq/jXdV12dnaYmZkhCILMujAgjvTCpKO5GB/B1ykvSIKpjQKJDg0g
      r9AgJiaIwgE/PwuiOE7CXYaFHwYE/ZQKwzDIO6NDnzqmlzVYlukWEIYhXuiTt/L0vCQ60ukv
      0IyCnO2k6dtPGtZT4TAtOURjCUyFDqpfrD7XtSfeCW1H36rrtH6Wj57VL7UPo4Qq653sXhUK
      BeI4TnO/BM1lt0YFlQ909arZBYIe4tmQAKimKa28P4N2TDvJhhT5+yQz7ChOojpRnKRO25ZN
      1+ulHlGSLh2n+URyW3IHdAMoE17VurJE64gk96NSLmOSzG0Mw0ijPwke0YDfHMUxpoiWHTK4
      8m+5Pd1gp/X38S4UCkM4q3iL8jpmz/LRZe0sVsJ1WvkwHz3LsqgW5kksM+gT2OI4ptlsUiwW
      h/D3fZ98Pp8Kg4q7ipf4LbuCuj6Jcrb8cCQhMMg7LmEUJcLQz6VwbQfLtOj4PUwMYpIkIzEd
      MAwDE4Ou72GaCrFGmF+d5hELG7YmZj6qDrEXod3uUClXyEsr25AYtyAM+kLc97eNw+P/o9pU
      zbwqQIIRGo1Gkj6itCVHksS/8qBmKQyVyXVC80WYVh0HdX0GBtcBDvteBVGPmEupczix+q/D
      d5SbdVi5KE4yhzPXAXSIEhsDGtwyTKI4xveTfP0I0jSIxL3JYRikE18/8Afqz/U3wMgDog78
      AA4koS+xacc2LVzb0UYxZCKaJGsMTj/+L7eZElrJYBW46BhN/k4l9igXTmY+UUYO/cnfHRYK
      1v1W8T3MD1frles4TCEKd0W4V3Ec4zjOwGruYUIm421ZVrIfI072XxiGQRwmFqBYLGpTpOX+
      H2bV0rbiOMlyiEJytju8IUYlgE4rCeJGcdzfLBKnIdAYUiGxxF4Cv4cX+APTCLufbQkHKQ4w
      vCFEQBCG/Tr6xOVAs+tcJeGfyi6dui9BlJH7pBIsy8VQNazK2Gq5UWXEM50w6f5T8R2lGbNo
      k46hNKYi2U3HTKoFEt8L5ofEEqh4ZQmAPC4CGo1GugHJwEgnr6JNORVGrVulqa7PYZTwouDP
      XuANCoBOE4nffuAPLCwkH5D6+MlWRDEvMKSdTIN1ptqTAw0nRyfUttPv+pNuuWmx5VFlDF2f
      AOr1+kAZlfHUAdGtBMvlZUaQy2ThomPYZrM5gKeOyXXjISuKUQIwSrjUv03TTP1wua4smtq2
      nWhn62BxUd3SeJhXkbqpjkOxWMR1XGzLwupPguUUEd2ENo6Thci216Xne/iBP4TvAc7mQNQR
      GJ4Eq4OXSpxp4mASRV46WZQH3rYs4ihZqLBNC9/3k6QzBhks7TiDndARSbgZkLhbkERH8k4O
      PwzSvKEn9Q8rlcrQM7UdldlBP9HO0m6H+dVyWwBjY2Mjv1XdQsE0WXtlYXhrqdwP+X1WH3QM
      lCXghmGQ72dxilXYLB4Sv1UaiGcihi923KnCmEUf0zTJmy5xnOpjPf6Aa9mpq2UYRvaeYFnT
      RFGEZZjaUx0Egf0gIOqnHcQZG2XkAZNPn8hiGnUgLdPENBJr4dpOajnUyII68xd9Ufcmy3hl
      uToyHjo3QMVftC27Fiod5OedTkfbd903o97rrJL6/WH1yOV1FkIHgpnFQpPOBdTRQOAp00mM
      z2FKRvTTD5IMhITn+nrZSPz8UNnfLfjEMJJgjki8HJoEC2nVLe3H8UHYUPyt+mFy+rNpmpkS
      GcUxGEbmexWMvuZX8R01UCpuYnO9GlLUTfzUPop/5YWfUSG2LDxHMaEqUDpNLN6rjCW+kSMx
      OvrIliwZz/ggLJyBh1pfFp+Ib+Rycj0y3dW1lTiO0w0zcr+iKEr5JMnzT4KHURQmmZ79tsJo
      cCVd1FHOF4doYZomjmEQm5p1gFGSDokrEsQBkViRkyvuhz97vp+GGgM5W1TqmNn/VmxeOIxx
      dJDF7LrBBCiVSkPujiifxXS6sN9hbcrls+oVz3O5HEE/UCBW1/0wwOkfFPAk9ejcCrWs6rak
      zxkOjerK6tYhssZMbldMqnO53NA3quXq9XppWnSyo8vC64enVWESqjOLP5K6h+mtWpeRLpA6
      gTogsqQtZU0aRynCIqIgJkUqcaNoWBPrJlxZuGWVV/GVCSC2CWYRRcZTPBcWQzx3HIdyuQzo
      j3vR1a2bp4iyzWaTmMRk+2FA1/f65y8NTq4jRZGoNJDbkQVCxkl1BdUxEaAeDyOXU+tTeUQF
      cZqHioOu7UKhQM/36AXewQ5DjZICBuaQat0CDCCMwoF6VNzNrI91INJMTcMcYCTbtCi6+X76
      gJGu+iYLJPpwoNv3GXW5/zo3RcVv1HpB1hwg69QA2f1RV5lFv0U7hUKBXq+X7kseNfiyu5Gl
      qeTQrOqGCVr4YZCpweT+6ZhR17ZhGHS7Xdrt9kCoUXYRBKgb+eVyoh15bUill9h3rOubjF8c
      x1h97X/wjpE5ZoeCQZr3lWWtMnOBRAFVc1mmScFNZv1x/xQ2W5r9iwUGwzCSZX4j2V+saR0A
      3/dx3GRBQjW9o1wgXcKU6GhWWm0up98fmgUqPkUpC1GEDHVaX61DjSLJ/bIsK3UdRU2mYeBY
      BzukPN/Hcg5ybtT1DZWpGs0mnU6HXC6HZVlUKxU8zyeMQlzHSSxzGKYZvaPoK+MvWxlRJoqT
      MKRpGEMhRpl2WdmpMlimSW2/xsTUBJZpYZkWrmUTxFGqWEFMcoePq1TrjPvlBG46N08rAH4Y
      JCkPJD6/bQ3vqZRzSwZ9e3OAEQFsMyLsE1Eg7ochtpWcFtH1euQdd4DoOiIKohcKBVqt1qFz
      BLWztVptKLQm469zfwSIvnQ6nSGXI2tXmEyzLBDnj7q2k+5nFQMt2i+6g1Yia3eVwKleb3Bk
      YZ5Ha2vYlpXsszBMgjCg5vsYhkmz1cRxHKanptjc2iaXc/E8Pz2ErFQq0mq1iaKIIwvzQ65P
      ykxAznHpBR4FjQBkCb5Ke4H/WLWahLlJlKZjOzhKecMwCKPEFZedocTdiYmI0+BK4k76FFxr
      KOCinQP0Ai/ZdtbP2swyQbImkDuXc4bTni3T6vu5yUbtZFdWnApFzjlY0c30+eLB2LcoI7eT
      RVQB1WoVHaj16OYEpmmmR+/JO6dUQVHbh+GdVnL9Yh3A7h8o5trOwL5V1XXQ4agz8UKZRHHM
      zs4utm31XRiDZqtJIV+gXCyysbnJ1OQk3W4PiCkWC0xOTtBqtYmJaTQaAzgIWoDkIhoGrqXf
      Xq66TX4QEEbhEI0EiL0Vugn5gOU0rX42gZ0c3WnZ5GyXvOOSs5x0LSGlo0QreZwOdoT1MzXD
      MGEykRuDZrIhE15UNErCLdMkZ7vpZu2c7ZATiXX9zqjf6wgkVh51kxqBj2Ek+0Ity0q1tSgr
      T8jVPsDorY+9Xm+I0cQOtqxvZBrIdJKfiQ0aMozaP6uzuipUKxU2NjeplMtYlsXczAytVhvX
      den2elQqFfJ992g2n2e/tk+pVMKykqNsbMuiWCzQbrepVg8ur9AJdvo74+Rv+ds4jgnjkJzl
      amkUx8liWKlUGqKTzjJnBR2EAklwGg4CyG1LYttPdDMg77pDZhgY8AUHN8PHaTtZk41k80yy
      HTGMIiwzpud7qbDJ5JPdC8F0Ihek0WikdaonOMhaSuSoiHLA0KaTLAuiw1+XMyTPNbIGbBSj
      6twKGIyRy21muWcqVCplKpWyYmmqxHFMpR/BkulX7Kdkp+5FGFLI59Oy6oKSrh/yOIlyMr7y
      hhwZVI1cLpeH3LxRTK/SyfO89GjF5Jh+Y4ifZJAEIKnYNq0BaVY/Eq6IWFTK5/N0+jHsQi43
      QCx1udu1nWRDTBRiRUl2phf4JLn4B/6jbulfZw5lAoq/RfhV905eaJEzEA/bwyvSfQ/bNK6j
      mYy/Ws4wkgQ9nfUbZQGy3o8SCrWcOGxMnssJOpimOXRMoRCWrH2+8hjp3GMh1HI94r1clzjR
      LwgCrRBEUZQeVCySMA3DIN/PPAjDcGBMswRPwNDI28pERh4cgbxcebvdvw/YSBYnTPPg2HJB
      CJk4ru2Qd3LJyXGmRcHJDdwnkOXzqiCeyaFKuT0dowhcTdNMj0bJ2gQviB+GIb1ej06nM5T8
      pmpwmU7yc/Gvrk/NZnOApro+y4wl6Ku2m0WnUe6enHqQlT8k46YbGxU/VfPrlOA/WGsAACAA
      SURBVIVoTx0zwzAGzgfS0TaIwjRIE8dxXxCidKtksVjEMEevQov6oig6EACjv+FFt5ooE0RI
      crqYkhRKV+Zk6ZaJPVCHQiR1cLKEQO6Ubg1BFTaVkFkbNlQLJ2s8ISzFYjHVJGp5HQ4y3qOg
      ILkf6jej3AUdk+jKZikPwzDI5QcvJNHVpVquLCFTBV1Na8+is4qnfHiZjtamafZvITL74U0z
      9fkFrj3fG/hext/zvPTCk2SviNSYbiKj60jKiOagW9LxDirWEVU1Z4f5x1mDqhJI1YLyBhm5
      LnUdQOdK6HDO5XJDIVod46htyqDLG9L16UnokvVcZ5FG1SNnYh1WVl0ZlkG2IDq6qN/p3FfZ
      IqployhKThQM5eiRcNltTEx6gZdsYzXNgSPyVZ6Tf8excjq0ANXPE38L38q27WTnD4lWDfp+
      vaobYkjvC5NN6SiXY5TG1GlbnRlVXQRRr7oOIAuLaFfdkidbQJ0AZgm5Wi5rniHWAdS6vgio
      uIpnunIyTrq+jHI3VQZS34kUCtWN0SkGXUoKQLFUJAhDOp6Yx5lEUQgaHCAJ2xskF6HImIty
      Yg4gxlRYGPH9wJ7gLOLoOjJ4zmZigixzMH5tZTC/jlF17Y7ybYEhrSN3WPddtVo98P1M/YYS
      0aY4Xltc+aTDTfV9R+Ga9VzdD5AlBKMUgxo1yiovC7xcJssdEZAVkVHrFtsjdcevZLlOqhXw
      g4BcHPUPJejvMzFNvP522rSeGGSO94IA8A/OeY3jNCWnYOZTt1u472kqvYyMQFT1nXTaa2Ai
      YfRDnNI1QmpZOIjDq4SXpVUG1f3S+fbqvEDgpHNFdLuVVDAkQsmTcxnUXH81beBJNblhGAP7
      AVScn8SNUK3fYd/IAQxBK1kZ6eZVOl9eNwau66YWVmVulS5dv0fH6+H5SYpGFEvRRVEv/fki
      ioJmMGcrTv8HXtdDhD4tyyIMwqG9J0EQ0Ov1krsjnoRY4kMBQtJFkpOfZoDG2JYNDHZeICuf
      IalzHVQzrmpqdXCFJMvv1Hx4GeTbHrPMvYBCTn+vmRzK02k4nV+bBTpfehQjCwjDEIzk2EgD
      I1lJNwejbrqUb4E/6K2njJd4LsKRIrauCpuOT0ZZH1FWRHG8MII+f5pWf0um1H7H6yWHLIAk
      GNmh4N2dXcYnxjBNi17Upd3uYIxBJ47Tyz3q9To5N0cQBsNhUNGBrFRaQTzB/EK6e12PB/cf
      EAYBu7t7dLpduv2sSbG0LWceyu3JgyXHh3WLT/IAqVEdnd8pCA+kiyxflDFHtaF+p7NSWfUa
      xuBGfbmfo3C0LCuNhMTEdH0Pz09yZ3RupWrN1VQOGXd1/iRu95HpKAt7VhhZ7q9oX46iqRcy
      GoYBBnTanQEfwjCMRFgyqXEAzUaS37S7u0+73WZqcpLH62vYlo3nebRa7eS2m3KZTq+L5/vD
      cwB1d5TqN+o0n8gXGh8bY2t7B8uyWH30GOKYSrVCGAQYhpmsUPZXF+U25d9ZoUpdRqLM5Dqt
      Lp6J78QVS/I7tX3VxVDb0+Eu00XViFkuhGCmVquVCqbqXmRpUgE52xm4CEOkZmRNuOV+6BSR
      TGddm7I1P8y/V+ckap15J4dvJJ5Dmk4di/EfHf3TgWEYGDEsLh5hd3cvxfGpEyepNxoEYYDj
      Ojj9NJl8LofvB9nnAqkMNkq7CT4qFUs0mknylGPbOK5DuVRib2+PZrPBwvzcE2k4XedG7eLS
      Mb/OasjRALluNcr1JAN8mICo9FSfi/64rku3200viZY332S1Jz87yNlK3BXTsnBHrGzr/HdZ
      GegEULW48ip6Fr8ctroO4MgZxX232XEdHNMmNPt5VsbBfCXQpECn/QIqY1WCMGRqcjLFZXpq
      MlUO3W43TREXRzEOhEHlzusSsnQaDg72A+Rsh+pYNdmJI93HVZZSEGTtJxNZBZXBVDOuK6sy
      rWq91HUA8TxrY45avw43ubxqVVScVIiiiEqlQhAEbG9vMzMzk26ygYPjYoRgqGFZeeJqmmZ6
      9VPWOGXNvwT+KhOruIpyQhBkfHT00j3TlU8SIxP3uN1qUymX09VdcchaEGYzP5AmVhLHeL5P
      MZcfUppiPWfAnR/opKwdjYOIxoGUDnYGYH1jkyiK8Ho9Gs1mGpmyrOTU6GSWn81cOtC5Iepz
      Ya5Vd00Hft8/rtVqQ2VHuTUqDqobKH+X5YLprJKsZMIwxLZtJicnWVtbw3EccrlcctNJP9jg
      uu5AbF3XPhzk8Ogspsp4qjI5bN4jKy+dkOu+zxI03d+WaeFYNtVKhTiGME5yfnq+P3Ag2igw
      +5NlMz5oU+Ar00Yek4F06I6XbGCW46g5x8U0DFq9JFxn9jVAGEUQg+d7tJotPM/DcRzWNjaS
      73Iunu+Tz+UwMGg0mxQKebrdHoYBM9PTQ1EfHcHVDuoGXnQ2SwBE+FNeB1A1dhYjPJkLmJ3I
      Jg90lkYW0az5+XlqtRrtdpt8Pp+eld/pdNJ7CrIEbVT/ZcHLsl6jrJzs+8t0k+cLh7mhOoWj
      wyUJqxv9sHrEUMBf/i5JQEtumrTtdBddFo/INBegDYOKkxri/qUYecftH3ZrDJkjx3HwfR/b
      dvB8n263Sz6XZ3ysysrqIxYXj9JsNJibncXrpyj7vp85WFmIy/g9SQ6+/FxEWkRWp85dyRog
      dXB02l7ngqk4yG6JrJUEiGP/xsfHGR8fB2BychJITrQTEbRR7qPM5HL9cl/VdlWXSjef0bUD
      DMyp5HZ1ND6MVuK3EPK8k0vDnXEcD3gRyaLWwQHMYheiKsRZYyHDQRSIZCVXnJil+zCOk4vF
      ZEQSk5UchBWFIa12G8Mw6Hkep089RRAETE5Nsru/n1yyHUU4tjNA7CxkdSBr6iyNlgViP8CT
      umDit27fgfxbdal0gy4zRFaKRRRFQzfFxHFMpVJha2uL2dnZgQm7nPMkM31W+1l9Vy2RjJeq
      6XVwmAXSlc8SZHF0DTBw9IlhPtnEWq7vSXhkwAJYpkkUqklbycd5Nw9xnG5oIU4OwTKdg/UA
      w3XT9QHRYBwnrlVlrIJlmIxVKoO1K5ona9U5q5OjBlSNWwviZpl79W+VkL1eb+CO4ScRQJ3J
      lye0avsqMwnBKRQKfO+1HybncMYRP/PKy1Sr1fSE5lwul+IlcBSgHk2TFeBot9vpTfVy3/ww
      wIiTW35U1+hJ+iu3Lf9WaRDHcbqZX1UMT2KVsnAb5U0MrQOkHlfc17Z985Pc6wsmBrbtDFWk
      M30CiWQjTHIigdoJXR76KKYWoMtpUesZWPYnptVqpenHMpGyVk3Fb/G3HEVSU7xVGmThnWUt
      VG0l4yPuGGsGBgQxvW6XH1+8SthrU8459AyH4/NTPPv0OV5/68dgGBxdmGfl0WO+/pVXhhbb
      sixQsVjUMplj29rMUXWcs+Z0al9VGsn12kNHoxhD+UWjYBQ9dXwyYAGS08hMoijGNI3+7q2I
      KPAousm572KxRVd5lkuTbGC2hwZXZ6J1MKrjo74bYPCYgSS5LIFS8X8SX1j3XPWB1Xe6gdHR
      QZTd3tlhb3sLt5+iUZmaY3v9EQ/Wt5icmeP2ygZ37z8kNzbD6v3bNDo+ppMjl8vhOE5qBcTY
      iQiU3J7OvTQMg1KxhOM4tFqtgW9UfLP6ps6dspQFHNwXLNcp3zmgo7dKL9EXmVezYGAdIMm3
      7mdTxhDHBxXKK46j3I8sQYj7lsS2Rp9dqQMdQ8l/6+rQZXwKTShwiTk4y1SAag1GbVDPYlYZ
      B7n/h/VbtQyGkfjl77zzLl0czpz/Es1GDbOfpFcsV5N5Q7fL6oM7nDn/JfLlKtNTk7RaTWZK
      eba2tqhUKumJGEEQsL+/z3Q/CqcTAuGCiPmILDQ6Ost0E1ZdTJDFtkvbtgd22Yk5TByLNDaD
      OAjodDoDt8Ko9HoSfpE9gFFuahzLJ8MR44U+fhTS9b00HTWO4+TWF+nCOB0I66AygGjYD4Nk
      00I0fHrxk3RIdERtIwt0+0BrtZrSeX1yl9qu+P1FQPjjKq6yQIgy6nvxXGzHbAYGpck5DNOk
      MjZBqZL4/veuX2ZqdgHTtvF6Pe7euMr+7jal6SM8dfwYP/f1n2FpaSmtt9Vq0Wq1KJVKbG9v
      02w2UwvRarXS9YaPPr7I919/C9u2yeVytFotgiBIVn+l/liWheu65PN5HMdJ5x6tVosPPvyI
      vb19crkctm2zuvqIP3z1DT746OP0qtg4jukFPl0vOQ4xJrksL+gfixiEh2fvqrQTgvokWblD
      LpDckB/6FNx8knRlGhj9UyP8oH9yhO0OadhRmZlpGEsq/0VdChjeaP+kdcDBuUCGYQwsw6tM
      PsqPFOV0xJWthpyTo2tHN2ETQpFmTIYhzVaLkCQkHSrp3JXxSZp7W8yVHeqzs7R6HhvLd1ma
      m+H8z349ra/X66XCL/YfFAoF6vU6rVaL7e1tqtUqe3t7rK2vs7qxTWQlV5daVnLXQ6/Xo1qt
      4kr9a7VaNJpN9vf2mJubSxfter0e731wkU8vX2Px2DGK+Rz3Hj5k/tgpLl+/xcPlFX72619l
      emYa+ieRCLqJ62Hb3Q4GBral3yOcNYfIGvussqOPRuTgrlohWTExjqk/BEn+Xtam4h5hg8El
      jS/qAom6RzHgqDrV/QAC1KiMaEf9LfdLFRa5jG4bqQ5PXcbt2x98TN51mZoY49Lnt8kVk0S5
      vc31NAC9s/6YybkFCqUy21ubFOen+Q//2l9ma3ubqcnJdB3BMAwePlym53mcOX1qIMxqmknq
      cbvd5sSJE7TbbeI45ubtu1QWTuI3a0xNTwEGxMkBWWtra+nF3s1mi8tXrrLnm4TNXc6cO5u6
      k4/X1qhOT0MMRmGMR5trhBGcPzHPbNmlZZV495NrfP1LzzE3P9s/iC2JZkVhRN7IkbOT9Igg
      DAfudssCVaEc5p6KMtpkuMQvS3Kxi24+rcyxHUI/SlfcRk3+5GdiU0NM/7DTWJwrGWHEw5Eg
      FXQMKBhIzZHR9UXgpLuNXdePLELLRFZXQVUi6/DJ6pN4b1kW1fFJOjg82GkwNj1HZXxyCI9e
      p83skcS1mVlYxGzvUKlUUqaW63yw8ohWt8f29jbHlpaYmZkGDtxTcdivZVk0m01eOP8s15c3
      CGOD23fvsvxog5xlcvb0U8zOzrK9vc3y8grL2zV21h9z+sKXCejRbLfIOzlsy2JqcpJKsUCz
      3cPzukRxjO04tNod/CDEsE0q45NsbW8DMW4uR6VSSU6vCw9Om7NsJw3zyv68mEeoHsgoq5wl
      FEMLYWL3jHaATJN8/+DbUYwqfFhRzsTENJO9w73+/EIIhGEY6TEpMtKqBha3yssTHF2HhVDI
      WyMFlKVUbBnfUZBlFXR7cHXCP2oSpivj9zoY+RylythQWS1OwG6tyTsff8rufp2XnjnN0tIi
      URRx/8FD9usNchOz3Ft7xE6zx5eA2dmZA+vcP+jXsizGxsaoVCpcvHyNycVTvPnjDzh27jxd
      3+O7P3iLhblZXjr/NNdu3yPCJMTgwa1ruFZyf7QYw3a7Ta48RjfYhxjyxTKeafDplc8pTc4w
      UZjADHucf+4FoijiW7/x25RLJcbKeS6cP8/S0tKA+6g77FjwmDzGspsseyDqOA0kEcofi8y7
      dKAU/pJn1qNAbkREXMQk2u6HWhlgFP1EUK6v5/tDl2zLkx6VEdWDneDgXCDxTH4vh0HlCVQY
      hrRarXQ3mYBRpySoILttahBA1mpxHJNzHVqNGvW9nSzi4ve6dJrJhX9RHLO1s8P2fpN2u821
      O/fxfZ+7d+/xYLtFcWqBTrNJsVyhOnuUS9dvc/PWbW7fvYfvH9zIHgRB6usvLczRru8xt3iM
      qx++jWnZuIUSXT9kd3eXXKnC2soDZhaOYhomYzNH0jNENza3eOeDi+TLYxw9eZpHyw/odrvU
      dnfYq9XSY2vFGaC+7zNz9DiL5y4QOBV+9P7HrD56xO3bd7hz5w6NRoNOpzM0nrZtH7oyLFKg
      5a2yqkIaWgeIoohQMKShN926Ac8y91Ec0e3f5igy/izTxPN96V5ha4AJdHU7lp0KkdqGOjEW
      36jCIU/SVQujuktqPaN2n8l00c0d1Pfq/EEuE4QRj+7fYWxyGt/rMTV3ZKBMr9vhxWdOs7Cw
      wMqjx+zs7rL01DncfJ4oDGk3amxsbibHnzsOMVDf2+HY6adpNxtsbGyyu7PL3NIJVtYucuLo
      LM1Wh+VHj3n69Ek2t3c4sbTEbByxt7/P+tgEy7ev0223aOTztNttNh6vMr90gonpecBk7eEd
      tqbKTE9Ncf/BA+pdD+/BHeaPnSQMfHrNfb78wnN0Ol12ag121kOs0EsTKAt90uaKZbrdDm9/
      fAXDgHKxwJ+bmeHmrdtceP78EC2zQA7C6FK25XEaEADDSE537vreyAZUZs+KpiQMeFCP3c8i
      9QIvEQbTGjgkS5bwAQsShoRxhCnnhiiaU+eyqQwtX9yX5ROqfbIsS3uk+igXUK1fJ1A6gTcM
      A8stEEURk3ML7Kw/HmrD63aYmJ9jYnyMifExwijirQ8uYZXKWJaNGYdMTkzw7keXsPNlwjDg
      yInTtBp1Ht7+nLnFY+zvbNHptNlYWeHhSsLMnQCW93rY+Qlee+MtLMfFD0KqUzPsrq3w7DPn
      aNb2iPNVJqdnWZydYPX2FeanJzHmjvBop8b2u+/zYHmVvXqdsalZ7t24hmuEzC4ep97x+dmv
      vEIcx9RqNUqlUnI9VBDQ7PYoAjubaywsncR2HG5f+QS/0+S7P3iLytwx2h9f4mtffmmATw6D
      LD6Rx0l7R1jeOViIsG176CqgUTNsVYOaholj2f0LkIcvy1brkesTGjwIAkzbGjiwN4vp1bpk
      vBuNxtBl2Wq/dESSJ99qWzqNrsNH/TbLp63t7eA4DhsrD4h7LfxakSiMWH38mEJlDK/T5kpz
      m7m5ucR3N02KNjy6dwPfD5gqufi+T75QZGrxBDvrj1h/eJtOu0Po9zgyWeTC2Zd48GCZyYVF
      djbWWH+0zMTUDPW9HVqNGtXpBWaPHuPBrWt43S4RSchzr9ml9ugGP//1n+HZZ56m1WqRy+X4
      4Y/exjZcrn1+neLYJGdf/CpRFBNHAd3GPvu7O7Qtgzt379Lp+fheD9N2sEyD+dkZTMuhsf2Y
      04uzbO5t0gsiOp0OlfkjbK8/wqlMkp/Wb6UdBXKwJGtcrG984xvfgOTEBN0GE7EqOGoipxOI
      dEJiGH1Gj/vb3szUpVAnvjqmNs3kIC719hHVnGXhKLs/oi7d5FWtW2dddHXLgqpGJXT0kNuU
      yxqGwcPlVWqhzdTcESzL4sVzT3HhuWc4vnSEI7PT7Lc9po8sEQU+k2PVVJiPHllgfXuX4vgU
      9Z1NXnzhAguz0+ysr/DlC88yXikROEWmFxbJ20m6weZunfLEDPu7O0RhQKlUZmxqhvG8ST7n
      4HmJshqfPYph26yuLFOdOYKBQafbZW56irGxKpZlcerkCbqdNtu1JoViGaKQ5t4We5uPCX2f
      MPAIwgi7OpO4bbUmdmmc1cdrXLl8mRiYnxznyy+9iGPG7HcCxheW2NvZ5PTiPMdmxnjpxRcG
      FkHVMev1eulinTpWulQM8f7QO8KeRNqywk/yc8d2KLh5Cm6OgpvDUXKDvgjIOGWdgmAYw+mz
      wpKJKJEO11HWTZ3EqlEGVeOL8ll9kOsLw5Ce1yPwenT3Nnh2aYalpcW0/PT0NMdmKvjdLsWp
      BT64couPPvmU3d1dPv3sMrV6YyAqUq1U+MrLL1GtVjFNg/r2OrmoQ+AH3F3dZmzuWLKCa1vM
      zB+l1+1w69pn7DXafPmF87x4ZomT85Psr9zEazcJeh0e3fkcooBGq8Pd+/fT/m5tbbO802Js
      ZoG97U1KlSrHTz9NdXyKE+fOUx6bIPA8Nh8tEwQBi0+dJQpD8sUyhcoEY5US9+7do9PpkM/l
      2F1fIW7tMZaz2Ky1uPd4Wzv2MjiOM8T88pi22+2B85xMMznHypa+GBg8eeOzmo6a5d9mgapF
      1QiIgKxcdtmM6b5X3S71X6GhxdZIVRPIbessglxGrlcGnXZRBUO3QixP0s6ePsXE9jblcplS
      //4xua3J8XHuPLqX5DEZJuv7be69/QG5Qgm3WGbz0TK9xn56+oXox7GlJSbGx6lWq3Q6Hd74
      4NIBPgbsPFqh2+tQnpyl7cf84fdeo1ouUW91sInxum0mZxfI5fL4gc+xU0+zu7XM/n6N1cdr
      uI7N3s4WrUad6fmjhFFEs93Fzhd5/OAOTi5HsVJlauEYD+/coN1JNqevrdzHMEyK+Tzm7AIf
      X75Ot9fl9IljvPKlF3jw4CHX7i5T39/LpOmAPy+lcat8I99WmSqfWE6HZths5/P59OQy2cxn
      Db5uUcoPfMI4HphX6EDnOoi/Rwmbag0EHsICyEytXmonwyjCymWyvpPxyxJM9VQKUUYW/NmZ
      maG2BO1XH61R39mis/qQ6SOL/flRyNH5o9iOSy5foLZhpW5eFEU8evyYo0eOMD4+ThwnBwQH
      rX02H8PexhqtZp3Tz7/Eg5vXMOKQzeW7uPkC5UKO8XIByzTZWVmjUKrQbNQpT0xz5/oVom6H
      7b3XcSuTNHc3WTrzHIHXY+HYSe7euMrcibOEUUR9f5czz3+JrcerwAFNbMfl2OmnuXf9M+r7
      e+w3Guzly8RxRDmXsOX09BQzu3u0GrV0rSIL1HdDwQXNewdbvxIs+82jBlr8FqCNyxrJUnqy
      wJb8jumHPy1riGHk7YJPOtlRO6xzi+I4To8fUSeuuolSVhuqoOqsoq5O2fzK8xud8Oj2OnS7
      XR4+2mZyeoGd7XVc18XNu5TLpWSTDMli5tRYsiLc6XS4eu1ztloBN+4+4OXnn+P+8grPPX2W
      4sQsu7t7yZGWls3O+mPiKMQxEqs/MXeE+ysPE5o1a7iFErPzc1ilAoXKGL7n4UXQ8UKqlUm8
      Xo/Ve7fodtpsPV7BNMCIQvx2g/mlE3RbLRq1Pap5Cyf2GbM8cnHMZm2H2Ouyvt1j9sgS0/OL
      rC3fY7vp8eP3PuTZc6dpNhqYkc9+f0dhp9NJ5oSWlZ6pJA4PKBQKdLtdLMtKE/xKpVJq/fP5
      PJ7nYVmJkuh0OsNhUJVp5AHUMdYoZomiKD2rXc3sMwwoGPmhXUG6FV5VmrPa030rlx+lJbI2
      2OiYXveNqhDkxbQs/LOsjKB9vdGg0+5gGNBqtem0m8lCUthjtmTz/PnnaLfbvPn+RSYXjgOw
      3/Z47e0PMW2HzbXHHDl+CturUSjkebS2weZujb1ajVazgen3KJTHCWMYm1lgrGCzu7NNY3sd
      o78ZavLoCbqtBpuPVhgbH+fB9U8Zm5zGyTm06y3qW49oN+tMTM+SKxRp7O9gEtNr7uN1O8RR
      hNfrcvbCy+w8XsYy4cKz58i5SbTqh5FBbNm0G3W8XhfP6zFzZIlWu8Ub711kbvEkVttLExmF
      myMCGsLa5fP5oZMfyuUyRt/lFEIj+ESkfSv7AYL0Euw4Pti8rjJ/lp+sakH1MFwVer6XnsGp
      +vlyfYcximhjlKAYhqGcaK3X3k9qAdSyqlXJMtej5hhqXZ9evUHoFKGftp0rl3j5uVOMjY+n
      J+xVKhWeeWqJy7cfEAQBR44/he24NPb3MC2LrbUVnjt1jHcvXQPTYq9Wx7AcTMtmdmGRHB73
      Vh5jmhbNOCBXHqexv42TK7C/tU6hXKXbbhFYNv5endnZOcrjU7SaDfKzcxw5cYad9Uf0el0m
      p6Y4fWQKwzC4sbrN0ulztGo1TMvCshJmDSLY39/HdV02NjaYKufY2tnFa7eo7+1gmhb3b1zB
      sBzcfAHLttN96nIinwhoiGM3TdNMDz0IwpCu38PsX/EbhmFy9pCUPxRFyTHuA8eihFGEaR34
      8OKiOZ3LI/72wyDNAlSZyHEcfE9/oJFtWumKs+ori2dqVGWUj66bIMkgUhrkxTABWXlF8oRK
      FcQsegADCkMMjpqfrvtObvPh8gqRW6JYPrjaNfJ7TE1NDZzADMlNkw/v3GBqdoH9nW28Xodm
      vcb03BEsy0yOHK9M4kdQNCxMYsy4Qq3RpLG3Rb48Rm1nk26ryeRcnqmF44zPHsHrvc/G8l3K
      41NYlsVUtchf/0t/gfcvfkapmuf+w2VWoyRN283nma4UOHniBG+//xGN/Rp7W5uJIjAM4jii
      6FrsRiHX763gx8m1s36vSy5XpDxZpDIxTf3254xPz+IUx9havc/K3ZsU+werqRNcHR2jKMk6
      dkw7XWey7MHgykA0KCU8B+f76zSb+E82+2GY3NekQ0aYKdPQazs/DEh2nQ0yhTrpFfWJOnWX
      L2T55fK3WSu6unrUb2UCZ72XB0cWKMH8on5hflVaqng3mi3yxcHkPTU5yzAMrt+8xVbH4Cs/
      /1eZXzqB1+sQhSHlSpXJ2XmatX22d+pE9Q22V+8Rx7D++BG13S1836Pb6VAemyT0fdx8gerU
      DGHgc//aRaqTMzz31V8AYiqT00xMTlMul/m5r3+FQqHIyedexjANjp48Tbfdpud53Lv/ANt1
      WTp1jm6nxeTMHHOTYzxzbJZXXjhPGIa41WlK1QlcI2Jmcoyi69Ct73Hr8kWOnjzL/OIJ/Had
      uSNHsV0Xr9cdopE67n4Y4PUzGAzDGLg2ScdX6WRcJqilCUPKgy2DCJOaUUAYR9iGPgabxFuH
      Y+HiTgFRl+pC6BjDcZzU/GX5+qoVSMJdEWY4fPyhrn9ZliXrXRa+uu90Wj8rKnX2zCne++Qq
      ubFp4jjG63YIg2CofM/zKZYrYBg4bo697U1cN0evm5yy3Nzfh+o4bS+mOD7N/s4Wz73yNdYf
      LVPb32Nsag7TtsmXyhRKVbrNBu3GPo7r0q7vY5oWc1PjrK7c59hLX6Jer1OpVOh0ujhTU0Rh
      hGlaWJbFXidk+fI1nn/6DI+31zn31HGeOXuMiYkJ4jg58cE0LdqNOlbU4Ll6jwAAIABJREFU
      489/5UtpeHJnZ4c33r9EbXeLXqtBHIU8fngXx3Fp7e8Cw5ZVHh+/7/44kmIZNR+M4+Ss0cyd
      LeqgijNjhHazpMhD1I9Lq40YhtFPgxjMwzcAx7Jw+qdLCPdL3nyjYyrbtgfO9pEvqlaFSIBp
      mpiYqQ8pToVQIct1kpn3MP9dtgI6GqrlRtWVc11efOYUf/zGOzi5PJZt02vW9Ul5/Xp63UT7
      7+9s4bjJCRY9r0t78zHzJ84yMz1NoVxld3MDr9vBwMTzOtz59H2m5xcxTJP97Q1sx8G1bEJ6
      LExWCIMcP3P0KLPTU7z6o/f4cy+/QKGQZ297Hde2MEyTucXj3Pz0Qy489zTPnDvL2dNhOkad
      TgfHcWh3OuRKVe7fusZ/8Jf/IoVCgR+++RaNZhuv26UwMYsd+4znDS5ev8X5r/x5CsUSW6v3
      077KaTlylM2I+6dXaHhAXfQUZYIwGD4WJcsVULc7CkjuCAuHJFP8Ng0zOVGif5m2ymhi76cX
      Bbj9K+5lfGQQu5ZkBlK1vToRF79N08xkfvnbrLZ1oAqh+k43h8n6W9ePfC7HxPQcY1PJ2kBj
      d3PAf92v1Xj4eINcucfY5DSt+j5Tsws0anuYBpRLReafPsNuo83O5iPioEfoe3jtBoV8nk7o
      kyuUqFSniH2Po3NTVO2Imhdj2TZT1RJ/8c9/nW//y98hVx6nWqkyUcoRxxE/8+WXCcMwWYWu
      bbM4N0Xlxed58YULQHL32ZWbd2m02ti5IkbQYW97E48847NHqdXr3Ll3jwfru0wvHKPXfoTT
      86nXtojypylPznL14/d45sVXcMyDoIq4A9o0zfTeZ4BCRo6XyCXzPC+NFKVusWENh0HlOHyW
      eZbBNi0sQ59yOgDxsHCl35gmRpT4cZY5mCMkdyTLX5af6ZhK9Kvb7Q5FgmQ8dJAVIRK/s9Kk
      ZRqqdJEjXvLkTZyIICxtq9ViLG8SN7aot7vUGy3eu/hZolWbDWq1OjPHk0zP7fVHyZ7hKMb3
      epw+schXv/wC+XyeRqPBq2++TadZZ2ruCL4FlVKBza0tOrs7zC2eIg49XMem3vUYn5ple/0R
      s0dPc//BA+aPnyK283xw8RPcYpXPbt5jamqKXC7HxPg4vWCXM6dOEscnuHLtOq7jsLe/R5cc
      5al56nu7rK+sAgazS4t09zZYmH+Bd957H8Mt8/DGZ9iWTblUpt1pU/Z9TNvBzeVobq3yV37h
      51NGFpAVZVPD2cJzkFfgZf9/iNN0EzTdREIecN2ilayddf69/LdtWule4Z7fU67DHGZQ+bSJ
      LAZTGdIwjJE3hss4q+3+u5xkMaoNuX7VYsnmenJykq+98iW++sqXiAMfz/MoTh+lPLvEzn4L
      Mz/Go+UH5IslHDeHY7tUq+PYpsGF889SKBR49733MAyDguswNbtAbWeT0Mrh2UUcx+H46TMU
      rC5/7Re+xtLSEoZhMnf0OG6uwP2NPW6vbvHcySO8fO4YL104j53LY7mFNPx4/PgxXvnSBWq1
      Om++/S57vsl2z6RjlbCDNuOWR7dVozo5Q3lsPIk6FYtcunKdsdmj1HfWKZYrzB47yebWOrlc
      gaBTZ/7oErOLJ2i12ly9fjM9SkXQUKfIdElv4m+hVFQ+HFgHGBUKFL+jKLkd3rKsgdTirElz
      lm8tf2cYBq7j0vM9YpL1gZzj9O8bG2R04XIc5lLo2tERTYev2vcn8dmz6syii24XW0kK98n/
      RlFEq9lkej7ZHBMGPt1OsiiWL5So72xhuzkMs8vPfe1F8vk8hUKBVqvFZsNjeWWVY4sLrO51
      yBXLuK7Lyt1bfOWlFzh+bIlyqYTv+6ysrFIqlbh1+WOq0wvEhkGIyeTEBNVqlbFqlRu373Fs
      6QjFYpHVx2vUa/uEYcT1W3fZ3Npkev4ocRzj5PJ0GnWqpSKh12N7dx/LNAgDn4Zls+XmmFs6
      zrkLr9Bs1GjV9qlOzxF1avi9HlHg4XWadPyI1e0ak/fuc+rkiYGEP507fBi/qWMyMAdQmV0e
      MBl0pxno/G657sMYyDJM8v3NOBjQ6+8dELvURB2jNqLLf+usRrPZTCMSOsZUBUrUp1sFfxKB
      U0GnFOTfahtyivXE1BTFyWRDe7fTZuboEjMLizy6eZnxyQkavYB2L+D1tz/gqeNL2JbJzNQE
      +Xyeq/ceY1kG7doe3W6XXq/D3/grf4mJiQkK+TzNZpP3Pv6UrufT7bSxLJvJ6Rk2Hq9Qsgvk
      +oqu2WwRhQEz09MYhkG70+GTa7eTSXquxPT0DFEYUhmfpFQdY6Pb5eLla8SGRXliEr++y8kz
      Z3nw4AFjc4s0Wx3a249wcjmiMCbyDPKlcabmj+D7yW2Px5++wO76KnOzM0OJhDoekOmqvtd6
      H/LgPImWEycPZDGCztWRy8jMrCJpYmKbVnoVjhf4mH2tj5HEdtXb7EdNXNVJcKlU0rpjOlxV
      fFX4otZAbU83kHLdcqjXNE1mJ8fZ7XVxc3kae7vMLx6n02ry1//qL1IoFHj1xx/Q6f2/7b13
      kxzJlSf4Cx2RWpXWhYJGN4ZsiqEeDketrd1+07M9uzvbmx3ekEtOc4ZNNptoNtBAF0ShgKrK
      qtQ6dMT+EekOT0+PrELz9ijAZwZDVghX8fwpf8KDnCnh0dMj7N9+DxfPjlErZBFIGjrNc2zd
      uAd72MerZ48T5Lcs/O//539DOZ9BAAUTx0MUS7AnQ9SPn8JxfcRRiGajieFojKcvX6NSqaBS
      LkOSJIwGfaiajn6njci3ceNgH6/PWxj0Oui2GpBkCZKUuCEEkzF+9Dffw2hso16vI/A9jAdd
      bKyt4sa1PRydnOO0XkeuXEb7og7PdVAoV1DI5zDpaKhWKtSbl4iKYRgKuXoa1xV9D2GhbFGD
      fCNpiMdbeNKSQ/E+QOQ6iR4jFUFsz01kNXmarhHz8v1VgJevea4hmiPr3ZpGHESckKU4z18c
      YXV1hbo3p+lCfJtsdgtJknD75nX85MNfoml78D0P/U4L8lT/MgwD92/s4eGzYxilChAHaJ+f
      opIz0Gw2YfsRNEVK0o5EETTdgOt56HQ6+OF3/xrVahWHz57j+WkjsY5oKjK5Asx8wn3/+V9/
      it2b78GNgLPzBsaTpIxRoVBEHNWxuncDTqeOa3v7OO8MoRkGAlVDv3WBQj6HGwf7aLR7qFYq
      2N3JY2NtBR998ilsxJDKW/jNwy/wDz/4NoaOj267g43dfUhxjJOjQ0xGQ0SePbfW5DyIp/6S
      JMHxXZBHZUmaqaPGgiRJkOLp271eT1jGlCCCiEqp6tUSZPHIlWazJxCEIcI4nE5ApjlJeQRj
      EeayzRBFEQaDAQqFwkyhjLQ5kpyWbPtpfRy9PEa726N/a5o2TfIUYqLk4A7a+NF3vr4w+VYa
      PHv2HGPbhgTg+NUr9J0Q2XwB3qCN27duYn93B7qeZOn7yc/+DUZ1A7phon1+gsh3UV7dhuc6
      qL96gTAIsLazj0G3jZ3VKr72V+/Dtm1cXDTw8199AlUz4DoT6FYe9mQIKYxgWBYqhQwUw0J+
      aQMvHv8ON6/t4P6dW9B1Hf/y05+jZ4dYr+axVCnhf/zil9i+cQ/nr1+itLSKkqng+9/8KlVE
      2W/20cef4KjRR+TaWKvkcPjyBOvX7kDXNJiGhvFwgGK5imGngf/yd9+jrjlp34Rcc31vpqBe
      Rp81kQpFoLSPwZvzCBVVVRXj8Zia75LTQRuSJFHTGxGVbNtGLpej90m+SWKXn0wmyOVycBwH
      URxBNwyMR9PyoQB60/d7vR4sKwkaJ0oeKTI3mUyQzWbheR7CMEQmk8FwOIRlWYm8OpmgPGXd
      fN4Y0fxdLwkRJSnR05R6SZJwetGEUlim13wAg0EbNUuCOxnBMpLTTt/30el2Yds2lmo1Wq+A
      tOl5HobDESqVMh3Pi5M6tHwVJy8OsbqxhVHjArlCGUdnr/GqNcR57zEQuNAVCV0XKAcRVC1C
      plCGPRokCamGA0CSoJsmJsMB8sUyunaIn3347zg5b2BlfQuZXAGb+zeSgHnHhZkvYNhsJqKG
      loFjO7A8F4ZpwVPz+PCTh7izt4lvfOU+/vXDj7CzsYbRaIjIc9Br1uFMRsjmChj22/jZf/wa
      USwha2owDB3lQh4b62soF/N48uwlJEQYBgWsbe1ifPESu7du4vTsBEZpGWfHz2EPe1QkvIo+
      qWsaYi+pZRHHMRzfhcnUsWDfnyHhaQc67IcnLqWKoiAIApTLZZpwikQhxXE8oyfkp0Ux2Oof
      uVyO/ib3DdOgAk4um6N5ikhtL96XJ5vN0vKiZAzs4Qj7PGmDjwpjIQjDpDZVHMEyrZlF5oNt
      uEWaWzfEMa7t72M/iqju0R8M8MtPH8PMFvD4ySG+8fUPUC6VIEkSnj9/gQefP8H7799HpVKe
      NhFjYyVROOtSjFy5Bsd14fsuVrf3UX91hLtf+zZazSb64wkce4JRvwfZBloX51i/fjdZk0IB
      w16bjnXU78F1baysb0M3x8iUamg2LtA6OUIQ+MioEoZOAN1QEXg+Tl48RWV5BTnYGKoSJv02
      strUwS1jIfBsdAcj7G1t4D//p3/EUdsGYiCbsTDqhjArWwAkNC/q8NpDaI0enjz5AqGio7Ky
      BsO00L04wc1ru7j29feSwh+Bj8YkRBgEyBTKePDZ5/jaV96f4QI8sN/U0HS4gYcwiug/UWby
      mQ3Ae0ou2mmSJM2crMZxPFPnljzD3ieIJII4TjIFh1EIWUqyxUVXEBHYdIeL9JJFiixBbHca
      MMNWWElT8tm240jwQabsuVQu00tBECCTL0HRdPSGOn72q09xe3cNkqzg6KyFAComk/GMnnTn
      1k0AQLs3BAD4npv4+gQTyLKC+qsXKK9sQFFVLOdU7G6vY3VlBadnZ3jw+Bkqq1tQNR2e5yL0
      faxt7yOOY0zGQ5weP4Pveug2z1GrVvD+jT3IsoxiqYTPn3yB44suPNfF6vYOBp0Wlmo13H/v
      Hh58+ilOzlsIoyTx7kqtisbQQ/3TQ4TuGEZpGfnKEs6On2M8HGB1axeuPcFwMEBldQP1549R
      ri2huryO+qsXKFWXERQruHX9gCZhUDUdw84raFKEfC6Dk/YAvZ/8D/zohz+gdcT4b8kaWFid
      T0KSWTCIpgetkjzPAYIgwNHR0aXIRIAoIVEUYWVlBdlsds4vhyJIPO/rzyIX3bWqhjDistOl
      PC/KzXmVcYuAiEVsHC27oFd5XzDYN+nlp/fH4wkkWYHjuui2LqDrBurDZeimjuLyOoIIOD45
      x2Q0QqWYx43rB2i12zg5rePRo4fYOriDUm0FJ1/8DlBU3Pyrr6PXasAe9qApMr75ta/Ss5m9
      3V1sbmzgrH6Op8enyBgaStvXcPbqBXRdh5XNw8rmkS9qQOjjg/fuQNM09Hp9fPrhv6M/dqCa
      Wfi+h0G3jTAM8fEnv0WxtoLeYIRsaQlKvozPj+rwJhOErgxZVWCPbCyVFIRRDCXycXNvCy+e
      fIYwDGFaOTiDLnKFIjzXgarp0BQFp198CscPMB7fhGkmuWg7nQ6++7X7KBaL+PjB73DW6kFf
      SiLZCoV8qlGGxrBLbyqdyrKUWBSnjpmaolIXfroBVFXF/v4+beyqCOR5Hur1Ol6/fo0bN25A
      n0b6LEIQXgkmyCbLMj384ifHb4rL0uLx76bZ/kn/ok3HWrBYywxvSk3rl7U6jcdjPHz2Cm4Q
      wnVclJbW4E6GsHJvaqZphg4lk0Hf8/H8wWeo1+vwtBy67Rb2bt9H6/wMaiaPTHkZRS1G/fg5
      VE1LcvCo8wq2ruvY2d7C9tYmnr04wvkkhpXJwrEn8HsdWJksBt02Cuub+OnPPoSWK8H2fFRX
      1iEHLfi+iziMsLF7gPrrlwgjDRcXTWzsX8eLz38H89Y9VFY30LkATl4cIoSC3dv30W+dwYgc
      /NM//C00TUOr91OU15OEV649wcXpMXqtBlY3d2Fls/jG/dv45W8+RbfXo8Wsv/edb5GJAIqG
      zWs3IUsSXrw+xQfv303N9E2ArL0sJcneIrzR+aL4jZQyg0UsQi4CFgFM08TW1ha2t7dRr9ep
      ti86kCAgUkKvitD8+Hizoihskw9GYSHtuqjPNE4mcvc+PznGLz55iP/7xz/Fo8dPoGkaCsbU
      K9UeomIAlhzi8ScfoXVxlug4uQLOT47x+vkhfvS9b+P+++8jjiIUShXUXx8B0xoBimHBdmzU
      VjdQWV5DZA/gORMMBkO0Wm28ODpCEIZw3TcRVFsb67B7TXTqrwEA69v7qK6sw8zkYDsO2sMR
      3EiC57qwB13klRC5XAFB4MOejOF7LqxMDrW1TTz+zS8RhyEGvQ7Ggy50KcY//d0PUcgY6J2/
      xmoxi//tP/0jmq1W4oSoqTg9eorG6Ss0zl5jY+86MrkCDj/7DXK6glw2i2x5CR89eIz/+t9/
      hn/96FOc1c8hSRJ6vR7GDD1ttjqp34yU91UUBYamI2dmYEyTMUiYz0ACcEowGwHGIsciakfM
      ocViEY1Gg7pNs1o7CyyisnK2qF3RARWfooUH/h7LAUS/31ZUEi5+HCOgXC+5rxsmyqtbiOMY
      o0k3yVuj6VheXcb+WhUf/NX76Ha7+PGHv4bvOhgNepAkGeXaCrav3cKrkxP0ez1klnegGSZe
      P/8CkREhsEeoLa3g/GUPavcCxXwef/fD78PQdZr14uyigX/9948RxzFKloav3H8PlmXhb7/1
      NRy/XsXzegejQQ9B4KPXbsC1bciqhs75KYxMBqoUY2drC+trq3igRjh88gBWvoJ+p4lcoYRi
      uYZ8vgTf8VAumbh17z6y2Sy2t7bw0a8/RnWqxC8vLWE0GmHiRnDGY1i5PNa296AoKorVJZTl
      FWysLiWxBI06SktrsB0XkppYCcm3USIX7mSEbuMcm8sVZDIZjEajORHVDZKAGFmSoU1jFIhk
      YWg6bC/xJGVxSJgaMU2+ZhGKRSTf92EYBjY2NvDy5Utcu3YNuq7P1ILirUl8nyzwHqkiKs+f
      A5B2RMqRaI5p90SwSAmWJAmBO8HRF48hSTJVfq1cHvVXL+DbY+ysr6DX6+PsoolcGTjrtqCo
      GmrlAuIohJXJwRmPEccRuo0zZPJ5vDhtwHNd5MIT6LqJXLGM6soamvUT1FbXYeVLWK8V8Ff3
      7syMp9frod4doVBbAwB0G6doNBrY2tzE0ctjPDx8gV63g2KhACVTQG1pBeN+B76sI1MoIwoD
      nJ+fY9Rvo1DIo1IuY3PvJvLVZQSBj+bZCTzPQd6I0HIDdHpDajyRJAlf/+CrOD5+hf/+//4M
      fhDDC0JkckVo4zEUVcX565dY3z1AdWUdJ08eYOd7X4fjOCjVlqFmiuj3j7FXy+H6wTXEcYxy
      qYTvf/OrqF9c4PN+C+MgxuefP8bBwTVqVqc4MEWJKI7gR4mlkqaiiZLSvpAkxAAc34Wlm+JK
      8aRRkeMRmSiPxGEYIpvNIpvN4ujoCNvb2zRi3/d9ofMX+5tFYlbM4JVRvu80BZg/hRY9dxW7
      8mX6UBzH+Jvvfw9/+zc/mFuPf/7xT+AFLvL5HP75Jz9DbmUHjdOXWNu5jqcnDfzbv/0cX/ne
      38O1bZy/PsK1nU188P3v4Be/+jVk1YIsJ9FeceAjo8aI3AnCwMfp0VNUllfR6NuwbZta4+I4
      RqFQgKFIGPa7UKb6lG07iOMYv3nwGfKbB8hIGuLIB+w+/vaHP0C/P8D/8f/8GMNOC4VyNTn8
      Wt/CZ0fn6Jy/RrZUw7NHv8X2wW2sbO7AtCxA8nHv+ja6vT49NPQ8D599/hhPDo+xtLqJOHbh
      O0O4ro3xZIjtyl3EMXD28hl0w0RpbQf/8fFvcX13C74fAIGH0HOxu7eNKI7hTe33mproHpPR
      AP3hBN1GHbu7OwvF5jCKaGFHYBoYJU9TdMZJUqw4jmdzg6aZ/NIoK/uPvJvP56HrOur1OprN
      JorF4kzpS0LZ0+R4vg++L6rcyPN5OFkZPU1c4dtcZDVK22g8DEZj+GEEKU5C87q9HuqNFk5b
      PRjZIhyoCCEnsa1RCN+10Tw9hu84cF0Hk9EAG7vXEEsSAt/HwPERxTFqq+uIwhCblRx+8L3v
      QEEIOZsgqD0e4eLkGKcnr7Gxvg7DSPIdua6L0XiC50+fwpkMYaoS4jDAxsY6dF3Dycvn2Fqp
      wszmAUi4feMArXYHzU4PkiwjDDwg8HD32jYc20bgTNDttFFZXkfnoo5u8xyT8QjZygoGboha
      MYNqpYyz+jk+fvQUsZ7DoNfFeNTHxLYRKwpG/TZqaxuIoxj5UhnN+glcx0ZWkyAhxub6GvY3
      V+EOOhiOxuj0hyiX89TP57PPv0B7nFS3LJZrKNRWoUshSsXiLNFjkyxgWu8CEi3Eok6rn0Zh
      CE3VIMuCEklpcBXLkO/71Jy4u7sLz/NweHiInZ0dZLNZBEGwMNM0L1qJOMaiQJ00JGatNyId
      J41DpMr8mF2rTz//AkqugnHjNfRsEbJuQdUNrGzt4fB3n2CzWENlaQ26rpGXkTNUFLMm1PJs
      /v/T8zOomSL8YR9WrgBZltHp1tHt9eD5SS0tK5uHYWXRbzWhZar4v/7bv+A//9OP0Gx38KrZ
      Ryxr0E0T2we38fLxp1ANC51uF7duXMetG9cBJGbv0bT6Y6lYwPbaEgzdwMuzJCRydXUFN29c
      RxzH+Pi3DzCKTQy6bWiyBM3KYdRtobSygdetAR4//QnKq1tU7NIMAysb24CSZBa3TBMXZ68B
      Cei1m1B0E6oiY311Bdf3d2kiq/vv38Xycg2Hry9w9PI17t65ieFohJOLJnRFQsbSUVldgyLJ
      uGg0sbezPYNPmqLOcf2Jm3gXyLIMTVbhui5UVaX+QTM85DIbOmsCZHOG8gjj+34S/a/ruHXr
      Fl69ekXzsKRFZPG/eTGIHQP7rGizsO+RdgjHWKQTsO/zZky2L/IO3SAxoCgqAtWCHwG6aU2T
      MSVztcdDPP/8AS5OXyXvyTJytTW8PKnPjaVUqWHQqsMZ9XF69BSvnj1Bz43w6vUJPM+na95p
      nsP3PKiajlyxhl989AlO+x6MXBEnLw6xsXuAKAww6PegZIp4cHiMj37zAL97+Ai9Xg/dbg+l
      YhG/+PUD/OaLY6yvrcGPImiGifF4jE9++4DqcKqiYNRpoFLM4+9/8G3Ushr+7rvfQCYaI1+u
      IZRVWNP0LfY4qUajGSY0VYVpGOi1Gxh0WnDGQ7ijLmrr25BkBS9PzvDzX/0Wv/w4yVUaA6gu
      VbG3XkUuYwJxUiBct3I42NtKzpokGZIso21HODurz+ATb7aO4xiQ3uClF/rQDWPmwJeKQI7j
      pLJ8VgQRIU6atSeKoqQCiGXh6dOnsCyL+uawsbS8OLVIzmfHwZtSRc+T5y67LxLJrpIMTJIk
      vDypQzWzMDPZqRuwDH3qQ9RrN2FaFjb3rsMeDaHrSYC7qmoYDvooTeN9WfCcSSJDS8Da9h40
      TQe8MRRFgRMminan1cTS1jV0L06RL5TRuKijuLQMezSEoqoolKtwHRu6aaHfaWI8HuP4+Bjd
      SYBHnz/GzuY6stksPv7dIwwHAzjjEXoTF6s7BxgP+pCtPD57+BD9Xhc3b1zHwe42bh7swzRN
      7GxvQ9M05LIZXNTr6HdaaDcbmIyGCDwPiCOYkY2MEmLUvsC1zVWc10+xs7mM+/du45OPfgkl
      dCDFEbJLm4hVHRk1cX/xwwC5XBalUhGKoiKbzeLk+BVenZ3jon4BezJCt9WAMx7j8Okh7t25
      JTywJAQvCANa25iISax3qNAKJPqb5w6sOLFIgfR9H9lsFnfv3sXR0REcx8Hy8jL1575MCeXb
      4ycJzJ48s2Fz7BwWcTd+w11VSSb3AtfB6PwEAODaY/iuDWfUT4wIiKEiQr9xBmc8xHG3DTOT
      JIEddFton72CJEuYCqpAHCP0XIxHA5QqNSiKAiuTRTAJ4fsuPCeCoqqwB33EYQTfsdHrNCEr
      Cp4/eoBMvojd67cBAIZlofcsSVc+GQ0BSUahUkM/cFGrVdFsNjHqdyHrFqT8Bpz6KY6+eIjN
      vRtoX5yh22njv/zjj6hrCE+4CoUCvvuNr2Bw6xp+/NOfY9DvYtjvYm9rE1//7g9hmiZdy4Nr
      +3B8F2EY4mtffQ+vmyN0mg2o3TY8Z4IT2Z+mMkzcFiaTybScUw+RJGN5+wCD/hC7N+7i7Pg5
      VjZ20GnW4fs+NbZMbBuKqtBvI0kSDM2ABGDsJi7VJJ4kiiI4gTfrDk0qBvJId1VlMQ2JSW5G
      AHj8+DEODg6oExvRG64KBNkXuUKwm4Gn4qLnWUgTh0SnwOQee9D2i199glI+g/vTmlbs+cVv
      P3sEW85AmVKgUfMUf//9b83N8T9+/QnO2gOsbe/NEKDTl88gywrGgy4UWcXS5jZyhRJc28bZ
      y2cYdlu4dnANppXBNHgCo0EPE9vBRbOFa3fuQ3GHOD2rY2NtBX/1/nv4yYe/xMSPUKwuo3V6
      hEw2B8PMQNE0hL6H/bUavvqV+3Prz6+B53n48Ne/hZIpwXcd3NqqYWtzc2YNEutLhJfHr/Dk
      pIPRaIj1jU3IioLTo2fQNQ3VXJLUdmI7yC5twcxkcfryGTzHhpXNY2P3AJ3mObL5AgLPxb3d
      VWxubiYbwLWnFUglxEhizXVVm5b8dRIfM92cqVU9FxIpgssQfJESSShyEATQNA37+/s4PDzE
      7u4ucrncjE/RIuB1A/aQI+1ZHi4zZ16mH7AbixfZXNfFq7NzSJkSVHX+5FmSJOxtb+I3Xxwj
      V0xq/0qcwkZEutFohFG/g1EnB0hAplhBHEVw7QmW1rfgey5qK+tJ1jQnSZ67vnsNdqWCb37w
      Hgr5/Mx8hqMRnj17jqfHp7i9vw0HGozqEh4++QKmrqBer0NGBNOyIEkyyssraNVPsXXtJjy7
      eyVrmK7r+P43P8CHv/oEkHVkBClo4jg5pCrm87A7n6OczeD1i6eXL6XPAAAgAElEQVRQdAOI
      YxSqS7ixvURTxP/4Z7+AXq5i5/odmu+o3zrH3koJpmnBdWTs7e3BdZOgKVmSESOaBsEYtP5c
      FEXIGCYkzBpZZFkWl0jiP9yizZG2MDznINd0XUetVsPz58+pfkBiPa+SP1OEkHx/vKlT9CHY
      tvkDtzQxkNUN2M3w4NETPH55BhcqNM2AHvtYnhakZhdc13U0L84BNXH4Cp0xdjbXZtp+9foE
      g1CFpun46/euY3O5isbZCepndZSX13BxcgwJQE4JcW1jGZWshnJGw1Ixi5VqEaVicSb7RRwn
      NQFWV1agSoBlmTg5OwcUDY9+9wBr+7eS2I5+D+u7B3AmY3iOjZWNHaiaBttxMe53KFKK1ois
      s6IoqBTzOHz6DKosYWV5WfhsJpPBzevXsLe7jRcnFyhUlmCP+nBtG71uD5ah4dHhC7QaF8hX
      V6gxI/BcrBZNvH/vLtbXVqEob6rdB0EATU3ySqmqNpNah9ctWUvi3DnAl4E06s//TxBBURSU
      y2V0u10cHx9DkiTKDXjFlrXkpPXJt3/ZpuVFOpESzHMxIv+y85QkCb/7/AnGsQkrl6eijR67
      WF1ZnhMXZFmGZeg4a7Sg6gYCd4K9rY2ZDxIEAU7PGzBUGQe7W8hkMthcX0Uxa2I4GqHb7mC1
      WsT3vvNtVKsVlKaVXwqF/LQckviMBQCWajW4nofzdg+D4QiSLGM8HNCavVLgQpJl5ItlZApT
      G7s3hj0aUHFGtPYsaJqWVJa/fiDkqiw+yLIMVYoROCNkVCCQNeSqK2gNbCiZAiJJwWTYh6Yb
      8JwxLDnE/ffuUHGapFUkJ76sxe/8ooHcNDaEP0glptA4FgTFs0B2yyLg5WR+sjxXIT5Cqqpi
      Y2MD6+vrODs7w/Pnz7G3t0d1A4Jsi2z1PIdJ2yz8xuCBcB/SBtseuU98nNi+nz4/Qs+ToZuz
      tgTP82gGM7Z/ADANA5slCy+abUi+O2fGXarV8K37iamOmPgURcHW5iaKhQK8SEZWCWGahvA7
      LII4jmHoOvbWqnj4+SFiP4AsSUmcQi6Pb341SXnYarVx+PIQtXIRH7x3B5lMhm5SNsU4+33J
      +BVFwbVr+7BtGyHiJDAeiY6vSDJ1TrNtG4Zh4GB/F/t726if1fHoVZLSkaR1LJSrqL88xJ3d
      VRQLVVSmsRWapqHf7yM/FfVEG40kym13pnlF45jmvo3jGEEQAkgJibzMuiMCETKy/7MIFEXR
      TKWOjY0N9Ho9PH78GHfv3qXOdGlKLLvZeDGJHweL2GnKPKtf8PfJGFjkJ9atF/UW8pVlen00
      6GHU72Iy7KNFXRglSBIragEZOcCtjTWY5sZcn3Ec0wg5dg7kgFEPJ9jfu5byEQCJUfGCMEAQ
      htA1HZh+U8uycPf2bfhegON6B45tQzV0lLImdra3ACSbcHdnmzrXsfZ13/eTDTONnUg1fKgK
      omlcLvkaxA1ZkiTq9w8AXhAkJZyO6ug16pBVFWEQoFCpIVeqwnEc7O/u0m9EXGsURaHyP/sd
      AdAgJc/zsLa6itPpmYEf+FAVBdlsBoPBUJwc98sgvmgQMwsi8O+hBy2qSuN1P//8c9y+fRuq
      qs7EFbDti8QW1m+Jvc6LVfwGuWzOvKmVPKfrOuIwCa4naTxMK4PK8hoACcXaauqaxaMWdna2
      hevFzo1X/FVVxQ++++3UsbNiIJCY/ILIgxKFSbaNMKTp5d9/7y6OTn6Mpa1tDHttdAddTCYT
      yLIM0zTnUt+Q9pWp6OC67lyu1aQIug8JQBiFCdUn3FVKXBK80IciKzOJDqI4gmboiNwJ9rbX
      sbqyBEQx/uWn/4b7792BM61TByQcptfroVar0QIu/NoBSThsq93G8vIyWu0O1lZXMBgOYVlm
      Yp6NYhiGNysCXUYhRYtO7qchZpoMyG4IEtxQLBYxmUwwGAxQLBbn+hS1x4930QZkkeOq82Tf
      58dgqRLOjp+jsrSK6soabUOS0w8I7fEIN9ZnNwe/uXnuyRsSRDoMIA40IsTG8Z0p6w9gmmYS
      vhoDhmnBkZJie71eD2tra8K+Sb+aqkJjsoGwz8VxhDCanu1IgK4kPmCR9Gb8YRQhimIomkx9
      d1Q58d+/fbCD9fV1QEoyPf/jj34AM2NShzYCbO3qNF2wVq3Qa7VqBZIkoVgozDxfq1aYAhnS
      vMXmzcTS/fYJi2QR+204CAGyCfL5PAaDAVVuLgOe+rHjYj8O67axCNEvk6XjOMnK/OCzR/DV
      DFY2dmBmsjPPEDFEtA6hO8byUk2ob5H/0wjOIp1MpPjHcQxLM6CrGjRNo2scx0lNrY3VZQSD
      Jv7hB99BMZfBk8PDuTGziqUIP1hQZAWaoiYFECU5qQUtGKuiEByREEVv5rS3uwtD16kTWz6f
      S+5zydAmk4mQAKcBT1BYmOEA7AsshRFRdtFiEEtJ2iYQUV1+EqZpotfrYWNjg4pBlwXBEEhi
      QKWZ9oDZj8cfoIn0lrS5xnGMjx/8Di9PGygvryJXKAnHEcfpZxpyHC3MUcqPSyT6iZ5jx8p/
      cHZjPHryFK3+EF9//w6+/Y0P6PN//8PvC8tHsZSWXcc0NxFd1SBJOhWTgjAEZIlyRVmSoMkq
      /CCAFwbQFAWGOtsvQfgkU3hI402IBccwDOqLxiYQuyxPlWhuCw/C+Mxo7GkoC+zfbDgk31na
      wRVpg8iou7u7ePnyJfb396lCzCICPybaN/cMaZdn4yIRQkQl+I3QHwxw/PoMsm5CUVQ49nhG
      6Zz2gsD34To2aWR2TblsZqI15Medpv+Q/xcRHXItCAK4rovT9gDFlU08enKIleU3fkgZJnMd
      T9zSTsGB+VSX7P9xnASiqIoKaVp8UVMSHUSTJMjTTRFGEU0g4IcBYiQJEggQgiFJSU4pIiHw
      /fm+P2MOJeKfaNwEFuYGFSkYogXgkV4kpxMKktYOaSuKIhQKBXQ6HfR6PZRKJdo+u9jsmER9
      sgtAfovGlfbRRXO3TBOlQhYjX8L56yN87d5NSjXjKALxPNyrXE9qHkjSlBsQBI6Q2by+cD3Z
      cfH9k7Xm5fPLTNVRFMF1Xei6jr21CurNE/z1V96b++ZpOhw7FpGewa8baZeM19ATmZ0vFE4S
      IJC/vTBAGIUU+eM4pr78pG9FUWZyvFJOMxXvVFWl3IIXg/nxAgJnOHbi/KT462mLJgLyjMje
      zj5D/JG2t7fx9OlTah3iqbdIBhT5B11G8QkQKspSUvZjSVJiuqtVq8jIWXiujWw2i431tRnd
      gt9oafNME7f491jk40+sFyE+L8IahoEgCPDe3du4L8vUNrmI05Bri9LDiIgKEVnJt47iCFGY
      /BbpdaQNkhYnimMEwVT0jSJE0/he0v5oNJpJJU+kBEVRaCF0fmy8jkV1m0WLxw9S9GFFH2rR
      uwTJ0p5jB8ofhi2aEGk7TTzjx0e4Dfkteo7tg8DEDSArCsxMDqfnjZm++f5F8jk7zzTE4tcL
      ALW/X0Zo2DmzfaqqCsuyoKkaFPmNmMAi+6LsGfy4RPMjz4RhmNR8myJtGIRwXXfO5V70rjrN
      2aPJCqIgQOgHM4eKxHxO+o/jxMWkXE5SwbOFstP0I/bejBWIBZZSpw1atNOuAizFZCkFez8I
      grnMc5eNg4x7EUVl/yYIy25KkUWLUN7Dp88wsF3ahh/OF18jv8n7ojGwIiH7Pvmft1ixYxRt
      UB4WcSJ+U/OcUoTkaQjFj4Ft05/maAUAfyqesERnEZD5WqZFnR4nkwmAJG6lWCzOibYkMVsQ
      hrBdB2GUlPD1w2CmXZ6rz9UIu8piLXqHBVaJXvQxRPcMw6CTZnUA/uOmyaAsVROJReR58qyq
      qtQ/hLB9Pv226ziYdFso1lYhSRJcPxD2nwa8mMaLKWnrSVh2jHSkXwREPOA3II/Uad+X1xXY
      e3zUHPCmejt9Tk5MnoZuCENa6fw40YvUdnY9D8H00EuSk0o/I3s8bUeCZZgzopCmqgjCEEEU
      YqlSg4Rk47C+XLRf9o+0xXhbCs8v3qL7ovbJoqqqCsdxUsMjRVxB9JFEogwAKjMahpFEWzkO
      Xrx4gW43cQEmm4KEcvZtDxs336eWBi+SYNv2rLy7gMKxVJ9VJkVrzyIdeZYkC06juiywz3ie
      By/w555No+giBOU5k2h9WaLDQhSEiKOY+kjFcYzJZCLM6yoCVVFgWaQuGeD6fnKgNt045NQ6
      imOEUUjPIwxVhzr9xrzpmYxVqASzisJVqBrboKiTt91chGJdu3YNT548wb179xI/DkHKRXax
      RRsqbcOQotuSlCCx67q4uLjA+vo6xuMxHj9+jEwmA8dx6OI7jotsPobrOInFJwxQLBYTmXdK
      XWRZpop8GofjEZhFcvY58jerOLLX2U3CbnL2fhiGNAz1ywJpXySC8fhh23YqESAiEGuxWbQ2
      FEk1Fa7jQpZlZLMZTGwb+vSQjYhbE3sCx3Wpi4UkSZCRlGslPme5XA6e59ExzIhAPBt+mwVL
      2yQiynDVdsmZQKFQoNXJRdT8Mj1EhGzEua3T6aBeTwLTq9UqSqUS8vk88vk8arUaPM+DYRh0
      0ca2g0b7AqaRcKasmrRNEJSwfoLQl53aikS2twF+M/BzJodGPBFgf4sOtERGAfZ6GEWQZWnu
      hJasBS9qpI1dURQUCgVMJpMZ4saui+N7kGUZuVwO7U4bmUwGmaluwCa+MgEUckmtCBJpSBCd
      EKhCoUAJ6Wg0SsYRT2dIKsSIBioC3h58GStmr4vkYNG7JNHu8+fPcevWLQBv0jdeJvqQtm3P
      hTxdbE1JZHxiKnv48CHee++9OZ2BlZl5OZ3tt91uo9vtYn9/n3opEqTiT69FLJ5vX7RW7Ibn
      LTfkHhtRR6iqJEk0XpbvU8RtCPDIz3OyKIrgT50ANUXsEzSZTOa5gCTRQ0FJklCpVKCqKsxp
      kT7HcSBJSRZncj7gBUnV0JyVha5pcFwX+Vzu0pN0Mg/XdWHbb8orybI8Q9AAZgP0+/25jLuX
      iT78RxG9w7JJkawv2kAs61dVFc1mE71ej54Ms56kfLADC0EYwPHf5JLXFQ26pkHXdVxcXAAA
      VlZW5uoakPHwCE9EJpLtQpZlPH36FGEY4s6dOzME5Cry7WXEIk35ZE/CPc+b6UuSJFrjYFG7
      5G9+ky7aiLy+wn9TUp2H/S6E23q+B0mWEYcJ8dvYeOMK3ul2EUUhLZOrSDIUVYFpmMhmsnPR
      XW8DcZycEBMlmN/8c75Ai1gqv1CizlhkXySfArM+OiJxgRxOLS0tQdM0PHnyJEnCOk27yH54
      EUiSlByxT//2Q59mKri4uMC9e/dm7Mr8u+R/9gSaUA7f96HrOq5fv46HDx+iXq9jdXUVuq5T
      RY9dg6uIf2n3+Y1IxsCOB0CCYALRK46TVIDqVFwg4xGJQPx7/BwACLk3GSchDKy4GcfJiS5J
      IKzrOl0Pz/MgyRKyZhaSI0/rg5kz7g+/DxCCQNpjxSJZltM5AE/deZmW3yg8pRQtDs812L7S
      Bh9FES0CF8cxhsMhGo0Grl+/nrDjqawn6jeOY3iBj5BxTitm83BdF61WC9vb2zSJ16KF5k+v
      yVxIRjMAaDQaaLfbuHHjBrVekTFc9SNeVRxigciyBJSpxYS8Sza3wiA/31da+yITMjsnnvuK
      1ok8z+olkpScTFcqicsyiUMg+srvi/RvAwtFIPqQgCukybbsZC/z/SHP8f5EIgQgrFSWZRwf
      HwMAtre3Z9oiyk4cx/QQhO1XUxPqcnZ6ioxlYWlpCa775mArDRaJDEQRk6TEU/H4+BgHBwdU
      D2BrkqW1LRIReQc34jDGIyLZwOTbWZYl1F/S+k0LIU0Tz9LgqjgSxzG1FBE/L8MwriTX/6+A
      1A3As13R38DllCRN7kxrlwURYhAW2+l0cHFxgXw+T4s+ExPkxLFnymQSyJhJbOuTx5/j3t0k
      b0+aGJWGNGmITPSV4XCI4+NjXLt2DZZlUeRcZDS4TMQUbRKRIkxEjsvW8DJI496Lfl/WZxzH
      NIs0e9+2baysrLy1K/P/VzBzECZiYaKJ8It52eKyYpLoNBcQm0hFH5NQvHK5jFu3bqFUKqHb
      7eLhw4ewHQeSLMOyLJjGbG1YUzdpDGkUvkmuJRo7y85F/jEiOzdB9Hw+j5s3b+L4+Bi9Xm/G
      nYLti50/qzOlrS97n1dEgcT6w4aEsmv8+4gUPLHi14PtQ9QX+eZhGMLzkkB1kiIzCIM/KPID
      C8ygIiVWJM6wyM0HnrByp6gt9n3+Gi9q8CeosizPmPwmkwmOjo6gGwZK5RKKxRKieHrggUTx
      Gg6GOD09wcb6BiqVyoz8L6Jkornz8+SBiEQA8OjRI9y794bTvK0Mnkbt074R+z+bhIBv/6oE
      axGREPUfhCFURvwKwqTiZxiGSY0uxCjli1ScJWlN/pAwJwKJPgi7EIs2QZqixJ8oi5Qntm22
      rcv+BmaRzvM8nJ6dwTBNLC0t0ecmkwleHR/j9q1b1JTK6zxpCEqoGB9kw46XvU8+bq/XQ7PZ
      xMHBwYyczvaTto6isaTd45E/Tf4XbeY0qi36NqJ1Yp8PowhB4MOYpjWhZyqqCsdPlN9qsQxd
      168U7vr/BwiL5AFvlEryW0SBWJGGB9LWIncKHglEH0T0NzArmrAnf5qmYW93F77r4snjxzg9
      OYHv+6ifneHWzZtQVZWeFrLci7TN/uZFFB7Y99mNQj4867V4WdAKmRM/T7Z/0XoRjrTIlUJ0
      7aqikWjc7HvsIZwiy1Dk2WLUrusmWR1iIGdlqMvyHwvMzY5FZj7NiMirksi2LFXh21rE2nlg
      bdxsO2ltsM/4vk+tLjs7O7h75w4kABf1OvK5HEV+YikSzZvdBKL5iCgnvx4s8bAs603uyhST
      IumD9dgUwSIxjbW4pT3L9sXPgX9vEXFjnyPiDBkLkeeDKBHBTNNEFEXIWhkUC8U/uMjDw5c6
      CV4kGonY8FXbIn9fRQQQcRX2GnGnzuVydIysWXIRpI1JdI9/j50/ORQ7OjrC7du3EcfxXJXz
      NO4ompdIHOHHLNKdROKnSIwj74RhSMtaidZY1C7/zMRLXBt0RYUiK6hUKn90yA8sCIkE0j82
      LyawlOUyVs9/jDT/cBbSxCfRZojjmFIhEkUlcuMVfUiRSMMjHz8Pfo3Y+RBPzEKhgEajgeXl
      ZSqusHMgkHbgtmgd2PUS6RZp4xRxA5aLpnGjNI7Bj1WWZBi6jlKh+Ae18lwGV0/Mz77ERCex
      FI8sjuM4MzK2SIYXfSzyOw0x0oCXa2VZRr1eR6FQoJYekWjGAjsXVqzjzZiXjY1FDNLv2toa
      2u02AHFMLEs8+Jhk0fxE8+fHKGqffVb0vCzL0Kf1hvk20kIy2b+DMMkGp2kaKqUyquXKHzXy
      Ayl5gVhYxKJ5VkqeJ4ulGzo0dfaETyTOpLFRXvdIa4dtS1EU2LaNarU6I/qQZ/ixk9+L3Jd5
      YLmByD2Evc9WVGFjCxZtahGnSkP+RW2IOJfoOZ4Y8e+RdfU8D6aZnK8YhkE9LQHANE2YAA0e
      +mMUd0QwFxPMUghCJXjxodvr4aLRRBTHGE/DFj3PgzNV9sgCyNIsNXOYRKY8sApm2mYkz6WB
      JL0Ji1NVdSbBrojzsEiYFuwhGqNIN2HHPuPCMD1n2N/fx7Nnz2ihEJ76ps2L3cBsH3zcsGjc
      ZCz8HNh3ea4mEmVJDehyuQxN01AsFmkknWVZNHu0aZozWRn+FGBGCRZ5RfJK6Xg8hut5KBaK
      CMIAL46OUCmXkclkMByOIElJjs94ag5UFAWj8RiWZaHRaCKfzyOTsZCxLNiOg9FonHh81qpz
      H47nDouQH3gTjGHbNnK53Fw+f1EmhLR2eTGH5x6Lzjf4tklY5dnZGcIwxNbW1qUlY/lxXbYm
      og3Ot80+K3LNEF0nEEYh8vk8PWGP48TEKcvynxTF5+FKPJ9FTH9KwRQlyd+Yy+UQhCEmExuy
      IqNarWI4HGI8mWAwGiEMI8QxMBgMkc/nEUURRqMxwjDCZJI4RfX6vZn+RLoB+XsRpVQUBf1+
      H6VSaUbuZz9u2rsERC4QlyEUe41tgwDhRKurq2i322+9sQHMKesilxKe+vNjZp9JEzvT4q8l
      ScZkMoHjOLBtG34QwJiWHP1TRX7gLZXgOE6yo41GY5zVzwHEyGWzyEx9OzKWBXUaye/7iRLs
      +R4URYZlmdN/FkzTQKfbgaoqiOMI1rSu7mUgkmcJQsiyDM/zUCwW55Q1kf2dnRNLiXlfd3YT
      LFIA2U0rEqcIxyB28TREI8+nITA/Tl7BZ8chaofoZzyI5kJKWAHJIZdpmEmZUV2HxsXz/qnC
      QlcIFnhzV9pzb6NMsu2yf6dxABErJ9d0XUen00G5XKYeniwSpCnSIhGChUVj4a/z+gGPVJqm
      YTQaodfrYWtra8Y9Im1slxkIRMCLZLxoeRniRnGUJLWVJCxXa4kDYRxjNBkjm8kgx2XD/lOG
      GW9Q9ncay7zMJHkZ8pNYzUUuFJd9IP4ZWZbR7/dhmuacXJ2G/Oy7PPVm/7HAih7sNXZc7G9e
      aY2iCLlcDoPBAMPhkJodeSDPp7XL/xMBT0iIiCgS3XjwgySWIgh8xIhhuw4830OtUvmzQn5A
      4AskMhkuEgPeFkgfon74v0WbjSAg+z75sJZlzb3DBqiLxiKaF88Z+L/T3ktrnwDZnDdv3sTJ
      yQlev34NAMJgEB7ByW/eCsQ/exkHJ8B+AwJkQ6qKmqQx1zQ02y1YpoVysTTj5/PnAnNWIJ6i
      8YhAfr8N8JYkAmknwfxGTBNPAFBzZxAE0HWdIpkkzVY1n5v4AqsJO272+TQxkP/Ntk/GQJ4h
      gTMA0Gq14LouNjc3qYMev2Zp30A0rkVjZddVNF9ZllEoFGgFxeFohCAKUS2V/+gPs34fmMOO
      NMrD/34bSLPesIgk4gRp3IHdUCS/DzlgYp9JOxnlQSQSiKwpV9ksLOKz4hcZRxiGNH1KrVbD
      aDSCbds03JP0sSjw/LJvJLom0lX4a+PxmBJCXdNQ+xM4yf194Uu5QnxZEFklrqpbkPdZqqhp
      GjqdDlZWVmYC29Ns2WkKN0/p2fdFuXjm2kFMM0/wCEzaZJExjmPqlLe/v4+nT58ijmMa4MOP
      57JNzIpDIkIjEuF4PY/ER9RqSfmmbDb7R+W2/L8KvtQGECEBuZ7meMZ/SNH7wLzymKZkApgR
      J0SnuiLTIYsAIrmfF2fSNiwri0vTOjGL9Ay+PVlOag/ruo7V1VW0Wq05XyB2ndLWi1d204Cd
      m+u68H2fRtVFUQTHcWgNAXJS/S7Al5plGkXiKR97nf2fQJp5bpFSx7sFiNKPLEJEirQpOo3I
      esK3AWBOvLoKEgJvosWIFSiOY1QqFXQ6HURRJOQCi5Cfn4Nojfn1jeMkQH00GiEIAiwtLaFQ
      KMAwDOpG8q7Al9oAIgtCGvXngaVE7IcmMrPIusG+y4sS5BieR9RFYgPfDwvsmEQ+OOwz7LWr
      iHCEOLTbbZimiXa7DUmSqH/N06dP6d9kXov0Dn6NRGsfxdHMeIGp45qVpBS3bRuO4yCfz8Pz
      PKEn6J8zvLUvkOg++f/Lss3LPnIaSJJErT8EqdPGx77DxySnPQe8Qey0ZF5pXEw0DpIwixSk
      i+MYg8EAqqoim82i3+/j/Pwc6+vriT8VoytcBdI4Wtr8WctTuZxYe0TnEn/OcCnGLqLmLLwt
      AvMpv9Mo6CJ9I45jGIaBZrN5JYWX/H+VsZINJToQI2MmIh/7fxqQZ4jIRuIlyuUyjVswTRM7
      Ozs4OzvDyclJqkiZNtZFXI8V+8gzJDktSfH+h0pO9YeE1NXlFUL+On8/7TnyG0jiY/P5PE1T
      ndYmC5chqyzL1B33MvGLbW8RpSbzWnSIJhovPw9egXccB5qmzTjcESo8mUyQyWSQzWZx48YN
      NBqNmXMMkTKclmNJNF/eosPrOX/qTm1fFq6s7bCyMb8xRJYOXsYH5it8s3DZgVXadf7AjN94
      IoR/81tCe6p8ViuVmcByQlWDIIRhvBELoiiCHwT0pJQFEddhLVWu6wrdtMm5wPn5OVZXV+mJ
      LK9kX5ajRwT8WrAHj5Ik0RQx75roQ+DKG+Ay2zqPYCKF8bK2RG2KRCNeUSX+RTwX4Kkj31+3
      102CODQNnu+jPxhAm/ruTyY28rkszhsNlKYBIJZpwXZsakL0PA+KoqDClXIlfZEM1qPRiKZt
      zGQy9MyCzI8EloxGI1rPlyQEXuSWzXOHy5RmsiGDIKBJy8gB3LtI/YEr1Alm/15kOlyEbDwn
      +DLKMlEyeZEjipLC2o7jzOSdJM+5rktTovNz8v0klaEiy+gPBsiYFkbjpPhaEAYYjScoFYtJ
      Dn4/KdwwGo0hSaCKd78/QKVcnpuzpmkYj8cIgmAmPxA5rWbXyXVdavkhFHkwGMwV6liEpGn3
      WSWf/LYsC6qqwp8WnntXqT/wJeIB+L8vizklz/GbgAWeG/BWGp51iygeX5CCvGcYxsyzLEVd
      qlXRaDRxfnGBXDaL0XgMVVWoK4Bh6DCNJIbB0HX0+n1kMhatuRUDMC1zbkMTyh/HMQqFAk3c
      xfop8fMnYxoOh1AUBdevX8fR0ZHw+bQ1FD3Lc1+2hBDZjO/CiW8azHCANKWXvceaO0XUJQ14
      EYiXRXkOIWqTlYN5qui6LrVm8JuHF6nY9tfXVmmbqyvLQmp72fxEnq3D4RCVSmXmXhohIONi
      nflKpRLOz89nNn+aKLQIWBGUrAdJfUJCNd9V8QcQuEOnWTDIIpGPcRULBAusCMNTTFHMLQ+k
      P/7EmNwjYoaIy7DUXyRGpZ3qkvuXiR78b4LMcRzTzAkiKwu7fiwx4dsV9cXPb9EYySYibZB2
      SKWWdxlSA2JEsAhJRSZAlmLxFJDfYOw19qPwB1GiDUoQn3hVXraJ+X5Ju2y/LNVMQ0Z+PuwG
      MgwDnU6HimfdbncmhSCLlASCIKB1h1mxjugBlxkNRN+QN4TzSfEAAA2OSURBVAqQtSTU/10H
      YVqUtOwJ5Bp5ToRQ7G8WOcIwpLWz2PvsP/ZQiSAkf2AGYO7Emlg1bNue88JkEZun8KSeL8/d
      RMBvKG9aeI09LGM3sKIoqNVqyOVyNB++qD12PciZBoH19XUcHx8LzaKLgLQr4qysuPWuiz8A
      0ivFixDhquZL4vBFijYQMYOtWcv3x17jZXb2Pi8ykOtRFME0TaH4kiZ6pOXPJ32zz86tSTyb
      PZtdIwC0IATJWk2ouWje5DrZRORku1arQZIk9Hq9OUOACHhutYh4kXJSaTHJ7wqkWoFEH52n
      qHzcahy/ycvZ7XZpOkCWerFUUqRz8FSap2CEaslykpVY1/XESmMYcF13ThRZpBMQ4HULHngR
      h8wpm83ObTBWzyEEYDAYIJvNCm367Br4vk9Ptcn6HBwcoNFo0Lmz41lEsNLEVfLN2NplizbV
      nzvMiEA8gqcBKzLMNDZFyna7DcMwsLy8jHa7jYDJIcNWdeFl08soWHJANaGFjvv9PtrtNiaT
      CVqtFopTm31aNBW5xp/EksM0/nlWdOI3iIgTkfETrkcoLM8JSb8icTKOY2q6jaIkm3W5XEan
      04GqqnMRZjyHZNdNxG3Y/ono+C5zgdSQSNF1FtJYOUF2y7LgOA6Wl5fhOA76/T5arRZFJnbz
      sL/TqBFBQFKHi8SwlqdZ6SqVCiaTCc7OzmbCC8nYCULyog9BWNEYeB96nuKKlE9N06gyOxwO
      MRgMkM/nqfObiNux11zXheu6qNfr1IJUq9XQ6/WEaU4WcTnRBmVdvH3fp+N9V2HuHGARiBaf
      BUJN2OwMvu8jm81SBLu4uEC5XIZhGHM5hAi1JO2zlFpVVVqMmrBv8gwZSz6fRz6fR6fToTVo
      2TmJFGTRNXY90nQBnpoTEcX3fdi2jXK5PCPu8UhPgDXNxnES31Ceula0Wi1kMhkoikLnTCK4
      RAouu56Es8VIklrxYh4hJvwavWsg1AF46wwBHplEVqDBYECRm7W2eJ6HMAyxuroK27YxGAww
      GAxwenqKTqeD0WgESZLQaDQwmUzQ7/ep7qBpGnUU4wv5seIJobKFQgH9fn8uuooXvXjRgx3z
      IupK3mU5haZp8H0f4/EYpVKJKsDsCTBpN208ZAxEcSaIH4YhKpUKDg8PAWDGV4j0z3IXVnQL
      ohC258IPgxmjALs5O/0u7Kmb9rsGMxyAVcj46yzwG4Eg2iIWTWJgSXIoIhOXSiXKjofDIVZX
      VxHHMXK5HM7OzrC+vo7BYECDtUWRaCwQLmIYBsbjMXK5HPW25CFtnjziE8rKHv6x89M0DY7j
      wHEclMvlGQ4lEifTnNhY+Z6sK/E4rVQqOD09RbfbRSaTSTaAqkCFSik5eT+MIqhTsc6Q5n38
      4zhOCm/LMhwv8ZXyfA+Wac49++cOcxFhrCIsUvB4jqBpGtrtNj1YyWQywtDINL2CNa2yMiqR
      y0mhi2w2mxodJUJu4o8DYMbFgH+PnVda9Bfvm8QiLvEKJbrJogguXgxaZFaWZRmDwQC+76Na
      rULXdYzHY4zHYzSbTcRxjEwmg+2dHcgM4QqCAEEY0NT0Ig7HWpkmnoNyoYgwilDI5VMtYX+u
      IAyJ5BE3TckiQdyEspumKaS2aWKFaFOxQKwehEOwsGiMpE3DMHBxcYGlpSWh2Y9Q3TRXDJF1
      SmSp0nV9Tj8RhV2Kxr8I4Uh2BmJVI9m1yZrX63X0+32srq7Csizq1UlEMWJ1Y/vjxaCxa2Nt
      aQW26yCfzb27G4A/bOGVUB7YD0hq4pZKJboBCHKR3zyy8wpoWh9X/SAiBCVUM8lWnSAmibJi
      xQ3WRZkVA1nRRIRALEXVNA2NRgNLS0s00mtmoS/Z7Pwc2DVSVRWNRgMbGxuUM9q2DUmS0G63
      Yds2Op0OAODg4IC6hfOKbxzHmEwmtE5vFEWYeA4KuTwypjVTb/ldgZkSSb7vYzAYwDRNKs6Q
      qoasSMN6U5JrLlf9RUQp2euE8pJraSLSVYHvm/xjNySrMJM58/0T2zj5mzenivqJoqQucLlc
      RrPZRKVSoRYxVne46obn9Q+iBI9GI5RKJerSrKoqarUaAGBzcxO2bePw8BCFQgE7OztzmzSO
      Y8pFSD+WZiCOY7oh3rXgmBkRCHjzUbvdLl3sRZYQXdfRarVQKBRoHV4W0kQHck+0mdI2D/se
      S015vSSOkxNpwpVYC0nax02z+ogsJ2nvEpGN9Mu6P/CbJ60t/j55T1VVDAYDRFFE00CqqkpP
      vyuVCpXzT09PMRgMZt6XJAmKqqJcLiGbzcGaZtKO4hiQAF3TIcsSDN1IJUh/jiBMjkuoFrHU
      iPzdCZKRgx7WVi0CXixaJBeT3/zhFE+56SQ48YIdO7E+8eNfBDy3S3uGHxsRB/v9PvL5PBUj
      CYVlgT2QYvtJ058kSaLiT6fTgaZpyOVyABLuS+6x42VDLwFQr9Tz83PcuXOHWpiCaVkp0zRQ
      KVfeaq3+1GFGB2ARhVfseAQkFiCS54Z/hjzH/ubdAHixiLeOkHs8iLgD37ckSdQVgT+XWNSe
      qF1+HIs4InEHIYdxZF3q5+c0QD6XzcIwDNqOHwS04goRRRfV3SKKLaujDYdDFAqFGe9UnnOR
      9mzbxsOHD7G7uwvf99HtdVEpV1Aul1GtVufm++cMVAfgP3AQBFhdXUW9Xsfa2tocdSfP9/t9
      ZLPZuTbSQCRSsBSXtJOGcG+jL7Dc5m3Hxo6LpaqiLBTs+4T7sKJgIsJo9DAwiiLk4hj9fh8T
      24aqqDCMxKmvXj/HUq0G23Gwsb4mHCdJAEDmSDxtyRjIxhcREUVRYFkW7t27h1evXqHb7eJb
      3/oW4jimQTzvCvIDC7xBSS3blZUVDAaDORZORAzLsuYQmIU0Ks/CVeTstwG2PUL9FwE7RpGS
      yz9LqCu7gdm+yWEf/261UkGz1YYky9SpD0hq7paKRZzVz5HP56AbOiTpcr8ofqzs/2nKLHGD
      tiwLN2/epMjPcv93aQNcWiCD1LUqFos0i4AkSdRpK5fLzXhT8nL7VSkKv0H4cfA6RFobBFiz
      JBk3Oy7+HdE4RWITO0fRfSKr27ZNMz2QYCBCVFRVhe04yOdygCTBc11kstlEsVVUjMdjmKYx
      Y41atBniOMntn8/nZ3yjROvCEgeyScj3KxaL764ZlAD/QcMwxGg0wmQyodkQyGKTjAfsCSq/
      +Py1NAVWRKV5vYG13ZOUIeQer1MQ5ZztQyTaLBKRRC4LbFu8iRR4k6com83SA6wsI/NHU2qb
      zWTogRYAhFM9AAByuezMnC4jJLIsU06chvjsPFgFnFxjXa3fJZg5B0hb5Gw2C13XaX4dYn1Y
      5GPDWmLYhV6ktLLvL3o27V2C1CT/pq7rQjPuVfUBtk3RGrEISv72PA+yokD2fdRqNZyenlLq
      Oh5PEIYhCvk8+oMBur0+yqVikpNoeubCJtq66phJxBnJMXoZ1+U3FQmRfJdEHwJzATE8EBMe
      MXOy/0TvsTIoi8iigBLSPj8G3pyXxj2Iss4+AySIr2naHOVm27tKDIJIIV5kSSL5dsC0Z1kW
      jYyT5ORdRVHQaiXX6lNXjfFkgiAIZ9K6iObPz4UgL3EmZE+BRfMh7ZAkXGQ8RIl+1+BSnkcQ
      lywsCyLRhV18ESUnwCttl1l2RAhMNifpk5ya6rqOwWBA7dxpCCFCKJ4y8vPglXW2XT4HUBAE
      KJfL2NjYQKPRgGkYGI3G6HZ7qFWrAGKsLC+j3e4gYyWJcU3GIzNtzvy9KIpQLpfhui6AdAWY
      vEcIWrFYhKZpMAzjnRR/gJSAGF7O7Xa7NKsBL2uz75H/RYc6fE4eEVKKdAUeCdKoOrlGqJpI
      zuXbE/XLrwXfPt8Gm8HZMIwZ+z3RBwzDQLVaRavVwsryEmzbRq22hCAIEIYhzOWlmfm9zXgI
      YWo2mzNnNmnzNU2T5gMi98x30A2awIwOQIC3bhQKBXqdpxQixZKASIzhkTitT9JmmvWGd11m
      EZ64C4j6ZeV2QuXZZ8gm5TPM8eNi58i2ySrqBDlJhojl5WUq3p2enmJtbS11o/LArhsBTdPg
      ui5GoxFWVlaoP1Ya9SfUnuWapjmf2vFdgrmDMBF1Z4/U08Qa0QciwHMIXvRIk60vU+REIhIx
      M2YyGYxGI1iWNWPeZeMNWMsHEZ/IKSw5P2BjG9I2O7/JJOlNFBs5nY3jmCa8dRyHGhLSQEQk
      2MAjkm1CVVVUq9UZZ8Q0owFJGECyWZD0iO8yCGcvSRJN0002AEkJzlNqVrRZREkk6U3hah6R
      yH3eqiJqg4DIskSQw/d96LpOzyrYOAU+jPDi4gKSJNHAdVlO0ph3u13qb8PG4bJinghJSR/D
      4RBLS0szugShvOR5/rSYnRfPPUm8cb/fR6FQoK4WBJHZ+acp0WQMbD/vouWHBXoQ1m63MRgO
      EYUhnGm18Fw2i063h1KxCNd14fkeqtNgcxYus45cdk+0CWYGuUAMIkjFA/HJ6Xa71CeHVdhV
      VUW324Usy6hWqzMB4kQUIqem3W4Xy8vLlDCwToKiTa+qKg3HJK4P7DwWiTqidSMHa0EQIJvN
      YjgcolwuU67Frh3/LvmbbFhS/5e8964dfPFANwD7of4Cf4F3BegG+Av8Bd5FeHfV/7/AXwDA
      /wTVqVBr8s8ilQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
