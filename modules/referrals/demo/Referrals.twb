<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xml:base='https://viz.mimirhealth.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <repository-location id='Referrals' path='/t/AustinKidney/workbooks' revision='1.2' site='AustinKidney' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Referrers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
        <calculation class='tableau' formula='6' />
        <range max='15' min='1' />
      </column>
      <column caption='Receivers' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='6'>
        <calculation class='tableau' formula='6' />
        <range max='15' min='1' />
      </column>
      <column caption='Payer' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Medicare&quot;'>
        <calculation class='tableau' formula='&quot;Medicare&quot;' />
        <aliases>
          <alias key='&quot;None&quot;' value='No Insurance' />
          <alias key='&quot;Private&quot;' value='Private Insurance' />
        </aliases>
        <members>
          <member value='&quot;Medicare&quot;' />
          <member alias='Private Insurance' value='&quot;Private&quot;' />
          <member alias='No Insurance' value='&quot;None&quot;' />
          <member value='&quot;All&quot;' />
        </members>
      </column>
      <column alias='Associated Payments' caption='Measure Selection' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pay&quot;'>
        <calculation class='tableau' formula='&quot;Pay&quot;' />
        <aliases>
          <alias key='&quot;Charge&quot;' value='Associated Charges' />
          <alias key='&quot;Count&quot;' value='Number of Encounters' />
          <alias key='&quot;Pay&quot;' value='Associated Payments' />
        </aliases>
        <members>
          <member alias='Number of Encounters' value='&quot;Count&quot;' />
          <member alias='Associated Charges' value='&quot;Charge&quot;' />
          <member alias='Associated Payments' value='&quot;Pay&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='cSQL Referral+ (DemoStandard)' inline='true' name='sqlserver.42152.682083842592' version='8.3'>
      <connection authentication='sqlserver' class='sqlserver' dbname='DemoStandard' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' server='104.197.18.221' server-oauth='' username='mimirdemo' workgroup-auth-mode='prompt'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cSQL Referral].[LINK]'>
              </expression>
              <expression op='[Sankey].[link]'>
              </expression>
            </expression>
          </clause>
          <relation name='cSQL Referral' type='text'>Select R.Id,r.Inbound,R.PatientId,R.EncounterId, &#13;&#10;R.IntProvId, ISNULL(LEFT(PInt.FirstName,1),&apos;&apos;)+ISNULL(LEFT(PInt.MiddleName,1),&apos;&apos;)+&apos; &apos;+PInt.Lastname as [Here], &#13;&#10;R.ExtProvId, LEFT(PExt.FirstName,1)+ISNULL(LEFT(PExt.MiddleName,1),&apos;&apos;)+&apos; &apos;+PExt.Lastname as [There],  PExt.Specialty, &#13;&#10;R.Reason,&#13;&#10;InsP.PlanName, &#13;&#10;R.DateInitiated as [Referral Date], R.DatePatientSeen as [Date Patient Seen], R.ReportDate as [Report Date],&#13;&#10;P.LastName+&apos;, &apos;+P.FirstName+&apos; &apos;+ISNULL(P.MiddleName+&apos;.&apos;,&apos;&apos;) as Patient, P.DoB, P.Gender,&#13;&#10;ISNULL((SELECT SUM(T.AMOUNT) from [Transaction] T&#13;&#10;WHERE &#13;&#10;T.TransactionType LIKE &apos;%charg%&apos;&#13;&#10;AND T.EncounterId=R.EncounterId),&apos;&apos;) as [Associated Charges],&#13;&#10;-ISNULL((SELECT SUM(T.AMOUNT) from [Transaction] T&#13;&#10;WHERE &#13;&#10;(T.TransactionType LIKE &apos;%paid%&apos;&#13;&#10;or T.TransactionType LIKE &apos;%payment%&apos;)&#13;&#10;AND T.EncounterId=R.EncounterId),&apos;&apos;) as [Associated Payments],&#13;&#10;&apos;link&apos; as LINK &#13;&#10;from Referral R&#13;&#10;JOIN Provider PInt on R.IntProvID=PInt.Id&#13;&#10;JOIN Provider PExt on R.ExtProvId=PExt.Id&#13;&#10;JOIN Patient P on R.PatientId=P.Id&#13;&#10;JOIN PatientInsurance PatI on P.id=PatI.Patientid&#13;&#10;JOIN InsurancePlan InsP on InsP.Id=PatI.PlanId</relation>
          <relation name='Sankey' table='[dbo].[Sankey]' type='table' />
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Id</remote-name>
            <remote-type>72</remote-type>
            <local-name>[Id]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_GUID&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_GUID&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inbound</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Inbound]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Inbound</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PatientId</remote-name>
            <remote-type>72</remote-type>
            <local-name>[PatientId]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>PatientId</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_GUID&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_GUID&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EncounterId</remote-name>
            <remote-type>72</remote-type>
            <local-name>[EncounterId]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>EncounterId</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_GUID&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_GUID&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IntProvId</remote-name>
            <remote-type>72</remote-type>
            <local-name>[IntProvId]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>IntProvId</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_GUID&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_GUID&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Here</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Here]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Here</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>53</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExtProvId</remote-name>
            <remote-type>72</remote-type>
            <local-name>[ExtProvId]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>ExtProvId</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_GUID&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_GUID&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>There</remote-name>
            <remote-type>129</remote-type>
            <local-name>[There]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>There</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>53</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Specialty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Specialty]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Specialty</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Reason]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Reason</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PlanName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PlanName]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>PlanName</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Referral Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Referral Date]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Referral Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Patient Seen</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date Patient Seen]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Date Patient Seen</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Report Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Report Date]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Report Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Patient</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Patient]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Patient</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>94</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DoB</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DoB]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>DoB</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>25</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Associated Charges</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Associated Charges]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Associated Charges</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <scale>4</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Associated Payments</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Associated Payments]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Associated Payments</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LINK</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LINK]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>LINK</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[link]</local-name>
            <parent-name>[Sankey]</parent-name>
            <remote-alias>link</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>t</remote-name>
            <remote-type>129</remote-type>
            <local-name>[t]</local-name>
            <parent-name>[Sankey]</parent-name>
            <remote-alias>t</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path</remote-name>
            <remote-type>17</remote-type>
            <local-name>[path]</local-name>
            <parent-name>[Sankey]</parent-name>
            <remote-alias>path</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minormax</remote-name>
            <remote-type>129</remote-type>
            <local-name>[minormax]</local-name>
            <parent-name>[Sankey]</parent-name>
            <remote-alias>minormax</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='xxxNAV outb' datatype='string' name='[Calculation_0280529100138029]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;Outbound Referrals&apos;' scope-isolation='false' />
      </column>
      <column caption='Measure Selection' datatype='real' name='[Calculation_0460528175838696]' role='measure' type='quantitative' visual-totals='Sum'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 4]=&apos;Count&apos;&#13;&#10;THEN COUNTD([Id])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Charge&apos;&#13;&#10;THEN SUM([Associated Charges])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Pay&apos;&#13;&#10;THEN SUM([Associated Payments])&#13;&#10;END&#13;&#10;// More measures can be added here. Just make sure to also add them in the corresponding parameter!' scope-isolation='false' />
      </column>
      <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
      </column>
      <column caption='Sigmoid' datatype='real' name='[Calculation_1000528163712163]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1/(1+EXP(1)^-[t])' scope-isolation='false' />
      </column>
      <column caption='Curve Min' datatype='real' name='[Calculation_1350528170309389]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2620528170108911]+(([Min Here (copy)]-[Calculation_2620528170108911])*ATTR([Calculation_1000528163712163]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Max Here' datatype='real' name='[Calculation_2140528170019951]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_7580528163834476])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Min Here' datatype='real' name='[Calculation_2620528170108911]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_7580528163834476])-[Calculation_7580528163834476]' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='xxxNAV inb' datatype='string' name='[Calculation_2730529105012490]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;Inbound Referrals&apos;' scope-isolation='false' />
      </column>
      <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;x other&quot;' value='other' />
        </aliases>
      </column>
      <column caption='Curve Polygon' datatype='real' name='[Calculation_5910528170359377]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE ATTR([minormax])&#13;&#10;WHEN &apos;Min&apos; THEN [Calculation_1350528170309389]&#13;&#10;WHEN &apos;Max&apos; THEN [Calculation_7910528170236455]&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='External agg' datatype='string' name='[Calculation_6200528163525848]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [There modified] &#13;&#10;THEN [There]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;x other&quot;' value='other' />
        </aliases>
      </column>
      <column caption='Flow Size' datatype='real' name='[Calculation_7580528163834476]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_0460528175838696]/TOTAL([Calculation_0460528175838696])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Curve Max' datatype='real' name='[Calculation_7910528170236455]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2140528170019951]+(([Max Here (copy)]-[Calculation_2140528170019951])*ATTR([Calculation_1000528163712163]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='xxxNAV Start' datatype='string' name='[Calculation_9320529150555755]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;&apos;' scope-isolation='false' />
      </column>
      <column caption='Curve Max OUT' datatype='real' name='[Curve Max (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Max Here (copy 2)]+(([Max There (copy)]-[Max Here (copy 2)])*ATTR([Calculation_1000528163712163]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Curve Min OUT' datatype='real' name='[Curve Min (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Min Here (copy 2)]+(([Min There (copy)]-[Min Here (copy 2)])*ATTR([Calculation_1000528163712163]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Curve Polygon OUT' datatype='real' name='[Curve Polygon (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE ATTR([minormax])&#13;&#10;WHEN &apos;Min&apos; THEN [Curve Min (copy)]&#13;&#10;WHEN &apos;Max&apos; THEN [Curve Max (copy)]&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' name='[DoB]' role='dimension' type='ordinal'>
      </column>
      <column caption='Flow Size OUT' datatype='real' name='[Flow Size (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Measure Selection (copy)]/TOTAL([Measure Selection (copy)])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Provider internal' datatype='string' name='[Here]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Id]' role='dimension' type='nominal'>
      </column>
      <column caption='Max Here OUT' datatype='real' name='[Max Here (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Flow Size (copy)])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Max There' datatype='real' name='[Max Here (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_7580528163834476])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Max There OUT' datatype='real' name='[Max There (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Flow Size (copy)])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Measure Outbound' datatype='integer' name='[Measure Selection (copy)]' role='measure' type='quantitative' visual-totals='Sum'>
        <calculation class='tableau' formula='COUNTD([Id])&#13;&#10;// The outbound referral streams only go by COUNT as we have no numbers for charges and payments.' scope-isolation='false' />
      </column>
      <column caption='Min Here OUT' datatype='real' name='[Min Here (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Flow Size (copy)])-[Flow Size (copy)]' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Min There' datatype='real' name='[Min Here (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_7580528163834476])-[Calculation_7580528163834476]' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Min There OUT' datatype='real' name='[Min There (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Flow Size (copy)])-[Flow Size (copy)]' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
          </table-calc>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Patient]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[PlanName]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Reason]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='-' />
        </aliases>
      </column>
      <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Specialty]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider external' datatype='string' name='[There]' role='dimension' type='nominal'>
      </column>
      <column caption='Link' datatype='string' name='[link]' role='dimension' type='nominal'>
      </column>
      <column caption='Minormax' datatype='string' name='[minormax]' role='dimension' type='nominal'>
      </column>
      <column caption='Path' datatype='integer' name='[path]' role='measure' type='quantitative'>
      </column>
      <column caption='T' datatype='real' datatype-customized='true' name='[t]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_6200528163525848]' derivation='None' name='[none:Calculation_6200528163525848:nk]' pivot='key' type='nominal' />
      <column-instance column='[DoB]' derivation='Day-Trunc' name='[tdy:DoB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Referral Date]' derivation='Year' name='[yr:Referral Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DAY(DoB),Here,Patient,YEAR(Referral Date),Specialty,There)' name='[Action (DAY(DoB),Here,Patient,YEAR(Referral Date),Specialty,There)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:DoB:qk]' />
          <groupfilter function='level-members' level='[Here]' />
          <groupfilter function='level-members' level='[Patient]' />
          <groupfilter function='level-members' level='[yr:Referral Date:ok]' />
          <groupfilter function='level-members' level='[Specialty]' />
          <groupfilter function='level-members' level='[There]' />
        </groupfilter>
      </group>
      <group caption='Action (External agg)' name='[Action (External agg)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6200528163525848]' />
        </groupfilter>
      </group>
      <group caption='Action (Here agg)' name='[Action (Here agg)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_5000528163600546]' />
        </groupfilter>
      </group>
      <group caption='Action (Here agg,There agg,Minormax,T)' name='[Action (Here agg,There agg,Minormax,T)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_5000528163600546]' />
          <groupfilter function='level-members' level='[Calculation_6200528163525848]' />
          <groupfilter function='level-members' level='[minormax]' />
          <groupfilter function='level-members' level='[t]' />
        </groupfilter>
      </group>
      <group caption='Action (Internal agg)' name='[Action (Internal agg)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_5000528163600546]' />
        </groupfilter>
      </group>
      <group caption='Action (Internal agg,External agg,Minormax,T)' name='[Action (Internal agg,External agg,Minormax,T)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_5000528163600546]' />
          <groupfilter function='level-members' level='[Calculation_6200528163525848]' />
          <groupfilter function='level-members' level='[minormax]' />
          <groupfilter function='level-members' level='[t]' />
        </groupfilter>
      </group>
      <group caption='Action (NAV inb)' name='[Action (NAV inb)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2730529105012490]' />
        </groupfilter>
      </group>
      <group caption='Action (NAV outb)' name='[Action (NAV outb)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_0280529100138029]' />
        </groupfilter>
      </group>
      <group caption='Action (There agg)' name='[Action (There agg)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6200528163525848]' />
        </groupfilter>
      </group>
      <group caption='Action (xxxNAV Start)' hidden='true' name='[Action (xxxNAV Start)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9320529150555755]' />
        </groupfilter>
      </group>
      <group name='[Here Top]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Id])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Here]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group name='[Medicare]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[PlanName]' member='&quot;Medicare Part B&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[No Insurance]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='empty-level' member='[PlanName]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[Private Insurance]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter from='&quot;Aetna HMO&quot;' function='range' level='[PlanName]' to='&quot;Humana PPO&quot;' />
          <groupfilter function='member' level='[PlanName]' member='&quot;United Healthcare HMO&quot;' />
          <groupfilter function='member' level='[PlanName]' member='&quot;United Healthcare PPO&quot;' />
        </groupfilter>
      </group>
      <group caption='There Top' name='[There modified]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Id])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[There]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Mahitha\Desktop\TABLEAU\cSQL Referral+ (DemoStandard).tde' schema='Extract' tablename='Extract' update-time='05/29/2015 06:26:52 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Associated Charges]' value='[Extract].[Associated Charges]' />
            <map key='[Associated Payments]' value='[Extract].[Associated Payments]' />
            <map key='[Calculation_1000528163712163]' value='[Extract].[Calculation_1000528163712163]' />
            <map key='[Date Patient Seen]' value='[Extract].[Date Patient Seen]' />
            <map key='[DoB]' value='[Extract].[DoB]' />
            <map key='[EncounterId]' value='[Extract].[EncounterId]' />
            <map key='[ExtProvId]' value='[Extract].[ExtProvId]' />
            <map key='[Gender]' value='[Extract].[Gender]' />
            <map key='[Here]' value='[Extract].[Here]' />
            <map key='[Id]' value='[Extract].[Id]' />
            <map key='[Inbound]' value='[Extract].[Inbound]' />
            <map key='[IntProvId]' value='[Extract].[IntProvId]' />
            <map key='[LINK]' value='[Extract].[LINK]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[PatientId]' value='[Extract].[PatientId]' />
            <map key='[Patient]' value='[Extract].[Patient]' />
            <map key='[PlanName]' value='[Extract].[PlanName]' />
            <map key='[Reason]' value='[Extract].[Reason]' />
            <map key='[Referral Date]' value='[Extract].[Referral Date]' />
            <map key='[Report Date]' value='[Extract].[Report Date]' />
            <map key='[Specialty]' value='[Extract].[Specialty]' />
            <map key='[There]' value='[Extract].[There]' />
            <map key='[link]' value='[Extract].[link1]' />
            <map key='[minormax]' value='[Extract].[minormax]' />
            <map key='[path]' value='[Extract].[path]' />
            <map key='[t]' value='[Extract].[t]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_1000528163712163]' formula='1/(1+EXP(1)^-[t])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='266854' timestamp-start='2015-05-29 18:26:52.285' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Associated Charges</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Associated Charges]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Associated Charges</remote-alias>
              <ordinal>0</ordinal>
              <family>cSQL Referral</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>292.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Associated Payments</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Associated Payments]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Associated Payments</remote-alias>
              <ordinal>1</ordinal>
              <family>cSQL Referral</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>234.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1000528163712163</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_1000528163712163]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1000528163712163</remote-alias>
              <ordinal>2</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0024726231566347752</statistic>
                <statistic aggregation='Max' datatype='real'>0.99752737684336534</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date Patient Seen</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date Patient Seen]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date Patient Seen</remote-alias>
              <ordinal>3</ordinal>
              <family>cSQL Referral</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>951</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-10#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-12-31#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DoB</remote-name>
              <remote-type>133</remote-type>
              <local-name>[DoB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DoB</remote-alias>
              <ordinal>4</ordinal>
              <family>cSQL Referral</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2042</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1900-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2004-12-21#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EncounterId</remote-name>
              <remote-type>129</remote-type>
              <local-name>[EncounterId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EncounterId</remote-alias>
              <ordinal>5</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2327</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;003B1CDB-0F67-4278-9E37-3E7075383461&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;FFD93DBA-72CC-4F0A-A34B-968E001663AE&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ExtProvId</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ExtProvId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ExtProvId</remote-alias>
              <ordinal>6</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;12E788CA-819B-4BF6-8497-F838563CF858&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;FB8FD702-D3DB-4D42-899D-B91D8881D5FD&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>7</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>25</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;male&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>100</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Here</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Here]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Here</remote-alias>
              <ordinal>8</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>53</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AO Whipple&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;V Apgar&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>212</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Id</remote-alias>
              <ordinal>9</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2723</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;002C011F-44AF-4E22-8BF3-46CF6998021D&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;FFD09F36-1A3E-4B6D-B5F2-10387758B905&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Inbound</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Inbound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Inbound</remote-alias>
              <ordinal>10</ordinal>
              <family>cSQL Referral</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IntProvId</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IntProvId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>IntProvId</remote-alias>
              <ordinal>11</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;18B7662E-2EA5-49D7-91E6-97ADD16BD8CE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;D98B0E7A-4FD8-4EE1-92B3-2368E5F5D010&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LINK</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LINK]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LINK</remote-alias>
              <ordinal>12</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>4</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;link&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;link&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>13</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PatientId</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PatientId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PatientId</remote-alias>
              <ordinal>14</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2140</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;000676CB-3B4E-4744-8FED-57204FC146D6&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;FFF9A969-D1E3-4152-801F-37BE4467E214&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Patient</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Patient]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Patient</remote-alias>
              <ordinal>15</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2140</approx-count>
              <scale>1</scale>
              <width>94</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aasen, Lamont J.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zúñiga, Gracias M.&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>376</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PlanName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PlanName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PlanName</remote-alias>
              <ordinal>16</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>50</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aetna HMO&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United Healthcare PPO&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>200</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Reason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Reason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Reason</remote-alias>
              <ordinal>17</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>50</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;diabetes eval (specialist)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;shortness of breath; pulmonolog. consult req.&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>200</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Referral Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Referral Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Referral Date</remote-alias>
              <ordinal>18</ordinal>
              <family>cSQL Referral</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>902</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-02#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-12-25#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Report Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Report Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Report Date</remote-alias>
              <ordinal>19</ordinal>
              <family>cSQL Referral</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>954</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-14#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-01-10#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Specialty</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Specialty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Specialty</remote-alias>
              <ordinal>20</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>50</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Cardiology&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Pulmonology&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>200</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>There</remote-name>
              <remote-type>129</remote-type>
              <local-name>[There]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>There</remote-alias>
              <ordinal>21</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>53</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Kussmaul&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WJ Kolff&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>212</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>link1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[link]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>link1</remote-alias>
              <ordinal>22</ordinal>
              <family>Sankey</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>4</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;link&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;link&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>minormax</remote-name>
              <remote-type>129</remote-type>
              <local-name>[minormax]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>minormax</remote-alias>
              <ordinal>23</ordinal>
              <family>Sankey</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>3</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Max&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Min&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>12</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>path</remote-name>
              <remote-type>16</remote-type>
              <local-name>[path]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>path</remote-alias>
              <ordinal>24</ordinal>
              <family>Sankey</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>98</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>97</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>t</remote-name>
              <remote-type>4</remote-type>
              <local-name>[t]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>t</remote-alias>
              <ordinal>25</ordinal>
              <family>Sankey</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-6.0</statistic>
                <statistic aggregation='Max' datatype='real'>6.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.39924' group-percentage='0.106464' measure-ordering='alphabetic' measure-percentage='0.3327' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_6200528163525848:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;A Kussmaul&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;KF Wenckebach&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;W Stokes&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;W Harvey&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;P Langerhans&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;W Mobitz&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;SP Himsworth&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;x other&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;WJ Kolff&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;J Cheyne&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;SG Banting&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;N Alwall&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_5000528163600546:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;x other&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;E Blackwell&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;RD Lee Crumpler&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;EK Willits&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;AO Whipple&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;SL Picotte&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;GE Goodfellow&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;V Apgar&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;0ther&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Referrers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
          <range max='15' min='1' />
        </column>
        <column caption='Receivers' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
          <range max='15' min='1' />
        </column>
        <column caption='Payer' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Medicare&quot;'>
          <calculation class='tableau' formula='&quot;Medicare&quot;' />
          <aliases>
            <alias key='&quot;None&quot;' value='No Insurance' />
            <alias key='&quot;Private&quot;' value='Private Insurance' />
          </aliases>
          <members>
            <member value='&quot;Medicare&quot;' />
            <member alias='Private Insurance' value='&quot;Private&quot;' />
            <member alias='No Insurance' value='&quot;None&quot;' />
            <member value='&quot;All&quot;' />
          </members>
        </column>
        <column alias='Associated Payments' caption='Measure Selection' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Pay&quot;'>
          <calculation class='tableau' formula='&quot;Pay&quot;' />
          <aliases>
            <alias key='&quot;Charge&quot;' value='Associated Charges' />
            <alias key='&quot;Count&quot;' value='Number of Encounters' />
            <alias key='&quot;Pay&quot;' value='Associated Payments' />
          </aliases>
          <members>
            <member alias='Number of Encounters' value='&quot;Count&quot;' />
            <member alias='Associated Charges' value='&quot;Charge&quot;' />
            <member alias='Associated Payments' value='&quot;Pay&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='see details for outbound referrals' name='[Action1]'>
      <activation auto-clear='true' />
      <source dashboard='Referrals Outbound' type='sheet'>
        <exclude-sheet name='.start NAV' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Outbound Patient List' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Referrals Outbound' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Referrals Outbound' />
      </command>
    </action>
    <action caption='NAV Outbound SNK' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Start' type='sheet' worksheet='.outb NAV' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Referrals Outbound' />
      </command>
    </action>
    <action caption='see details for inbound referrals' name='[Action4]'>
      <source dashboard='Referrals Inbound' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Inbound Patient List' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Referrals Inbound' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Referrals Inbound' />
      </command>
    </action>
    <action caption='NAV Inbound SNK' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Start' type='sheet' worksheet='.inbound NAV' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Referrals Inbound' />
      </command>
    </action>
    <action caption='NAV Start' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Referrals Outbound' type='sheet' worksheet='.start NAV' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='.inbound NAV,.outb NAV' />
        <param name='special-fields' value='all' />
        <param name='target' value='Start' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='.PAT in'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[DoB]' role='dimension' type='ordinal'>
            </column>
            <column caption='Provider internal' datatype='string' name='[Here]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Patient]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[PlanName]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Reason]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='-' />
              </aliases>
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Provider external' datatype='string' name='[There]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[DoB]' derivation='None' name='[none:DoB:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Here]' derivation='None' name='[none:Here:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[Patient]' derivation='None' name='[none:Patient:nk]' pivot='key' type='nominal' />
            <column-instance column='[PlanName]' derivation='None' name='[none:PlanName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Reason]' derivation='None' name='[none:Reason:nk]' pivot='key' type='nominal' />
            <column-instance column='[There]' derivation='None' name='[none:There:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Year' name='[yr:Referral Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (Internal agg)]'>
            <groupfilter function='level-members' level='[Calculation_5000528163600546]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (Internal agg,External agg,Minormax,T)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_5000528163600546]' member='&quot;V Apgar&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Calculation_6200528163525848]' member='&quot;J Cheyne&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[minormax]' member='&quot;Min&quot;' />
                  <groupfilter function='member' level='[t]' member='-4.0' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[Action (Internal agg)]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (Internal agg,External agg,Minormax,T)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='341' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Patient:nk]' value='176' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Reason:nk]' value='264' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Here:nk]' value='116' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:There:nk]' value='116' />
            <format attr='width' field='[sqlserver.42152.682083842592].[yr:Referral Date:ok]' value='68' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlserver.42152.682083842592].[none:PlanName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlserver.42152.682083842592].[none:Here:nk] / ([sqlserver.42152.682083842592].[none:There:nk] / ([sqlserver.42152.682083842592].[yr:Referral Date:ok] / ([sqlserver.42152.682083842592].[none:Patient:nk] / ([sqlserver.42152.682083842592].[none:DoB:ok] / [sqlserver.42152.682083842592].[none:Reason:nk])))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.PAT out'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column datatype='date' name='[DoB]' role='dimension' type='ordinal'>
            </column>
            <column caption='Provider internal' datatype='string' name='[Here]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Patient]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[PlanName]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Reason]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='-' />
              </aliases>
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Specialty]' role='dimension' type='nominal'>
            </column>
            <column caption='Provider external' datatype='string' name='[There]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[DoB]' derivation='None' name='[none:DoB:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Here]' derivation='None' name='[none:Here:nk]' pivot='key' type='nominal' />
            <column-instance column='[Patient]' derivation='None' name='[none:Patient:nk]' pivot='key' type='nominal' />
            <column-instance column='[PlanName]' derivation='None' name='[none:PlanName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Reason]' derivation='None' name='[none:Reason:nk]' pivot='key' type='nominal' />
            <column-instance column='[Specialty]' derivation='None' name='[none:Specialty:nk]' pivot='key' type='nominal' />
            <column-instance column='[There]' derivation='None' name='[none:There:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Year' name='[yr:Referral Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (External agg)]'>
            <groupfilter function='member' level='[Calculation_6200528163525848]' member='&quot;W Mobitz&quot;' user:ui-action-filter='[Action1]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[Action (External agg)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='143' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[sqlserver.42152.682083842592].[none:There:nk]' value='124' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Here:nk]' value='116' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Specialty:nk]' value='76' />
            <format attr='width' field='[sqlserver.42152.682083842592].[yr:Referral Date:ok]' value='64' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Reason:nk]' value='152' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='8' />
            <format attr='row-levels' value='8' />
            <format attr='row-horiz-levels' value='8' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlserver.42152.682083842592].[none:PlanName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlserver.42152.682083842592].[none:Here:nk] / ([sqlserver.42152.682083842592].[none:There:nk] / ([sqlserver.42152.682083842592].[none:Specialty:nk] / ([sqlserver.42152.682083842592].[yr:Referral Date:ok] / ([sqlserver.42152.682083842592].[none:Patient:nk] / ([sqlserver.42152.682083842592].[none:DoB:ok] / [sqlserver.42152.682083842592].[none:Reason:nk]))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.SNK in'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Referrers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range max='15' min='1' />
            </column>
            <column caption='Receivers' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Measure Selection' datatype='real' name='[Calculation_0460528175838696]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 4]=&apos;Count&apos;&#13;&#10;THEN COUNTD([Id])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Charge&apos;&#13;&#10;THEN SUM([Associated Charges])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Pay&apos;&#13;&#10;THEN SUM([Associated Payments])&#13;&#10;END&#13;&#10;// More measures can be added here. Just make sure to also add them in the corresponding parameter!' scope-isolation='false' />
            </column>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column caption='Curve Polygon' datatype='real' name='[Calculation_5910528170359377]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE ATTR([minormax])&#13;&#10;WHEN &apos;Min&apos; THEN [Calculation_1350528170309389]&#13;&#10;WHEN &apos;Max&apos; THEN [Calculation_7910528170236455]&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='External agg' datatype='string' name='[Calculation_6200528163525848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [There modified] &#13;&#10;THEN [There]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Minormax' datatype='string' name='[minormax]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6200528163525848]' derivation='None' name='[none:Calculation_6200528163525848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[minormax]' derivation='None' name='[none:minormax:nk]' pivot='key' type='nominal' />
            <column-instance column='[t]' derivation='None' name='[none:t:qk]' pivot='key' type='quantitative' />
            <column caption='Path' datatype='integer' name='[path]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[path]' derivation='Sum' name='[sum:path:qk]' pivot='key' type='quantitative' />
            <column caption='T' datatype='real' datatype-customized='true' name='[t]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0460528175838696]' derivation='User' name='[usr:Calculation_0460528175838696:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Calculation_5910528170359377]' derivation='User' name='[usr:Calculation_5910528170359377:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Calculation_1350528170309389]' ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Calculation_7580528163834476]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Min Here (copy)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Calculation_7910528170236455]' ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Max Here (copy)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Calculation_2620528170108911]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Calculation_2140528170019951]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV inb)]'>
            <groupfilter function='member' level='[Calculation_2730529105012490]' member='&quot;Inbound Referrals&quot;' user:ui-action-filter='[Action6]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' direction='ASC' />
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='7' included-values='in-range'>
            <min>#2012-01-01 00:00:00#</min>
            <max>#2014-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV inb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Referred to&#10;' />
            <format attr='title' field='[Parameters].[Parameter 2]' value='Referred from&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
              <lod column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
              <path column='[sqlserver.42152.682083842592].[sum:path:qk]' />
              <lod column='[sqlserver.42152.682083842592].[none:minormax:nk]' />
              <lod column='[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Referred from:&#9;</run>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Referred to:&#9;</run>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;&#9;&lt;[Parameters].[Parameter 4]&gt;: &lt;[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]&gt; </run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]</rows>
        <cols>[sqlserver.42152.682083842592].[none:t:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='.SNK out'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column caption='External agg' datatype='string' name='[Calculation_6200528163525848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [There modified] &#13;&#10;THEN [There]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column caption='Curve Polygon OUT' datatype='real' name='[Curve Polygon (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE ATTR([minormax])&#13;&#10;WHEN &apos;Min&apos; THEN [Curve Min (copy)]&#13;&#10;WHEN &apos;Max&apos; THEN [Curve Max (copy)]&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column caption='Measure Outbound' datatype='integer' name='[Measure Selection (copy)]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='COUNTD([Id])&#13;&#10;// The outbound referral streams only go by COUNT as we have no numbers for charges and payments.' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Minormax' datatype='string' name='[minormax]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6200528163525848]' derivation='None' name='[none:Calculation_6200528163525848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[minormax]' derivation='None' name='[none:minormax:nk]' pivot='key' type='nominal' />
            <column-instance column='[t]' derivation='None' name='[none:t:qk]' pivot='key' type='quantitative' />
            <column caption='Path' datatype='integer' name='[path]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[path]' derivation='Sum' name='[sum:path:qk]' pivot='key' type='quantitative' />
            <column caption='T' datatype='real' datatype-customized='true' name='[t]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Curve Polygon (copy)]' derivation='User' name='[usr:Curve Polygon (copy):qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Curve Min (copy)]' ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Min Here (copy 2)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Max Here (copy 2)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Flow Size (copy)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Curve Max (copy)]' ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Min There (copy)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Max There (copy)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Measure Selection (copy)]' derivation='User' name='[usr:Measure Selection (copy):vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV outb)]'>
            <groupfilter function='level-members' level='[Calculation_0280529100138029]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Calculation_5000528163600546:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' direction='ASC' />
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='5' included-values='in-range'>
            <min>#2013-07-31 00:00:00#</min>
            <max>#2014-08-12 23:59:59#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV outb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' field-type='quantitative' max='6.5818930041152255' min='-6.6181069958847738' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' value='Referrers'>
              <formatted-text>
                <run>Referrers</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
              <lod column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
              <path column='[sqlserver.42152.682083842592].[sum:path:qk]' />
              <lod column='[sqlserver.42152.682083842592].[none:minormax:nk]' />
              <tooltip column='[sqlserver.42152.682083842592].[usr:Measure Selection (copy):vtsum:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Referred from:&#9;</run>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Referred to:&#9;</run>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]&gt;&#10;&lt;[sqlserver.42152.682083842592].[usr:Measure Selection (copy):vtsum:qk]&gt; referrals</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='190' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]</rows>
        <cols>[sqlserver.42152.682083842592].[none:t:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='.external IN'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Measure Selection' datatype='real' name='[Calculation_0460528175838696]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 4]=&apos;Count&apos;&#13;&#10;THEN COUNTD([Id])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Charge&apos;&#13;&#10;THEN SUM([Associated Charges])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Pay&apos;&#13;&#10;THEN SUM([Associated Payments])&#13;&#10;END&#13;&#10;// More measures can be added here. Just make sure to also add them in the corresponding parameter!' scope-isolation='false' />
            </column>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='External agg' datatype='string' name='[Calculation_6200528163525848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [There modified] &#13;&#10;THEN [There]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6200528163525848]' derivation='None' name='[none:Calculation_6200528163525848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0460528175838696]' derivation='User' name='[usr:Calculation_0460528175838696:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV inb)]'>
            <groupfilter function='member' level='[Calculation_2730529105012490]' member='&quot;Inbound Referrals&quot;' user:ui-action-filter='[Action6]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='7' included-values='in-range'>
            <min>#2012-01-01 00:00:00#</min>
            <max>#2014-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV inb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
              <text column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]&gt;</run>
                <run>&#10;&lt;[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.external out'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column caption='External agg' datatype='string' name='[Calculation_6200528163525848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [There modified] &#13;&#10;THEN [There]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column caption='Measure Outbound' datatype='integer' name='[Measure Selection (copy)]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='COUNTD([Id])&#13;&#10;// The outbound referral streams only go by COUNT as we have no numbers for charges and payments.' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6200528163525848]' derivation='None' name='[none:Calculation_6200528163525848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Measure Selection (copy)]' derivation='User' name='[usr:Measure Selection (copy):vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV outb)]'>
            <groupfilter function='level-members' level='[Calculation_0280529100138029]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Calculation_5000528163600546:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='5' included-values='in-range'>
            <min>#2013-07-31 00:00:00#</min>
            <max>#2014-08-12 23:59:59#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV outb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='92' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' value='Referred To'>
              <formatted-text>
                <run>Referred To</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
              <text column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Measure Selection (copy):vtsum:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.inbound NAV'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='xxxNAV inb' datatype='string' name='[Calculation_2730529105012490]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;Inbound Referrals&apos;' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_2730529105012490]' derivation='None' name='[none:Calculation_2730529105012490:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='220' />
            <format attr='height' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontname='Trebuchet MS'>Examine referrals streams to providers in your organization.</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>&lt;</run>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]</run>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.internal IN'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Measure Selection' datatype='real' name='[Calculation_0460528175838696]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 4]=&apos;Count&apos;&#13;&#10;THEN COUNTD([Id])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Charge&apos;&#13;&#10;THEN SUM([Associated Charges])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Pay&apos;&#13;&#10;THEN SUM([Associated Payments])&#13;&#10;END&#13;&#10;// More measures can be added here. Just make sure to also add them in the corresponding parameter!' scope-isolation='false' />
            </column>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0460528175838696]' derivation='User' name='[usr:Calculation_0460528175838696:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV inb)]'>
            <groupfilter function='member' level='[Calculation_2730529105012490]' member='&quot;Inbound Referrals&quot;' user:ui-action-filter='[Action6]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='7' included-values='in-range'>
            <min>#2012-01-01 00:00:00#</min>
            <max>#2014-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV inb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
              <text column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]&gt;</run>
                <run>&#10;&#9;&lt;[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.internal out'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column caption='Measure Outbound' datatype='integer' name='[Measure Selection (copy)]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='COUNTD([Id])&#13;&#10;// The outbound referral streams only go by COUNT as we have no numbers for charges and payments.' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Measure Selection (copy)]' derivation='User' name='[usr:Measure Selection (copy):vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV outb)]'>
            <groupfilter function='level-members' level='[Calculation_0280529100138029]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Calculation_5000528163600546:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='5' included-values='in-range'>
            <min>#2013-07-31 00:00:00#</min>
            <max>#2014-08-12 23:59:59#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV outb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='92' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='12' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' value='Referrers of Interest'>
              <formatted-text>
                <run>Referrers of Interest</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
              <text column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Measure Selection (copy):vtsum:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.outb NAV'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='xxxNAV outb' datatype='string' name='[Calculation_0280529100138029]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;Outbound Referrals&apos;' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_0280529100138029]' derivation='None' name='[none:Calculation_0280529100138029:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='258' />
            <format attr='height' value='65' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontname='Trebuchet MS'>Examine referrals from providers in your organization to other providers.</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>&lt;</run>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]</run>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.start NAV'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='xxxNAV Start' datatype='string' name='[Calculation_9320529150555755]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_9320529150555755]' derivation='None' name='[none:Calculation_9320529150555755:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='53' />
            <format attr='width' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[sqlserver.42152.682083842592].[none:Calculation_9320529150555755:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontname='Trebuchet MS'>Return to the Start page</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='Custom/return to previous.png' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Inbound Patient List'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='82750' id='1' name='.PAT in' w='100000' x='0' y='17250'>
          </zone>
          <zone h='17250' id='3' param='C:\Users\Mahitha\Google Drive\Mimir Graphics\Referral Analysis.jpg' type='bitmap' w='21800' x='0' y='0'>
          </zone>
          <zone h='17250' id='4' type='empty' w='33333' x='66667' y='0'>
          </zone>
          <zone h='17250' id='5' type='text' w='44867' x='21800' y='0'>
            <formatted-text>
              <run bold='true' fontname='Trebuchet MS' fontsize='24'>Patient List &#10;inbound referrals</run>
            </formatted-text>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Outbound Patient List'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='17250' id='3' param='C:\Users\Mahitha\Google Drive\Mimir Graphics\Referral Analysis.jpg' type='bitmap' w='21800' x='0' y='0'>
          </zone>
          <zone h='17250' id='4' type='empty' w='33333' x='66667' y='0'>
          </zone>
          <zone h='17250' id='5' type='text' w='44867' x='21800' y='0'>
            <formatted-text>
              <run bold='true' fontname='Trebuchet MS' fontsize='24'>Patient List &#10;inbound referrals</run>
            </formatted-text>
          </zone>
          <zone h='82750' id='6' name='.PAT out' w='100000' x='0' y='17250'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Referrals Inbound'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='82250' id='5' param='horz' type='layout-flow' w='100000' x='0' y='17750'>
            <zone h='82250' id='3' type='layout-basic' w='84000' x='0' y='17750'>
              <zone h='78250' id='1' name='.SNK in' w='51800' x='16300' y='21750'>
              </zone>
              <zone h='78035' id='12' name='.external IN' w='16300' x='0' y='17750'>
              </zone>
              <zone h='78035' id='14' name='.internal IN' w='15900' x='68100' y='17750'>
              </zone>
              <zone h='4000' id='15' type='empty' w='51800' x='16300' y='17750'>
              </zone>
              <zone h='4215' id='16' type='empty' w='16300' x='0' y='95785'>
              </zone>
              <zone h='4215' id='17' type='empty' w='15900' x='68100' y='95785'>
              </zone>
            </zone>
            <zone fixed-size='160' h='82250' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='17750'>
              <zone h='8250' id='6' name='.SNK in' param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' type='filter' w='16000' x='84000' y='17750'>
              </zone>
              <zone h='8875' id='8' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='84000' y='26000'>
                <formatted-text>
                  <run>Referred from&#10;</run>
                </formatted-text>
              </zone>
              <zone h='8875' id='9' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='84000' y='34875'>
                <formatted-text>
                  <run>Referred to&#10;</run>
                </formatted-text>
              </zone>
              <zone h='6375' id='10' param='[Parameters].[Parameter 3]' type='paramctrl' w='16000' x='84000' y='43750'>
              </zone>
              <zone h='6375' id='11' param='[Parameters].[Parameter 4]' type='paramctrl' w='16000' x='84000' y='50125'>
              </zone>
            </zone>
          </zone>
          <zone h='17750' id='18' is-scaled='1' param='C:\Users\Mahitha\Google Drive\Mimir Graphics\Referral Analysis.jpg' type='bitmap' w='16300' x='0' y='0'>
          </zone>
          <zone forceUpdate='true' h='17750' id='19' name='' type='text' w='74100' x='16300' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontname='Trebuchet MS' fontsize='24'>Inbound Referrals</run>
            </formatted-text>
          </zone>
          <zone h='7750' id='20' type='empty' w='9600' x='90400' y='10000'>
          </zone>
          <zone h='10000' id='21' name='.start NAV' w='9600' x='90400' y='0'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Referrals Outbound'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_20' value='center' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='82500' id='5' param='horz' type='layout-flow' w='100000' x='0' y='17500'>
            <zone h='82500' id='3' type='layout-basic' w='84000' x='0' y='17500'>
              <zone h='78375' id='1' name='.SNK out' w='39700' x='23300' y='21625'>
              </zone>
              <zone h='78273' id='11' name='.internal out' w='23300' x='0' y='17500'>
              </zone>
              <zone h='78273' id='13' name='.external out' w='21000' x='63000' y='17500'>
              </zone>
              <zone h='4125' id='14' type='empty' w='39700' x='23300' y='17500'>
              </zone>
              <zone h='4227' id='15' type='empty' w='23300' x='0' y='95773'>
              </zone>
              <zone h='4227' id='16' type='empty' w='21000' x='63000' y='95773'>
              </zone>
            </zone>
            <zone fixed-size='160' h='82500' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='17500'>
              <zone h='8250' id='6' name='.SNK out' param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' type='filter' w='16000' x='84000' y='17500'>
              </zone>
              <zone h='8875' id='8' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='84000' y='25750'>
              </zone>
              <zone h='8875' id='9' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='84000' y='34625'>
              </zone>
              <zone h='6375' id='10' param='[Parameters].[Parameter 3]' type='paramctrl' w='16000' x='84000' y='43500'>
              </zone>
              <zone h='6500' id='17' name='.internal out' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='filter' w='16000' x='84000' y='49875'>
              </zone>
            </zone>
          </zone>
          <zone h='17500' id='18' type='empty' w='19700' x='71000' y='0'>
          </zone>
          <zone h='17500' id='19' is-scaled='1' param='C:\Users\Mahitha\Google Drive\Mimir Graphics\Referral Analysis.jpg' type='bitmap' w='14600' x='0' y='0'>
          </zone>
          <zone forceUpdate='true' h='17500' id='20' name='' type='text' w='56400' x='14600' y='0'>
            <formatted-text>
              <run bold='true' fontname='Trebuchet MS' fontsize='24'>Outbound Referrals</run>
            </formatted-text>
          </zone>
          <zone h='9625' id='21' name='.start NAV' w='9300' x='90700' y='0'>
          </zone>
          <zone h='7875' id='22' type='empty' w='9300' x='90700' y='9625'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Start'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='24687' id='1' param='C:\Users\Mahitha\Google Drive\Mimir Graphics\Referral Analysis.jpg' type='bitmap' w='46067' x='26311' y='18594'>
          </zone>
          <zone h='100000' id='3' type='empty' w='27622' x='72378' y='0'>
          </zone>
          <zone h='100000' id='4' type='empty' w='26311' x='0' y='0'>
          </zone>
          <zone h='18594' id='5' is-scaled='1' param='C:\Users\Mahitha\Google Drive\Mimir Graphics\Mimir Logo resize.jpg' type='bitmap' w='46067' x='26311' y='0'>
          </zone>
          <zone h='40313' id='6' param='vert' type='layout-flow' w='46067' x='26311' y='43281'>
            <zone fixed-size='61' h='10781' id='10' is-fixed='true' type='empty' w='46067' x='26311' y='43281'>
            </zone>
            <zone fixed-size='100' h='14766' id='7' is-fixed='true' name='.outb NAV' w='46067' x='26311' y='54062'>
              <layout-cache type-h='cell' type-w='fixed' />
            </zone>
            <zone fixed-size='100' h='14766' id='8' is-fixed='true' name='.inbound NAV' w='46067' x='26311' y='68828'>
              <layout-cache type-h='cell' type-w='fixed' />
            </zone>
          </zone>
          <zone h='16406' id='9' type='empty' w='46067' x='26311' y='83594'>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Start'>
      <active id='8' />
      <zones>
        <zone h='100000' id='3' name='' type='empty' w='27622' x='72378' y='0' />
        <zone h='100000' id='4' name='' type='empty' w='26311' x='0' y='0' />
        <zone is-scaled='1' name='' type='bitmap' />
        <zone fixed-size='61' h='10781' id='10' is-fixed='true' name='' type='empty' w='46067' x='26311' y='43281' />
        <zone name='.outb NAV'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='.inbound NAV'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                    </x-fields>
                    <y-fields>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Inbound Referrals&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
        <zone h='16406' id='9' name='' type='empty' w='46067' x='26311' y='83594' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Referrals Outbound'>
      <active id='13' />
      <zones>
        <zone name='.SNK out'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='.internal out'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='.external out'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
            </color-one-way>
          </highlight>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                    </x-fields>
                    <y-fields>
                      <field>[sqlserver.42152.682083842592].[usr:Measure Selection (copy):vtsum:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
                    <field>[sqlserver.42152.682083842592].[usr:Measure Selection (copy):vtsum:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;W Mobitz&quot;</value>
                  <value>16</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
        <zone h='4125' id='14' name='' type='empty' w='39700' x='23300' y='17500' />
        <zone h='4227' id='15' name='' type='empty' w='23300' x='0' y='95773' />
        <zone h='4227' id='16' name='' type='empty' w='21000' x='63000' y='95773' />
        <zone name='.SNK out' param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='slider' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone mode='slider' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone mode='checkdropdown' name='.internal out' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='filter' values='relevant' />
        <zone h='17500' id='18' name='' type='empty' w='29000' x='71000' y='0' />
        <zone is-scaled='1' name='' type='bitmap' />
        <zone forceUpdate='true' name='' type='text' />
        <zone name='.start NAV'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Referrals Inbound'>
      <active id='4' />
      <zones>
        <zone name='.SNK in'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</field>
            </color-one-way>
          </highlight>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[sqlserver.42152.682083842592].[none:t:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</field>
                    <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
                    <field>[sqlserver.42152.682083842592].[none:minormax:nk]</field>
                    <field>[sqlserver.42152.682083842592].[none:t:qk]</field>
                    <field>[sqlserver.42152.682083842592].[sum:path:qk]</field>
                    <field>[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]</field>
                    <field>[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;RD Lee Crumpler&quot;</value>
                  <value>&quot;x other&quot;</value>
                  <value>&quot;Min&quot;</value>
                  <value>-0.5</value>
                  <value>2728</value>
                  <value>17370.0</value>
                  <value>0.32813146056146958</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
        <zone name='.external IN'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='.internal IN'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone h='4000' id='15' name='' type='empty' w='51800' x='16300' y='17750' />
        <zone h='4215' id='16' name='' type='empty' w='16300' x='0' y='95785' />
        <zone h='4215' id='17' name='' type='empty' w='15900' x='68100' y='95785' />
        <zone name='.SNK in' param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' show-null-ctrls='false' type='filter' />
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 4]' type='paramctrl' />
        <zone is-scaled='1' name='' type='bitmap' />
        <zone forceUpdate='true' name='' type='text' />
        <zone h='17750' id='20' name='' type='empty' w='25000' x='75000' y='0' />
        <zone name='.start NAV'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.SNK out'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='37' type='pages' />
            <card size='15' type='filters' />
            <card size='254' type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' size='101' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='checkdropdown' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Inbound:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:minormax:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:t:ok]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.internal out'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.external out'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.PAT out'>
      <cards>
        <edge name='left'>
          <strip size='166'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Here:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Patient:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:PlanName:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Reason:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Specialty:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:There:nk]</field>
          <field>[sqlserver.42152.682083842592].[yr:DoB:ok]</field>
          <field>[sqlserver.42152.682083842592].[yr:Referral Date:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.outb NAV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.SNK in'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' show-null-ctrls='false' type='filter' />
            <card custom-title='true' mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card custom-title='true' mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Inbound:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:minormax:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:t:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.PAT in'>
      <cards>
        <edge name='left'>
          <strip size='166'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Here:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Inbound:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Patient:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:PlanName:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Reason:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Specialty:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:There:nk]</field>
          <field>[sqlserver.42152.682083842592].[yr:DoB:ok]</field>
          <field>[sqlserver.42152.682083842592].[yr:Referral Date:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.external IN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Inbound:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.internal IN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Inbound:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.inbound NAV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Inbound Patient List'>
      <active id='1' />
      <zones>
        <zone h='17250' id='4' name='' type='empty' w='33333' x='66667' y='0' />
        <zone h='17250' id='5' name='' type='text' w='44867' x='21800' y='0' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Outbound Patient List'>
      <active id='6' />
      <zones>
        <zone h='17250' id='4' name='' type='empty' w='33333' x='66667' y='0' />
        <zone h='17250' id='5' name='' type='text' w='44867' x='21800' y='0' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.start NAV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_9320529150555755:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Start' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Referrals Outbound' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Referrals Inbound' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='.SNK out' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='.internal out' width='133'>
      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
    </thumbnail>
    <thumbnail height='192' name='.external out' width='139'>
      iVBORw0KGgoAAAANSUhEUgAAAIsAAADACAYAAAA0hpBQAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARXUlEQVR4nO3dfVxUdb7A8c/MMAMMMwiICCg+P4Ao4OOGuanZlsq9V1517VZWVnrXNrfS
      7YHWVyamua5laZtae7XSzFrpem03e7JeamWUWz7ypAOCioCIPA4DMzBz7h+ASyj40xAqv+/X
      iz8458yZ38zrwzkzw5lzdJqmaQihQN/ZAxA/HxKLUCaxCGUSi1AmsQhlEotQJrEIZRKLUCax
      CGUSi1AmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlEotQ
      JrEIZRKLUCaxCGUSi1AmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlEotQJrEIZRKLUCaxCGUS
      i1AmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlXp09gPaUlZXV2UP4RftFxQIQGRnZ2UP4xZLd
      kFAmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlEotQJrEI
      ZR148FMVB9Yv5ZXduVS5TATHTeP3D09niBUKtz3Bo++eOL9k/PytzI8HqlJZk7SGPSUQHHcn
      SUkJ9DZ03IhFC1pHOfiqNnP+Zi3bqWmaM1t75/E7tJmvHtQ0rV77csV07fH/LWhxg2pt17I7
      tIfWp2tOZ7a2ef4d2rJd1W3eRWZm5tUavdA0reN2Q7FzePPFGfQ3Aab+XD8mDIfDAWSTk2Mg
      IiKsxQ1sHD3qTcyoIZhM/Rk3JoQDBw512HDFhTrnNYv7BHtTKxg3LhZKs8ku9Sb9jZncefud
      zHx6MxlVAA4cjiCCghoHajBAQSGFnTJgAZ1xwLa7jK9e/jOHxj3D0tFmIIElWxMa5rlOs33J
      46x4K5oND7W9GjmSv+N1bCyuHFKeXUXexEUsndSdC16rmnowMiaMLftyKaY/ZnMppaVABHjc
      bggPo2lndbGj+CWgq6vjdkPuE6QsWo/7/pU80TyUnM3MnbuBIzVucOWwd18h3WJjCWMoMbFO
      Dn+XgcuVw1f7ihk+PLbDhisupNM0TeuIOyrdsZAHNx794cT4+WydP5Kcv7/Ayq0HKXGZfvgW
      +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
    </thumbnail>
    <thumbnail height='192' name='.PAT out' width='192'>
      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
    </thumbnail>
    <thumbnail height='109' name='.outb NAV' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='.SNK in' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='.PAT in' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='.external IN' width='64'>
      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
      zchdK9BkxYMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='.internal IN' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAADACAYAAAC02WUGAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAE6UlEQVR4nO2dTUwcZRyHn9l1gQVaoCDg0m1oBbNllybaNl4a9eChMZp4UBPTRJuqTRS/
      DiZ+1KRtUjThoKfaxJiKJNUDHho9NG1CExPjpe2h6UJXwbB0oVRYaluBDUthPDS0fCwwkra/
      GP7Pbd55591nnryzHDZhHNd1XVYxPrWAGgugFlBjAdQCaiyAWkCNBVALqLEAagE1FkAtoMYC
      qAXUWAC1gBoLoBZQYwHUAmosgFpAjQVQC6ixAGoBNRZALaDGAqgF1FgAtYAaC6AWUGMB1AJq
      LIBaQI0FUAuosQBqATUWQC2gxgKoBdQ8sNyERCJxPzxkLBsAIBKJ3GsPGav+EbAAagE1FkAt
      oMYCqAXUWAC1gBoLoBZQYwHUAmosgFpAjQVQC6ixAGoBNRZALaDGAqgF1Hj6XWApGr9rvBse
      940Lr16Yc7zqd4AFUAuosQBqATUWQC2gxgKoBdRYALWAGgugFlBjAdQCaiyAWkCNBVALqLEA
      agE1FkAtoMYCqAXUWAC1gBoLoBZQYwHUAmosgFpAjQVQC6ixAGoBNRZALaDGAqgF1FgAtYAa
      C6AWUGMB1AJqLIBaQI0FUAuosQBqATUWQC2gxgKoBdRYALWAGgugFlBjAdQCaiyAWkCNBVAL
      qLEAagE1FkAtoMYCqAXUWAC1gBoLoBZQYwHUAmosgFpAjQVQC6ixAGoBNRZALaDGAqgF1FgA
      tYCaVR/A0z9XjzoOXbOOA2sbef2H03z1TAUMDNG9b4iJ22d9BBorWL+3kqI18xY6kyJ+GMKt
      YUrugjwAUzcZ/bmfyyfHyGZcfOXFVLwRpjLi93S5xx3QwP64i+u6uO44v73j45umFs7cPp9P
      ZXOMWGuM2Nf1VBWMkGwZnhXlXuEy2tZN37l8Qoc2E2uNEnkzyI0v+hhJe1thBY9AkG0vP099
      Mkky1+m8AKV7qilKXeVqj9c1p8mcSPL73jjx17roafsn59jU/Msy10j/4qd8z0MUl/sAB19d
      FeG3S8nPTt/anbt7SR2+SPzDv7hxvBsneoBOANp5yYmuJECGs23tdNXWUrvYlGAhhaFJbv7t
      bUU3PkiyI0CoJUrsyEaKE5dyjvX/Oi/Bn+NkCBLcOHc4f8s6ikMztzbOVOwRop9Vkp/jsz2+
      YKGLgzGHgzP3t2EnX/7UzHZvFy9LtmecqfQEfe/fKVaWY8yJj8GOtXcuLPDhY3qZ1fMorPPj
      LPKV4DFAA/vjnRyIZjj76RPsPN3IozWBxadnxhm/nE9hyNvqAMRq2PxBGTOeE8e7F4wtoKaA
      Av8wmV4ombULsh1JUmNVPLx17nRf4cKV/uMjEGTboRMcWf8tL7zVTs7vmewk145eYaxuHaU1
      3lbN21SI/+II6d5pyGa48klnzrHejsl5OqWU75hi5OggoyPTgMt0T5qB45Os2Rpc8DmBsgAM
      nOd8epLBtu85xYreMVLBi8eOcSr0LE83N4ADMMHQvjhDAH4feQ0V1L5XTl7O66+T2n2d1Mzh
      9jCxpmo2PJei//Muhqd8FDwZpnpL0YKx2qfm7zqH4lfqCf94iYGPu5jMcuvPYNMmKmuAgXnT
      Hyvno46T7HqwhMi7u3icP3Bc13WXut1EIrHky9ftJSv/cyyAWkCNBVALqLEAagE1FkAtoMYC
      qAXUWAC1gBoLoBZQYwHUAmr+BWzOKM5YtCuRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='116' name='.inbound NAV' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Inbound Patient List' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Outbound Patient List' width='192'>
      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
      NRGGOgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='97' name='.start NAV' width='134'>
      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
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Custom/help-icon.jpg'>
        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
      </shape>
      <shape name='Custom/mail.png'>
        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
      </shape>
      <shape name='Custom/return to previous.png'>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAYAAAA+s9J6AAAACXBIWXMAAA7EAAAOxAGVKw4b
        AAAgAElEQVR4nO19e5QdVZnvrx7n2Y+EpEknJIEkTZMYQggkRiAZQSAgjgxCJsJFHcfrFZTB
        OyPOXJlxGBeD4xJHcN3RiwLXwasOV8nAiCASEgTmJiIQQoIBAk0nEZJ0QjqdTj/Oqx77/lG9
        q6vq1Oucs0+dXafPXstl6LOr6tu196/29+3f9xAIIQQejf4kCIJXl9B9/H5n1Sdu8tKmqirG
        FB2D4wXsHxzFsbEC8rkihvIl7DuRx5FcEQMjeYxoBHlVg64bY9g/VoBAdBBBxIL2NABAFAVk
        ZAmdkoA5nRl0Z1NYOC2DGZkkMtkUZransaCrA/Pak5BlGbIsB8pnHQ/Ax7uL21z7ySJ4gVBV
        VQCAJEmuFxJCoGla6D5ek11JH6/nNEJeP1loH+c9hvMlE2i/238Ue4+eQN/xHAbyCvqPjBid
        ZNH4f+utZcmQWzT+qOkEkihAIPrk+IlQ1mfyRw2wzrJqXNfT3Yk5mQSWdnVg/ox2nLfgZCzo
        6kBXWxrTM0mb7JW832ab63rL6wpCRVGgaRpSqZTnAOiNZVkO7JNIJDyFU1XV94scpg9P8lq/
        iK8NHEf/4WFs7juMt44Moz+noP/YGKAWAVEAUhkAk8CxNgowIoiuzwEAkWggEDz7CESHAOLb
        R9OJAVLAAKoA9MxoR082gTO6p2Nd72z0zJ6OxSd3+I456P2qqmruBrW8X57mmoW8gAsIC4WC
        OQC3GxNCUCwWAcD3RQT1oQOQJMnzRdAB+PVhLW86nXZ9Thh5Xxs4jpf6BvDE3vfwi7cHoCjE
        WNiJyZ1MJBpEXYMmyq7AEIgOSVdBBAG6IPn20UUJuiC5ykKfE6aPmyzmTprPAaKARDqFj50+
        Bx9ZNAtrl87D6V2dZl86B0FzDXi/30bMNYu16QfAMPICDhAWCgUTtV4X5XI5AEA2m/UcAB2k
        Vx9FUVAsFiHLsuekFAoFqKqKVCrlOyks5C0UCr6yeMk7nC9h+x+O4tk3D+FbL70NJVcAEilA
        llx3N1krASDQxIQvuAAEgFQBIECVkmW/AxRcKnRR9gSgpCsQiO7ZxykLVXehaoCiQ2pL4tZV
        C7H61C5csHAGuqZPc31OmPcb5VzztDZNNZaCMAjZPA5SVVWk0+maASgIAtra2lyfoygKSqWS
        +TIPj+bx3JuH8PDud7Gx7wigaIBeQiop++46BgCDwBUGgEafKAHoJoumE6CYB3QCZLLY0NuN
        9cvm48LFp2B2h6FmVwLAMH1qnWu6Nv3mOqq1SZ8jy7IBwiDdNswgCSEYHx+HIAhNA0Bqx5wY
        z+G3+4bw011/wCP970ErqkDC2O2CFjTAcgfkA4Ceu6SiQUrJuKZnFj559mm4YOEMTG9v81XX
        ogIgnWse1qZTHRZ0XSd+pzt0kIQQtLW1NRyA4+PjIIREAsAX3jmGH/+uD/fteqfMtgOCFzQQ
        bxW0Gnk1nUAWCNQJe+jm1Yvx2QvOwIp5M239WH5sw67Neu+A1a5NQZ8gnfwA6LzI2nj7ytQK
        wOF8CQ/t2Itv/7YPfQODQCIFKVn+rPAAZKGCKiCCCE10fy+8ANAqC5VXK6mAomP5/Bn4i9WL
        8PFzF2FaOoFcLodkMhnZXPO8Nj15wjjq2bUA8O3BEfxo25vmAUsqnfDcdaIFIJ8qaBgAWpum
        E0DRkEgK+B/vPx3/ZfXpOHPOSa7yNqMN6CevKwh5U0HrCcDXBo7j9k27sPGNQwCAlKSDCILn
        rtO8NmBt8lJZglVmDcWSCkhJbHjfKfja5WfbwMhaBY3D2iwDIctTRd5sQKss2/Yewa2P78DW
        /ceATAIJQff8itPWUkEr3wH95KWq6toFM/Hda1bjzO5OJif0cVqbgAOEzUxDUFl2HjiGb2z5
        PTa+egDIJCwE+tQCICt5qwWgtWk6AfI5XLZwNu68enXZIQ7QnGuzjKynR6eapjXNIKm82WwW
        rx8enlQ7LWQ6WwDGTQVtPACt8mpiAmpJx4aldjW1WQFI6RmBGA2qqgb65MVJz6YflcGcgju3
        7Mb3tu8DBNhOOvkDYJQ0RFQ2oL+89N2VqakE+OqaXvz1ZWejTRZQKpWaiqO28vImWU8I8XW+
        jeqol5WePTY2hh+90Icv/uYtQNXKaIapqILytgPSd+flaaSVVKQkHd++5Ex8/sKzXNdD3NYm
        3bGt9EwgWR+no17atuw5iJse24G+o6OmZ4u18QfAqauChpG3qIpYPmc67rlqJdYs6jb7xG1t
        ernxBZL1cdrmh/MlfOU/XsR9O94GUhlXJ2r+VNBmpCHYfzBoyNXNKxfiO9e8H7IsY3x8HEA8
        bEC/U1tfsp53dx9r27LnINb9780AACmTdX0OfzsgH65olL8L7sNKBSVVy6uVVECW8OifrsYV
        y+b5hhrxsjaDaBNXEMbF3Qcwdr9b/v15PPDKXl8vFx4BONVsQJbyFgsKbljVizuvXl2WBYCX
        tQmEiyQpA2Gc9Oxte4/g0xtfQP/RIaSSckQAjJsK2nwApH1URUfPjHb8nw0fMG1FXtYmEM5x
        gBBSOVnPyyC//uRO3Pab15GSjTQQ8QHg1KMh6vnBoD6pd1y8FLdeugzFYhGSJMUGgMbYKiDr
        edCzDwyN4uIfPou+o6MRA7ClglYjbxANwerjpY2Po3dOF574zIW21BvW1kg3Sbc+Ji0Ylqzn
        YQfcsucg1v1kKwAgRRRjMLEBoOrrGN6MAKxE3lpA6tyxn/zEGly6ZK6tD087oDOLhQjATOvG
        MwDv3rQT6/71OcgCiRiAhBkP2AKguyxhAKhKyUB56XpY96/P4XtPv2L24Q2ApVIJkiSZzzHJ
        eq8UBI0GoKIo+MS/bcPG1w9BToqhbaqWDVi5vLzQEJN9jHdXVfxiUcWGpafgvmsvQEJXfAOI
        o8rW4IUlT57Q7yJrqycAD4/msfaezegfGoOciBqALRuwenkJAxuwdnm1fA49J8/As5/7EObN
        6HDtE5UN6IclTxA2GoA7DxzD6h88BYWIkAUS+lifHwC2aIha5a1lrq124rxpnXj0z/6oLJI/
        ShXUD0ueGbgbCUDrAUz0AIwHD8hK3jjQEG6yVPLBoImMN39qrXlgwwsAjXE7QNhoGuLn2/tx
        3YPPA5nEBADjp4LysKDj5Io22af2ufaTVxsv4WfXn4/1K05DsVhsWNJo57NsIAxz43rugPdt
        24MbH94OqS3JTC1pNhuQlby8qqD1llcbH8d3/3gFbr7kHNffowSgqhqp9mXrH2igYSMAePem
        nfjy0683CICsVNDoeUBaocn+nGh2QB5twKC5ltMJfHHTGwBQBsRKVdBaAKgoyqTs9OEUlY0A
        4NefnABgSraoJXECYDh52dEQdgAuaE9D0wkEoocGYK0fDFkrMQKgYvbxk4WVyqyJMqSUjC9u
        egNff3Kn+XvUSaQ0TTOybwvCJFkvy3IguIJswGoBeNtTux0AjNIGrB2AVqLYS152O0rCBsA9
        f/lhbP/vH0ZPZ8bMeh1mB6w9JQWY2oBRuM5Z51pKybjtqd0mECtRQVkA0JpRLpCsj0QFNQEY
        NxuwMTQEBeCum9aZx+5vD47gwz98Fv0j+aqDmZtVBfWTRSuquOuSpfjixWeGSu9Sj8giURCE
        hgDwvm17GghAdq5oDYkwB0wA0uDree1JbL1pHRKCbq/Si8YAUBf9ayvSMfnJwlIF9ZIlJev4
        8qZX8MCL/Q3LY1ouWYiLaKtWBf359n7jFLRlA1aV4qHvS1fYAAgYfr+zOzJ45ysfQ09nxohA
        B9sFXYm83n0m310UtEmYuZba2nDjw9vx8+39tj5RJRJ2BWHYHbAaHnDLnoO47sHnLaegLRsw
        jCxUBd39V1fg9K5OqKqKXC5Xlv1gdkcGW29ahyUz2qHphNkOyIYHpAdCUeyA4ecaAKS2JK57
        8Hls2XMQAFsbMAhLruWy6+mKds73twBohCdM89iAYRLdHhgaRc9dv4RASMMdB6K3AavXdjSd
        4JUvXIolXW3QNK3uACSE2HdCRVHq6oy9+gdPAWiUKxr/ADT6lNMQUDWbDViYOAX1C77uyibQ
        /+U/gS5KZTYiK3mrIeLdGi8ApO28e57AYE6pOwBVdcJksP6BBvWytgEVRcHaezZbnLGjDsiN
        hw3olJeCp+9vPmrugGFTUALAvBkdZTZiWHlZ84CNoCGqkTdFSiiWNFx0/zMmSKyNFQAVRTFc
        1ihPaCXrWduAAPCJf9tmhCOZO2C8fEHrbQMafTxswJsvM23AYrFYcQa8MhuRsQ0YfAoapQ3I
        QtsRIGWy6B8aw/U/3WrrwzKwwUoLVkTWVxsRv/H1QxPxgHFUQevviuZcRE4aIowN6LdAZndk
        8MxN65CEClHXmKqgtaakiIKGqMbckJIyNr5+CHdvMsh8loENzjQyvhm4rTeuOifMvz7XiogP
        5YpmUUFVDX1/81Gc3tXJLAu6qqo4PJLHorsfh0JEV0I/LtEQTnnrOddaUcXm/3oh1i4wyrXV
        I7LIN7K+1qxo8+96IrbhSI3wLDFtwC9dYVNBATYpKNPpNAbzCj50z2bsGRqzFclhlxUt2ixu
        9Q49o/fZfcuf1C2Lmy9ZX0vY/8U/fBYAED8bsLHREE4bEGADQOqrSFXTngkbkcpr7IBsABjd
        IQybufZbm/Rgaf1Ptrr2YRFb60vW15KYt+/oaGyzojUiGsJJQ7AGoLUPPayRRKGiU9C4uKKx
        5i1VKYlXB4ZtURcAGwAa8niQ9bWkpl/7g6djmZg3OhvQxRVtwgZkXQfEr8+BoVFcdP8znk7f
        U9EG9JNXK6rY+vlLsGZRN7PsEoBjJ6RHp7UUZ/n0xhdiCUBeXNGqoSGcLQwAC4UCurIJPPu5
        D2GJg0f0ktd7TPy5otXlg5GQ8OmNL+DwaD4Upx4EwDKynkb61pJ345Z/fx79R4cAxAmAjbUB
        WdEQtIUFIO0zb0ZHmY3Ipw3IjnIK87F1k1cSBfQfHcLf/eJFZLPZmgBIP7YmWU+9ZayBhs6L
        wtQHfOCVvRFXR2oeGzCMKxpLAFo/tlYbUdNJRe8uDq5olXg9EUH0netUUsIDr+zF028ecu1T
        CaMgScZzAstlh62Qe9JtD0YIwOaiIaKyAYPsGDPZ8tEhyOk0JzZg/e19Oo9h16ZCjOcot6+3
        AS0sACVJspH1IoCaAAgAX/mPFwHESQVtHABZuKI5GwsAEkIwPSHgyc9ehJ6TZ0Alfgc18XNF
        81ubdB7Drk1JFABVw5ceecnsU8kO6Kz5IlK91O8iPwBu2XMQ9+14O6IS1fFxRQsTER+1DegH
        wFwuB03TcHpXp2uEfjO4ovnJW+lcS0kZ33t5H7btPWI6Y1d7oOnKE4YBICEEY2NjuOmxHUAq
        EzhIflzRGmcDukXE8wJAKgtg2IjvfXW9EX0xkcXNmhUtGgBGZwNWvTZlCZ95+EUUi0W0tbVV
        fZ5SNoKwqd+KxSJ+9EIf+o6OVp1YqLkj4u1Z0YIi4q2tUQC0yvLawHHsHyvYIl+ic0WrLw0h
        EJ3J2kwRBX0Dg3hw14GatMmKy2VTAB4v6ph/1xOGwA4Q8mcDxicivhEAdNJS1OHCcLyPR0S8
        s080dUAMWVQi4PjfX43pmclnhtUmActOGMZGoSd52WwWd27ZDahanQEYDxrC6MMnDeEHQEKI
        OwDvtQMwPjRE/WxAd3knZFE0fPupXebvYQFIyfrQ5bKtiW/6j+ex7Du/hpRyeINztwNOPVe0
        sKd0hBC0tbXZZLHvgFObhqhUXq2oYveEzR9k71tLTshyyHLZzgIYt2/aBTi68QjAqeiK5ra7
        0Wb9QqfTaR8Axo2GCLYBK6UhKpZXAG7ftCtQ26HrwVouW6R6aZjsw+l0GjsPHMPGNw7ZYtH4
        VEGnpita1TbgveU2YHxoiOBwJDYqqLcsUlLGxt378fKhE2UaBm0US840Mr5kvVvy029s+T0g
        TwraoiHiZQNms1l3ACbiaAPyEypHQfo///MN13v4lVPzJOvdALht7xFsfPWAeRjToiG8s6Lx
        SEN42oAJ0bagm4GGkHQl8rUpp9PY+OoB7DxwzNYnqJ6hK1nvlf771sd3ABljQPzZgM0bEc9K
        BQ2yAeNzCMPeFY2ZvJkEvvjIi2afMAVFy+7sBcDXBo5j6/5jkESBUxuQj+IsvAKQHxqCX1c0
        FvJKooCt+4/htYHjpkkSVC5bdP7BqwDG7Zt2AZnEFLcBXWgIjl3RPG3AhqigcbQBq5Q3k8Dt
        m3YFzmNZUC/9irsVwHh7cAQb3ziEhMDG3Se+NqA3DRErG7AhNEQDI+InWlRrMyHo2Lh7P94a
        HPMFoM1jxsreu130o21vGp1bNmCsaIgyADYxDeEXEQ9EuzZpyfL/++Lbrs+hNV/KymUD7gAc
        zpfwrZfeRkpi5W0QDxvQ6BNPGsLTBowlDcG3DejVR8pk8c3t+zCcL9n6KIqCUqnkTtZ75ct4
        aMdeKLkCiOC967SKs0QDwHQ6HUoF5cMGrP9cN4KGqERerajioR17zT50PSSTyfDlslVVxbd/
        24dUOsHFNh+FDWj04TMivtKI7Xi7ovmroJG4olUkr8vaTEj4Xy8aILSuh9DlslVVxe/fPYK+
        gcFAp9hmckWrd3EW2hpFQ8THBvTXdti5otVvbUqigFffHcLOA8dQKpUqI+tpuP4Pnt8HJFIM
        BhkPFTRMRDxvNiCVxdsGbEXEN1JeJER8/z/fQDabDU/WU8PxxHgO9+18x+aoXfkg40hDlNuA
        PNMQTlnsNmBzRcTzREOEXZspScd92/vMw09nKyPrqaqVSqXw231DDAYZDxW0eV3Rmqs4C080
        hBT63UmAnMITv3+3rI9ruWxroOFPd/0BSNgH0mw0RNO5ov3w2ZYrWoTyhn53CcnAk6VRkw9A
        ebnsdDqNw6N5PNL/XpWDjA8NQWWh1YacNiClIYD6A3B8fLx2VzSzFmTz0BA8qqBh5LXKIokC
        Hul/D4dH8wDs5bJtZL316PS5Nw9BK6pmyFLDj3oDBulsle6AuiBxExEfL1e0aNKP8OOlVf3a
        1IoqXnz7sK3khJmBmxBiY+8B4OHd75qq6FSyARtJQ4Qh4luuaPYWq7U5oZK6cb5lQb3D+RI2
        9h2BJApNbAPy54oWlJSpuSLi42kD1rI2U0TBL986gAIRy+a67Knb/3AUULQGHPVGmRWNH1e0
        qRkRHy9XNBZrEyAoFhQDX857OP/w7JuHAN2/hLJ9kGz07HqqoEYfPl3RWETEx8cGjKcrGqu1
        iUTKwJfzPs4/fOult5FKylPKFS1WNETLFS22a1NKyvjZngFbnzKy/rWB41ByBeii1HB3nyhd
        0XiLiKeytFzRJhtPrmi1rM3+IyN4e3DEuL9bZP1LfQNAIsWFu0+9bMA4RMRPJVc0gUyxbA0J
        Ec+/+Q4IISCETPKE9D+e2PueLaeo+yD52+bDyMIDDREvV7ToEvPyYwPW/u4C5ZUlPNY3aPyT
        BvUCk5H1j/S/51rmjKejXlYR8bwB0DMivmGuaFOThqj35pAiCh7tOwgrNSgSQiDLMl4bOA6t
        pHoMMj6uaFRe3WkDOmgIIDpXtCAinhZnabmiTTbeXdEqldcqS0kVTLsQmCDrAaD/8DBA7Bfy
        4O5TzSB5c0VrFWepTN64uKKFldcpCwjw+ruTWbpNyTb3HbZFTbRswOhc0aZScRa+ANiYtYmE
        ZOCNPof+460jw45BspiUqV2cpTZXtEkawq3xZwPyU5yF57VJmw1vgOEv2p9TIIkC86Pe6L4y
        3hHxPHrC8FWgc2pGxEe9Ns1rRQH9OQXD+RKmpRPGTjg4XkD/sTGIRAOrr0y0g2y2iPg42YBx
        i4ZozNp0tv6hMQyOFyZ5wv2Do4BahKhrjI6mG2MDAjF1RXPQEPGyAeNGQzTABnTpA6Vo4A4T
        NuHv9h8FRG8vDN717Di4ovnagBYaomUDNlZeVmuTZmtwe46kq0AihVcnIipkANh79ASQyoC4
        LFZ+t3m7K9quBtEQ1dqAW/YcxLr7ngFkEWqhABUApCSg6QB0y00A6CXjQyMKgCQBcPC51j6J
        FKASQCjnfKFZ++iA4HiOYPRRaR83WWgfU14fWYCJlJl1ltfv3QkAlCJUUXCVV0rKdbcBrX1o
        nQrIEt48Nmb8EwD6judcH8z7Ns8DDVGNDaiqKvYeG8W961ehVDDyjiTTGdfn0N/D9PH6Pco+
        cZL3vdECbvt/b0ImWiQqaBlXOKGOyqqq4vmjo2Xuavy6oiVsKuiuv7In5uVpBySEIJ1Ol1EV
        sizjhjVLUCgUIEmSZx0Qatf69aFZ8pxAd45b0zTP8YTtE1ZemrGvnvJSyqkWeQ+P5nHblp3Q
        095BC9WsTWdzw5IkAAN5ozqTPKboRlKnlOx7kfuNwx1N14WGmHBFoypoVAAcHx/3BBfgr4LS
        ZpU3lXLPcO5Xu8Apr9+Ctsrr1pzRG27NKq/XfazyegEwSF7nx6tWef3enaIoUBVjXbFYm3rI
        HdDap//YGMYUHfLgeMHQt1PBF9lv3NiI+EbZgGFd0bwWGusPhtduDFT2wfCSxSmvW2Mhb5D2
        UKm8QbKYGbGrrLNSjQpa1kfVMThegLx/cBSQxSpu3Hgagmcb0G0Rsf5g+AGQfjBYAdBZvZml
        vFECkBboTKVSkHW1zF8aiAiAACCL2D84CvnYWMHycN5U0HIbkKqgvNqAYVTQ1g5YLgtLecPM
        dSKRAArlJ7KV0RC1UXoQgGNjBcj5XBEQjD8SQYAuuPMbjaYhgPi5otEWdwDWS96oVdCguWZF
        Q4QBoDCxBedzRYhDlnK+/gBsLA0RN1c02qJSQalm0AKgtyzsAFj9DkjJegJjLEP5EuR9Jwwe
        xVVnddy4VZxlsoW1AaPaAYvFohk+NdVswKBT26C5pl45UQCQehEZv+sYKiiQj+SKnnllGkND
        lEfEN4qGmKo2YJwAWOtcQy8B8E7xaachvF3RqCdMRQm4ZAlvHR+HPDCSL7tg8uGNjYZoNA0x
        VW1At8YSgAC4ACDlCWv1ma4KgBNtYCQPeUQjPt4yU9MVLcwC4cEGLBaLLRvQR5agPgAAj4iV
        eqigbjXtRzQCMa/ay/hGbwPGPyKeNrpAWMkbpQ0YJwDWagPayHqX5hcRX94nGIB+mxkAyLpO
        zN2n4a5oQENswKlOQ0wlG9Cm7ehKGVnPioYIE8ql6QTjJdWIJ5wsBho+SroermhxK85CW9xp
        CLfWzAD00naiUEGt95EF4wsg7x8rmOShXw2KekYdN9oGZOGKxkreFg3hLW+tKqifvOHBVf0h
        jPVZAggIBLwzOg5ZIEYQJIHgyRWyjzqeHIBWUrH1xku4DUcCGm9TAfE8BY1CZWYx12Fd0VgA
        kAKZ3oMAEAUQC3nodRFbG9DWR5bw6Y0v4MDQKJcqaLMCMC6HMLIs1xWAEOC9NmkXRioo7eO8
        h+gFLOtF9Yw6lkQB/SN5XHT/MxjMKZ4HHy0bcGoCsJ5zDQBgkESq0vw/NgASrbxIqNtF9Uh+
        au2TIgoOnBjBRfc/g2GLLyttvNmAcaUhWHzgmsUGBKxkfX1PQf2wdGpHG8QF7eWDYL0DeunZ
        ZuapiUH2j+TR9Y1f4PDopBdPI4qzBPGAUamgU/UQJkgFZaVhFHTiSdY712a9UlCKogCxLSlX
        dBFQXXEWtz5OQ1cSBWg6wdp7NuPwaN6Ws4SVK1rQAkmn001pA7q1ZnRFCyuvpmloT3mfXrI7
        hPHHUkaWIHZKgkmUR5X81O8rQ23EtfdsxsHjY0ilUszI2akYER+VDRjmA8cLAKksxh/tfaJQ
        QWnTdIJOSYA4pzNjPlzUWaV+87cBg74yCUFH/9Eh9Nz1S4yrLvkH0JyuaKxV0DgdwtTbBnR+
        MNxkYeWKFgaAlKyf05mBeNKEOhpE1kcVdUwHkEwlUIKMVf/ypM1GBFquaM0GwChswCCVudId
        sGavMhCoREB3NgVx/ox2QNVAIESa/DTMNi+JAvqHxkwbEWjREM0IwEafeEepghpYMrxloGro
        7sxAnJc1EO1F1jcKgObzk3IZEFs0hLu8LRrCW16vuTbI+sk6IPUHoD75HALMyyYhZrIp17Rv
        1otqtQFr/cpISRkHTozgtG8+gmHFOzFspYZ5i4YIL29cVVA/eQFMkPXexZBYFuKhWLI+J5NN
        QZzpwhMC0duAQYMECARCbDuitbVc0Vo0RKXyBkXWs64F6dZnZnsa4pxp5ZPXaBXUa5CqlCxT
        TYGWDdiiIdxl8TM3aB8/sp6VCgqvQ09Vx5xpWYhzp7cZafAtF4WLB6x/1LHbIKWkbPKIw/mS
        LaNytYsoahuQFjupZUFTWfxswFKpFCivpmmB8gK174BB744WgQkjrxfna5XXy9ygDiCSJEFO
        yK6mGCsaIgyW5k5vg9yeECG1Jc0b16qCsoq58hskJfRn/dPD2HvLRzH3pHbXybcCkBcaAgAU
        MYEkIVAUxfa7pmkYKxiLqD2dgqqWZ4i29pmWTJbdAwDGVQK1mPftc2LcAI6cyiA5MUbfPgHy
        yqmMq7xhZCkWiyiomvEcSfCVJZOQQVxksfYJ++7GxvKAY7pZF2P165PISmiTBciyLOP8kzuw
        9chIiDpt9c08Vckgk1BRKii46P5nsPWmdZjdYa8/x6srWltbGx56eS+ue+gFz0pYXhxUJX38
        ON8wfagdw0IWVvJ61nRAcE17zzFZ0n2yV0G9NzMA+MCs6UgkEkYURe9JWUDVfP08gwYZlcMr
        HaRAdCTSKVM1tdqIPLuiCYKAa1f14Gcf/wC08cmIEeu70yby/lj/51zQzt/pu6N9FCK63kfW
        SrZF73Yf61xXI0s18rrJYpXXmgrFT16VCK6yWAFo/Y2mdmG9NoO0SVXRsbSrw5AfABadPA3A
        wQD7zr8IYtgdsFY927nNSwLQP5LHvG89hsG/+ximZ5LcqaBuhzDXruoBAFz30AtIycaX0VpA
        0trcEnA501SWOTq4yOL2hXbex1kj3l0WS8VZl3tUIq+fLFZ5ralQbM/RlJrlrXN16ccAABe0
        SURBVNfadDarLAAwf0a7cW8AWN49zdVArQcNUYu7j9cgafTFqn95EgeGRiFJEtcApO3aVT34
        8VXLUSwoUH3zX4bLgOf3FQ9zSDC5o9RW7IQmjY46Y1818rJdm+40hJssIMB5C0427g8AS+fP
        rGoAUbv7+H1lZIGYgcGDOSUWNMT4+DiuW70YP7v+gzbVlDZrEuYwC4QNAGvLRt2orO3V9ImE
        hvCRZcGEOioCQHsqUWW57GhtwDCTQlNlOCP0eXVFk2XZsBGvP98GxEqSMBNBrOmYXGaQ4sH6
        wZhqAKxG3p6Z7ehqM9aYCACzOzK4ZFZHmUHNwyCt7j5hBknpC2v0RRxc0UwgFlWLChoOgLXv
        gP72fvjisdFlbfcqzsLz2qSyaDpBTzaB6ZkJapBecEb39IkXwQ8Awxz1euUxpaemB4ZGoaoq
        FzZgELFNT03VXB4tG9BPlmiyorG0AZ2yULwRQiZBuK53NpDP+Q6A123e7atYjyxuUbiiXXP2
        qfjx+vejWCj7GQCPNuDUVEGrsQHNpmhY1zsbhExQNfTvp57cCYje3uRRRh2zymHDMotbVOFI
        pVIJn1qzzLQRKRcG8GoDRl84qBp5G7U2XR0HBGD+dOOdCYJggFBVVZzZ3Qk5nYZKyhdIpUR8
        rUe9bL6KkzaK00YEGm8DWptbOBK1EaEY/KukK9ypoECU1Zv5oCEEUltFX00nSMoEZ83vNteC
        SLfERCKBq0+f7XrjqFzRKrEBgw1zwUbOWj1rKsni1shwpEnPmnFz8vlQQaO2AZtABcWkdnZV
        71zbehEBQJKMm35k0SzAUq+QZxuw0hdRTRa3KLOiedms167qmbARFY5U0MardI1wk2TxwSiW
        VFzZ22WXQRAEc/Lf3zsHUPSKXgQrdx8WNmBQmgKaxW3R3Y8HZnGLOiuaW1MUBWNjY/jkBWca
        hH5RtdmIwNSlIaLSzlibR9BlnL/4VLsc1v84c85JkNqSXLv7hFFB/eRNphJQiOibxY23rGhW
        p29qIwItGoJ3GsLex6CcpLYkTu/qtMvivOgLZ82HOuFZwpOeHYac9fK/rCSLG88R8dboi6hp
        CJ5UOr8+vNmAtkiSkoovnDXf1sfGE9K2rnc2oHvbDo046g37IvxkcU6KNYvb4PAJAIhFVjTD
        RlyBUr4UKQ0RzVxHWx0pyg8GAIAAVy2fVEXLeEL6pT/3tC4gk/WkKhpBQwTZgGF3QGejWdzm
        /vPjGMwpscmKdt3qxfjx+vdDKZEyGxGILw2h+4CLd1e08j72tanpBEhIWHWaETmhqqoZ/S8C
        E5mnJv4wb0YHNvR2122Q1bqiufcRKt4BnX1oFreL7n/GNYsbj1nRABiEvsNGBOJNQ3j1iZYi
        Y3s+YW0bersxPZM0AUgPRUXAyL0BGOoYAKxfNt82uby4ojn7VLsDOuX1y+LGc1Y0q40okODs
        B3GjIRqjgrKzAW19FA3rl823J5qaWFMmWU9P4QBgzaJZZmgTb65o1dqAQfLSLG7zvvUYhvMl
        WzUnHgFIG/WsMZy+2eyAQMsVrVJZ/NamphNIKRlrFs1CLpeDJEm2eRQFQbABEDBU0mt6Zk2o
        Any4+7CwAYPkpRH6s/7pYdPpm2cA0rZ+xWkGoa+KMVNBm8MVLczavKZnFro70pAkqWyuXbxL
        jfbJs0+DWihwRkPUbgMGyZsiCpRCERfd/wyOjJWHMvAEQBqdXywWTRvRGaFfKQB521HiQ0N4
        h55B1UwvGbe5dgWhqqq4YOGMiYfzRUPUn5wlkNNpW4Jh2ngtzkJteWeEfssGjE5ev5SO0Eq4
        8twzPDWZsjvTRTRzWiduOPd0aCW1qkFG5YrGGoBm1i5LhD4FIm+1IbyyuNEIfR5twDhHxJf3
        CX53aqGAm1cvNqPona2MrLfWCxAEAX92Xq/pS1rpIIHoXNFYuSc5bRQrEGkWNx5U0KBqQ5Vk
        cWu5olUuSxgV1Dw00gk+e8EZrn1sPCH9g7MYx5pF3eidM63imvaNcEXzexG1eJbIAkH/0SEj
        MFgh3AOw0ixuPKl08bIBg7UHQMDy+d1YMa88m6GiKHaPGUKI+QfnAvnrC3oBRWsKGsLZwkYX
        pBxFaKyNNwB6ZXGjH9JKFlGLhvDuEyb/T1EV8RerF5X1ocVvXMl6twXy8XMXIZkgEHX/OhX1
        cvfxG2Q9VFAvealq2vWNX7hmceO1Qq41Qp8nV7ToaYhobEAqbwkypJSMj59rByFNYSLLcjlZ
        73VyMy2dwA1nL0KxpMbGFS08ACtbIJRHdMvi5tZ4KdBZaRa3qLWdOLmihc6Ap2q4ddVC24EM
        netkMmmPrKdkvVsrFArI5XKGYenxcF5d0eoVXRB1FjdWBToryeLWTDYga1c0P1mc8v75msXm
        v/3m2pOst6J2xbyZ2PC+UyqO6q6GhqhkkG59oogwT5FS3bO4sa4Rr2naZBY3R4R+M9qArFXQ
        StamphNseN8pZvBu0Fy7gtDtor+79CwgP1mYka27j8CdDRhG3nplcWMNQKsszgj9ZnVFA1io
        oFWuzbyCr11+NoBwbodld7bWDbdetGLeTKxdMNNwRmXsilZLpul62oBB8joj9MOUhW4kAGmz
        ZnELOnCLowoahSual7yaTnDZwpk4c85JoQBYRtbT+u9ei+ibHz0XyOeYuqJFA8D6JbqVLPTF
        4ZF8TVncWANQEARPWSazuKGpABg1DVEmb17BnVevNrHkB0BXsl7TNN9FtPKUabhs4WwUhSSz
        iPiKB+noE4UNGCQviyxu9dgBvSL4C4WCJYtbuY0IsD9wayZXNC95NZ1gw/J5OLO7E8Vi0ReA
        rmS9qqplcU7WRsuK/cMfn1sWzV3ZIKOmIdjZgH6y1JLFLQoV1ClLLVnceKMh6uEm6SeLp7yK
        hr/84PvMzcwPS5qmmXNgkvVOG9B5EZ24NYu6sWHpKTbH7majIex9whforDaLWyMA6JXFjd2O
        EkcbsPq1qekEG5aegpWnTAvczChIbWnwraH2bhc5I8y/dvnZZnntuLqiUVlY2AVWWaw2YlAW
        tyhtwCB7n2ZxKxaUEI7WfNAQXNiAtOVz+NsLe0NtZlYAArBn4Pa6yLlAzpxzEm5etRBaqfJw
        mfjQENVPiiQKgVncorYBw2Zx+9n1H4Ra0stsRD5d0dhGxPvJ4rc2tXwON5+3BOcsnOu5mfll
        7Ask670WyB1XrgRCH/3z64rmJW+tNeIBghJk1yxuLFzRgNpUULc+QDmPCPBnAzaahrA2uu6+
        esUK19+B4IRhvmS93wJpkwV894qza8prwqcNyK5GvJuNyNIVrVYVFAjI4lZSQ8/jlKIhLH2K
        BQX3Xn0eZndkXPsEYQnwIeuDvtClUgk3fnAZek/u8FBdGhMR72xRqiVuC0RyhEEVi0Xm1Zzc
        WlgV1OvQaOWCkwFZCmUDhs0LypsrWu0UmYbl87vxuQsWu/YJg6Uysp6e3IRdIIlEAg+sX+2h
        ujQuIr5cFjY0RKUANH+bcPru/vpGDOYUtLe3190GrGYHpO21gePo/efHkSL0Q9qcrmh+soQB
        YFETcc9VK13nKUzWdhpCaEqqKMYLr1RFWrOo2zykiZ6G4McG9PtCA0YWt1JR8cz03Qgb0A2A
        Ow8cw9n3bEZKMtKaNB8NwcZNslhScfPKhVizqDxbfZik0cVi0ZDLWi6bcoXVfKHvuHIlADSA
        huDLBgySl1UWN9Y2IG2vDRzHOd/fwuQDx6sNyGJtamICSGXMdW9tYVRQCkBanNcM6g3aAQkh
        ngtkeiaJR687f4JjipMKyt4GdJfXPYsb3RGjpCH8ALjsO782VVAvp4soD2F4zdag5lRs/tTa
        sgxqlRQOspH1gIFIt8m3XuQVvKqqKsbHx3HFsnn4zDmLoDqys1UzyPqroPW1Acvldc/iRiP0
        w2Rxq7cKuux7TyElT6qgXos+rsVZWPkpKwrBDasW4NIlc219KikcFJqsD6si0a01kUjg7j89
        H4mE4BowypcKWn8bMOiDUUkWt3oDcNW9T1sOYXhSQRsTEe8lr0JE9Mxox51Xr7b1qbVwkCtP
        GEYFpfUM6Y0BQy194pMfLAsYjSMNwcIGDFogKUcRGmuL3gZsuaIFyqto+MFVK13zxtRCOZWN
        oBIV1C3L2KVL5uKra3qhlVQObUDvHVDSlbqqoF7y0uRRVhuxETYgLzQEL65oTnm1ooo7Ll5q
        U0NZFI81ZKYnMyEvsqqgfn3OuusJ7DsxwoQbiuoUtJYvdK3yajpBT2cGz37uQ+jKGguj3ipo
        M5+CMgWgTrC8qwO7vvQRsw+LHdC1XHYYcAX1oTlWHvvsRQwAGD8aopYsbn8YzZlZ3OqlgrYA
        GKztuMn7q0//kflvVgD0LJcd1gb0A6AkSTi9qxNPfmINtKJq68OrDciShqhFXvOwxiWLGwsV
        9JzvbjLlbUXEl/dxyqIVDTpi3owOAGxUULqZeZbLDrIBK0n1fumSubjrkqUmEHmyAY3j9uht
        QD95iSBCymRds7ixcEVb9p1fWzxhpl5xlkrl1Yoq7rpk0g6shIYIAmBguWy3i6pN9X7L5SuM
        SPx8jisaQtKVutMQlchrXSBuWdyYuKLJzeqKxj5fkVZSsWHpKbjlciNEqVYaApg8cHNG3gu6
        bpB6XipoNTugsw3nS1j1L0+ifyQPSXQ/IWpERDwfKqi3vPSw5nc3XohpbdlQEdtuO+DZ92xm
        Im8z2oCuAJx473u+/BHIsszEBvSLfLGdjoa9iLawiW41TcPxoo5Fdz8OhYhlQIzKE4ZOPjsV
        NArPHQ26KOGdr3zMNWYtlAo6sQPyVA2Zh2gIt7nWdIKEoJvvm5UK6ud04UrWO8t9ubVKMk0n
        k0nMm9GBFz9/GaDaM7VFuaDpC+cFgOF4NQkKEW2BwbSxckWLXgXlwwb0musXP38ZZndkmKqg
        fjgpG2WtNiBtbgtkxbyZ2PyZC83ClVG7orGhIdiFT4Vd0JVmcePbFY1PFRQAtPESNn9qLVbM
        m8lcBfXCSVlQr5MrdGu11lq4dMncicKV48bAY0dDsNixK3ccCJvFjUdXNNZpFOsFwJ9dfz4u
        XTK37jag9T6AB1lfz3JfALB+xWn47h+vqCk/DQ/RENXIW4trV1AWN15d0QBWEfF1AmBRxb3r
        V+HaVT3MeMAgt0N64g14kPVujRUAKeF88yXn2DhE2uIWDVEpAFnYVG5Z3JqfhqhP4SDKBd6w
        ZklkNiD1eqqIrGcJQNoHMDjEOy5eatqIzeaKZu/DLrrAaiMO50t4beB407ui1SNbgzZewh0X
        L8Utl6+IzAZUFAWlUslG1gu6rhOa2sLrIhYA9Dvq/fqTO3Hbb14P+RWPUgVl5TpXnxLVlM/a
        P1ZgcvTfjDSE3w54x8VL8fcfZg/ASik9T57Q7yJrqxWAtH39yZ247alXIHkMIKwrWpDaF0cV
        NAp52bui8ekJA0yqoKx3wCAV1AtLniBkrYIGDVKSJPz45f248eHtkNrsL76SSeFhQUclbzUq
        XZxU0Hqdgt67fpVpAzZyB5wcswsIowagdZA/396P6x583gRis7miWeVls6DZuKLVS2WuRJao
        aIhrV/VwA0Bj3A4QRqWC+g1yy56DWPeTrQCAFCkhWhqCfxXUKgs/rmgsVND6uaIBwOZPrcWl
        S+ZG4ooGhMMSIcQOwkoSC7HeAZ1t294juPiHW1AqKpAy7rQJnTh+VNBoAdhSQYPlpb6gL37+
        MuaeMLUCUFWNwrwmCK3kYaMBSGUZzBkZq/uHxiAlHeWkprQKGgSu6NIScg3AkoqeGe3YetM6
        0xeUFxWUZryXZdkAIfWWCaowGhUArYNUVRXX/3QrNr5+CFKKBkHyBsD60RDlsvBhA/JOQ2hF
        Ix7wwU+ujSQcibaw5hwwycsLhBBCd8Cgar31sgGdg3QbwN2bduLLT78OOSlOORqCNxWUJxvQ
        LyKeBuTyZANay2WHJusbtQO6tV++sg8f37jN6B8QMxhdRDxfeTansgrqPIABolubtRxo+pL1
        PAFQURRomoYDYyWs/8lWvDowbKqntDWvDdicEfG1yOuURSuqWD5nOn716T8ykzLFAYDGO/EA
        YdQqaKWD/PtHX8I/besDEka8HX8R8fWnIaI8hOHVBlSICCia6YJGWyPXprMFYckVhFHvgNXq
        2Vv2HMTnH30Z/UeHkEpKLRvQQ5ZmlVdRCHpmtOMHV60sy4zNkw0YhKUyEPKmggYN8sDQKP7h
        VzvwwCt7gUzWNZFUyxWNHwCy2AE1MQE1p+KGVQtw59WrmdeGiGoHpPLYQEhvHBcA0pOmbDaL
        p988hHUPPAcANk5xKtuAzeeKpqFYUoFUxnb4QhtvazMIgJ5kvR9XyPs2P5wv4bbHXsb3Xt4H
        yBKTHCtTVQXlj4YwasTfvHIh7rhypWuBTp7XplsfijUbWS/L7uWyrTeOwyC37T2C/7bxBew5
        cgxyNtMCYIPlrQWAslZCsaBg+fxu3HPVSs8a8XFZm7QPUCVZH5dtnt7nwV0HcOMvdwCwq6h8
        qqAtADqbljfW1L1Xn4fPXbDYdV3FbW2OTyQ4s8rim4E7roMkhJjJqkwVdfs+k84Id1ATrSta
        KyJ+smk6AfI53HzeEnz1ihWuSY+BeNEQVnmdidR8yfq46dl+8r42cBy3b9qFjbv3I5WUWyqo
        o/EQEa/pBFA0bFh6Cv72wl6cs3Cu6z2A5lqbgWR93L4yfik0CoUCXj50Av/4qx14at8xIJOw
        URotV7TGqKDGzqdgw/J5+MsPvg8rT5kW2fkED2vTl6xvlkFa5aWybNt7BLc+vgNb9xtgTAi6
        6X0SJxoizgCk4Fu7YCa+e81qnNndCU3TQkXzNMvaBHzI+mYZZJC8VjUVgGcAcfNGxEdrA5Yg
        m/VINrzvFHzt8rNx5pyTQnHUzaSCUnkBBwjdwiziPsiwZYt3H3gPD796CN/cvs9ISDxxiAO0
        VFAWOyAgoKiKkFIybl21EH++ZjFO7+oEEB83SacsYU5B/bCkqupkUC99OA1pmgo7oFVeqyzD
        +RIe2rEX3/5tH/oGTiA1IaLXzgW0AOiXglItFACdYPn8bvzF6kX4+LmLXN3M4uSlxWJtWnl5
        kyekqGyWQbL4Km7bewQ/3LbH8EuVU0DCWLDWw5y4uaKxU0Hd+9CYPqgaoJVw8+rF+OwFZ2DF
        vJll95mqAKQpPk2yngb1SpLkqa7xts1HZReUSiVks1lomoYnfv8ufrrrD9jYdwRQNCBB3eLq
        t6Bp44+GsNuAJvAUDVJKxjU9s3BlbxeuPPeMMvcy2nib60YBEAgg6+P6lQkjb7WTcng0j+fe
        PISHd7+LX751AMWCAiRSZYmoeANgPVRQraQCBEBCwobebqxfNh9rFs1Cd4fxznjJV8QTAN3k
        9eQJWwD0T1WnqirGCkXsPDyGR199B9///btGYZuEGMp5PG5Z0TSdIEUU46ODBKS2JL5w1nxc
        tfxUrDrtZEzPJG1feh4y9sVlbbqCkBqONEzIa5A0Q1uQShc0KZqmIZlM+k5KmFNb5zZfrbzV
        yvL24Ai2vn4AT+x9D4/2HURJFcydApi0JSvZdfwcB2gfr3sAFICVV5ayqpgQgKRMcFXvXFzZ
        24XzF59qnmzSFsX7Bex1NFnMNau16Xf6HrQ2y0AYZpC0jx+pGiY0KuhE1tonSBZe5DW5H0HA
        awPH0X94GJv7DuOtI8N4+r1Rg/5Qi4AoACnDJ9IZiCwQHQIICARPcLHsoyr6hPDG//XMbEdP
        NoEzuqdjXe9szJ+exFnzuz3HPFXn2hkNUY28gAOEhBCzVqHfQY2qGgUO/RZiUB9VVY2o4hB9
        ZFkOlKUWeVnJommab5/Do3kcGyug//AwXj1yAu8OjeH1wVE8f3TUrNEIWQTopbJddZREAZpO
        IAuT300vcNF+KhGMk0rrp1Y1QJfISvjArOlY2tWB+TPacd6Ck7GgqwNdbWnzQMX6UXFrUb9f
        oLnWJuACQsD7hYfpY91YWfSpRRYe5fVSn8YUHQeHxzFwIodjYwXkc0UcyJVwZCSPI7kiBkby
        GNEIxkuG6vjO6LjNvhOJhlM72iCKAjKyhE5JwJzODLqzKXR3ZjAvm0Qmm8LM9jTmTMti7vQ2
        tMmC504QZkys312YPnGa67B9/j/VEtWmOFwg2AAAAABJRU5ErkJggg==
      </shape>
    </shapes>
  </external>
</workbook>
