<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xml:base='https://viz.mimirhealth.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <repository-location id='Referrals' path='/t/AustinKidney/workbooks' revision='1.3' site='AustinKidney' />
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Referrers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
        <calculation class='tableau' formula='6' />
        <range max='15' min='1' />
      </column>
      <column caption='Receivers' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='6'>
        <calculation class='tableau' formula='6' />
        <range max='15' min='1' />
      </column>
      <column caption='Payer' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <aliases>
          <alias key='&quot;None&quot;' value='No Insurance' />
          <alias key='&quot;Private&quot;' value='Private Insurance' />
        </aliases>
        <members>
          <member value='&quot;Medicare&quot;' />
          <member alias='Private Insurance' value='&quot;Private&quot;' />
          <member alias='No Insurance' value='&quot;None&quot;' />
          <member value='&quot;All&quot;' />
        </members>
      </column>
      <column alias='Number of Encounters' caption='Measure Selection' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Count&quot;'>
        <calculation class='tableau' formula='&quot;Count&quot;' />
        <aliases>
          <alias key='&quot;Charge&quot;' value='Associated Charges' />
          <alias key='&quot;Count&quot;' value='Number of Encounters' />
          <alias key='&quot;Pay&quot;' value='Associated Payments' />
        </aliases>
        <members>
          <member alias='Number of Encounters' value='&quot;Count&quot;' />
          <member alias='Associated Charges' value='&quot;Charge&quot;' />
          <member alias='Associated Payments' value='&quot;Pay&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='cSQL Referral+ (DemoStandard)' inline='true' name='sqlserver.42152.682083842592' version='8.3'>
      <connection authentication='sqlserver' class='sqlserver' dbname='DemoStandard' minimum-driver-version='SQL Server Native Client 10.0' odbc-native-protocol='yes' server='104.197.18.221' server-oauth='' username='mimirdemo' workgroup-auth-mode='prompt'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[cSQL Referral].[LINK]'>
              </expression>
              <expression op='[Sankey].[link]'>
              </expression>
            </expression>
          </clause>
          <relation name='cSQL Referral' type='text'>Select R.Id,r.Inbound,R.PatientId,R.EncounterId, &#13;&#10;R.IntProvId, ISNULL(LEFT(PInt.FirstName,1),&apos;&apos;)+ISNULL(LEFT(PInt.MiddleName,1),&apos;&apos;)+&apos; &apos;+PInt.Lastname as [Here], &#13;&#10;R.ExtProvId, LEFT(PExt.FirstName,1)+ISNULL(LEFT(PExt.MiddleName,1),&apos;&apos;)+&apos; &apos;+PExt.Lastname as [There],  PExt.Specialty, &#13;&#10;R.Reason,&#13;&#10;InsP.PlanName, &#13;&#10;R.DateInitiated as [Referral Date], R.DatePatientSeen as [Date Patient Seen], R.ReportDate as [Report Date],&#13;&#10;P.LastName+&apos;, &apos;+P.FirstName+&apos; &apos;+ISNULL(P.MiddleName+&apos;.&apos;,&apos;&apos;) as Patient, P.DoB, P.Gender,&#13;&#10;ISNULL((SELECT SUM(T.AMOUNT) from [Transaction] T&#13;&#10;WHERE &#13;&#10;T.TransactionType LIKE &apos;%charg%&apos;&#13;&#10;AND T.EncounterId=R.EncounterId),&apos;&apos;) as [Associated Charges],&#13;&#10;-ISNULL((SELECT SUM(T.AMOUNT) from [Transaction] T&#13;&#10;WHERE &#13;&#10;(T.TransactionType LIKE &apos;%paid%&apos;&#13;&#10;or T.TransactionType LIKE &apos;%payment%&apos;)&#13;&#10;AND T.EncounterId=R.EncounterId),&apos;&apos;) as [Associated Payments],&#13;&#10;&apos;link&apos; as LINK &#13;&#10;from Referral R&#13;&#10;JOIN Provider PInt on R.IntProvID=PInt.Id&#13;&#10;JOIN Provider PExt on R.ExtProvId=PExt.Id&#13;&#10;JOIN Patient P on R.PatientId=P.Id&#13;&#10;JOIN PatientInsurance PatI on P.id=PatI.Patientid&#13;&#10;JOIN InsurancePlan InsP on InsP.Id=PatI.PlanId</relation>
          <relation name='Sankey' table='[dbo].[Sankey]' type='table' />
        </relation>
        <refresh increment-key='' incremental-updates='false'>
        </refresh>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Id</remote-name>
            <remote-type>72</remote-type>
            <local-name>[Id]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_GUID&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_GUID&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Inbound</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Inbound]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Inbound</remote-alias>
            <ordinal>2</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PatientId</remote-name>
            <remote-type>72</remote-type>
            <local-name>[PatientId]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>PatientId</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_GUID&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_GUID&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EncounterId</remote-name>
            <remote-type>72</remote-type>
            <local-name>[EncounterId]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>EncounterId</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_GUID&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_GUID&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IntProvId</remote-name>
            <remote-type>72</remote-type>
            <local-name>[IntProvId]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>IntProvId</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_GUID&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_GUID&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Here</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Here]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Here</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>53</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ExtProvId</remote-name>
            <remote-type>72</remote-type>
            <local-name>[ExtProvId]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>ExtProvId</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>40</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_GUID&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_GUID&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>There</remote-name>
            <remote-type>129</remote-type>
            <local-name>[There]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>There</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>53</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Specialty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Specialty]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Specialty</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Reason]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Reason</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PlanName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PlanName]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>PlanName</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Referral Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Referral Date]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Referral Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date Patient Seen</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date Patient Seen]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Date Patient Seen</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Report Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Report Date]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Report Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Patient</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Patient]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Patient</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>94</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DoB</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DoB]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>DoB</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
              <attribute datatype='boolean' name='TypeIsDateTime2orDate'>true</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>25</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Associated Charges</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Associated Charges]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Associated Charges</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <scale>4</scale>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Associated Payments</remote-name>
            <remote-type>131</remote-type>
            <local-name>[Associated Payments]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>Associated Payments</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LINK</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LINK]</local-name>
            <parent-name>[cSQL Referral]</parent-name>
            <remote-alias>LINK</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>false</contains-null>
            <padded-semantics>true</padded-semantics>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[link]</local-name>
            <parent-name>[Sankey]</parent-name>
            <remote-alias>link</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>4</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>t</remote-name>
            <remote-type>129</remote-type>
            <local-name>[t]</local-name>
            <parent-name>[Sankey]</parent-name>
            <remote-alias>t</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>path</remote-name>
            <remote-type>17</remote-type>
            <local-name>[path]</local-name>
            <parent-name>[Sankey]</parent-name>
            <remote-alias>path</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_UTINYINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minormax</remote-name>
            <remote-type>129</remote-type>
            <local-name>[minormax]</local-name>
            <parent-name>[Sankey]</parent-name>
            <remote-alias>minormax</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>3</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_VARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_CHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='xxxNAV outb' datatype='string' name='[Calculation_0280529100138029]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;Outbound Referrals&apos;' scope-isolation='false' />
      </column>
      <column caption='Measure Selection' datatype='real' name='[Calculation_0460528175838696]' role='measure' type='quantitative' visual-totals='Sum'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 4]=&apos;Count&apos;&#13;&#10;THEN COUNTD([Id])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Charge&apos;&#13;&#10;THEN SUM([Associated Charges])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Pay&apos;&#13;&#10;THEN SUM([Associated Payments])&#13;&#10;END&#13;&#10;// More measures can be added here. Just make sure to also add them in the corresponding parameter!' scope-isolation='false' />
      </column>
      <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
      </column>
      <column caption='Sigmoid' datatype='real' name='[Calculation_1000528163712163]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1/(1+EXP(1)^-[t])' scope-isolation='false' />
      </column>
      <column caption='Curve Min' datatype='real' name='[Calculation_1350528170309389]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2620528170108911]+(([Min Here (copy)]-[Calculation_2620528170108911])*ATTR([Calculation_1000528163712163]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Max Here' datatype='real' name='[Calculation_2140528170019951]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_7580528163834476])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Min Here' datatype='real' name='[Calculation_2620528170108911]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_7580528163834476])-[Calculation_7580528163834476]' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='xxxNAV inb' datatype='string' name='[Calculation_2730529105012490]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;Inbound Referrals&apos;' scope-isolation='false' />
      </column>
      <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;x other&quot;' value='other' />
        </aliases>
      </column>
      <column caption='Curve Polygon' datatype='real' name='[Calculation_5910528170359377]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE ATTR([minormax])&#13;&#10;WHEN &apos;Min&apos; THEN [Calculation_1350528170309389]&#13;&#10;WHEN &apos;Max&apos; THEN [Calculation_7910528170236455]&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='External agg' datatype='string' name='[Calculation_6200528163525848]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [There modified] &#13;&#10;THEN [There]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
        <aliases>
          <alias key='&quot;x other&quot;' value='other' />
        </aliases>
      </column>
      <column caption='Flow Size' datatype='real' name='[Calculation_7580528163834476]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_0460528175838696]/TOTAL([Calculation_0460528175838696])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Curve Max' datatype='real' name='[Calculation_7910528170236455]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2140528170019951]+(([Max Here (copy)]-[Calculation_2140528170019951])*ATTR([Calculation_1000528163712163]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='xxxNAV Start' datatype='string' name='[Calculation_9320529150555755]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;&apos;' scope-isolation='false' />
      </column>
      <column caption='Curve Max OUT' datatype='real' name='[Curve Max (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Max Here (copy 2)]+(([Max There (copy)]-[Max Here (copy 2)])*ATTR([Calculation_1000528163712163]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Curve Min OUT' datatype='real' name='[Curve Min (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Min Here (copy 2)]+(([Min There (copy)]-[Min Here (copy 2)])*ATTR([Calculation_1000528163712163]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Curve Polygon OUT' datatype='real' name='[Curve Polygon (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE ATTR([minormax])&#13;&#10;WHEN &apos;Min&apos; THEN [Curve Min (copy)]&#13;&#10;WHEN &apos;Max&apos; THEN [Curve Max (copy)]&#13;&#10;END' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='date' name='[DoB]' role='dimension' type='ordinal'>
      </column>
      <column caption='Flow Size OUT' datatype='real' name='[Flow Size (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Measure Selection (copy)]/TOTAL([Measure Selection (copy)])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Provider internal' datatype='string' name='[Here]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Id]' role='dimension' type='nominal'>
      </column>
      <column caption='Max Here OUT' datatype='real' name='[Max Here (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Flow Size (copy)])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Max There' datatype='real' name='[Max Here (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_7580528163834476])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Max There OUT' datatype='real' name='[Max There (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Flow Size (copy)])' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Measure Outbound' datatype='integer' name='[Measure Selection (copy)]' role='measure' type='quantitative' visual-totals='Sum'>
        <calculation class='tableau' formula='COUNTD([Id])&#13;&#10;// The outbound referral streams only go by COUNT as we have no numbers for charges and payments.' scope-isolation='false' />
      </column>
      <column caption='Min Here OUT' datatype='real' name='[Min Here (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Flow Size (copy)])-[Flow Size (copy)]' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Min There' datatype='real' name='[Min Here (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_7580528163834476])-[Calculation_7580528163834476]' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Min There OUT' datatype='real' name='[Min There (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Flow Size (copy)])-[Flow Size (copy)]' scope-isolation='false'>
          <table-calc ordering-type='Field'>
            <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
            <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
          </table-calc>
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Patient]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[PlanName]' role='dimension' type='nominal'>
      </column>
      <column datatype='string' name='[Reason]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='-' />
        </aliases>
      </column>
      <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
      </column>
      <column datatype='string' name='[Specialty]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider external' datatype='string' name='[There]' role='dimension' type='nominal'>
      </column>
      <column caption='Link' datatype='string' name='[link]' role='dimension' type='nominal'>
      </column>
      <column caption='Minormax' datatype='string' name='[minormax]' role='dimension' type='nominal'>
      </column>
      <column caption='Path' datatype='integer' name='[path]' role='measure' type='quantitative'>
      </column>
      <column caption='T' datatype='real' datatype-customized='true' name='[t]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_0280529100138029]' derivation='None' name='[none:Calculation_0280529100138029:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2730529105012490]' derivation='None' name='[none:Calculation_2730529105012490:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_6200528163525848]' derivation='None' name='[none:Calculation_6200528163525848:nk]' pivot='key' type='nominal' />
      <column-instance column='[DoB]' derivation='Day-Trunc' name='[tdy:DoB:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Referral Date]' derivation='Year' name='[yr:Referral Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DAY(DoB),Here,Patient,YEAR(Referral Date),Specialty,There)' name='[Action (DAY(DoB),Here,Patient,YEAR(Referral Date),Specialty,There)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:DoB:qk]' />
          <groupfilter function='level-members' level='[Here]' />
          <groupfilter function='level-members' level='[Patient]' />
          <groupfilter function='level-members' level='[yr:Referral Date:ok]' />
          <groupfilter function='level-members' level='[Specialty]' />
          <groupfilter function='level-members' level='[There]' />
        </groupfilter>
      </group>
      <group caption='Action (External agg)' name='[Action (External agg)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6200528163525848]' />
        </groupfilter>
      </group>
      <group caption='Action (Here agg)' name='[Action (Here agg)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_5000528163600546]' />
        </groupfilter>
      </group>
      <group caption='Action (Here agg,There agg,Minormax,T)' name='[Action (Here agg,There agg,Minormax,T)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_5000528163600546]' />
          <groupfilter function='level-members' level='[Calculation_6200528163525848]' />
          <groupfilter function='level-members' level='[minormax]' />
          <groupfilter function='level-members' level='[t]' />
        </groupfilter>
      </group>
      <group caption='Action (Internal agg)' name='[Action (Internal agg)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_5000528163600546]' />
        </groupfilter>
      </group>
      <group caption='Action (Internal agg,External agg,Minormax,T)' name='[Action (Internal agg,External agg,Minormax,T)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_5000528163600546]' />
          <groupfilter function='level-members' level='[Calculation_6200528163525848]' />
          <groupfilter function='level-members' level='[minormax]' />
          <groupfilter function='level-members' level='[t]' />
        </groupfilter>
      </group>
      <group caption='Action (NAV inb)' name='[Action (NAV inb)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2730529105012490]' />
        </groupfilter>
      </group>
      <group caption='Action (NAV outb)' name='[Action (NAV outb)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_0280529100138029]' />
        </groupfilter>
      </group>
      <group caption='Action (There agg)' name='[Action (There agg)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6200528163525848]' />
        </groupfilter>
      </group>
      <group caption='Action (xxxNAV Start)' hidden='true' name='[Action (xxxNAV Start)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9320529150555755]' />
        </groupfilter>
      </group>
      <group caption='Action (xxxNAV inb)' hidden='true' name='[Action (xxxNAV inb)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2730529105012490]' />
        </groupfilter>
      </group>
      <group caption='Action (xxxNAV outb)' hidden='true' name='[Action (xxxNAV outb)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_0280529100138029]' />
        </groupfilter>
      </group>
      <group name='[Here Top]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Id])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Here]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group name='[Medicare]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[PlanName]' member='&quot;Medicare Part B&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[No Insurance]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[PlanName]' member='&quot;Patient is payer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <group name='[Private Insurance]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter from='&quot;Aetna HMO&quot;' function='range' level='[PlanName]' to='&quot;Humana PPO&quot;' />
          <groupfilter function='member' level='[PlanName]' member='&quot;United Healthcare HMO&quot;' />
          <groupfilter function='member' level='[PlanName]' member='&quot;United Healthcare PPO&quot;' />
        </groupfilter>
      </group>
      <group caption='There Top' name='[There modified]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='COUNT([Id])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[There]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Mahitha\Google Drive\Tableau Dashboard Library\Demonstration Dashboards\Referrals.twb Files\Data/TABLEAU/cSQL Referral+ (DemoStandard).tde' schema='Extract' tablename='Extract' update-time='05/29/2015 06:26:52 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Associated Charges]' value='[Extract].[Associated Charges]' />
            <map key='[Associated Payments]' value='[Extract].[Associated Payments]' />
            <map key='[Calculation_1000528163712163]' value='[Extract].[Calculation_1000528163712163]' />
            <map key='[Date Patient Seen]' value='[Extract].[Date Patient Seen]' />
            <map key='[DoB]' value='[Extract].[DoB]' />
            <map key='[EncounterId]' value='[Extract].[EncounterId]' />
            <map key='[ExtProvId]' value='[Extract].[ExtProvId]' />
            <map key='[Gender]' value='[Extract].[Gender]' />
            <map key='[Here]' value='[Extract].[Here]' />
            <map key='[Id]' value='[Extract].[Id]' />
            <map key='[Inbound]' value='[Extract].[Inbound]' />
            <map key='[IntProvId]' value='[Extract].[IntProvId]' />
            <map key='[LINK]' value='[Extract].[LINK]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[PatientId]' value='[Extract].[PatientId]' />
            <map key='[Patient]' value='[Extract].[Patient]' />
            <map key='[PlanName]' value='[Extract].[PlanName]' />
            <map key='[Reason]' value='[Extract].[Reason]' />
            <map key='[Referral Date]' value='[Extract].[Referral Date]' />
            <map key='[Report Date]' value='[Extract].[Report Date]' />
            <map key='[Specialty]' value='[Extract].[Specialty]' />
            <map key='[There]' value='[Extract].[There]' />
            <map key='[link]' value='[Extract].[link1]' />
            <map key='[minormax]' value='[Extract].[minormax]' />
            <map key='[path]' value='[Extract].[path]' />
            <map key='[t]' value='[Extract].[t]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_1000528163712163]' formula='1/(1+EXP(1)^-[t])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='266854' timestamp-start='2015-05-29 18:26:52.285' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Associated Charges</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Associated Charges]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Associated Charges</remote-alias>
              <ordinal>0</ordinal>
              <family>cSQL Referral</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>292.5</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Associated Payments</remote-name>
              <remote-type>4</remote-type>
              <local-name>[Associated Payments]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Associated Payments</remote-alias>
              <ordinal>1</ordinal>
              <family>cSQL Referral</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>234.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_1000528163712163</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Calculation_1000528163712163]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_1000528163712163</remote-alias>
              <ordinal>2</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0024726231566347752</statistic>
                <statistic aggregation='Max' datatype='real'>0.99752737684336534</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date Patient Seen</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date Patient Seen]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date Patient Seen</remote-alias>
              <ordinal>3</ordinal>
              <family>cSQL Referral</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>951</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-10#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-12-31#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DoB</remote-name>
              <remote-type>133</remote-type>
              <local-name>[DoB]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DoB</remote-alias>
              <ordinal>4</ordinal>
              <family>cSQL Referral</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2042</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1900-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2004-12-21#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EncounterId</remote-name>
              <remote-type>129</remote-type>
              <local-name>[EncounterId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EncounterId</remote-alias>
              <ordinal>5</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2327</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;003B1CDB-0F67-4278-9E37-3E7075383461&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;FFD93DBA-72CC-4F0A-A34B-968E001663AE&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ExtProvId</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ExtProvId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ExtProvId</remote-alias>
              <ordinal>6</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;12E788CA-819B-4BF6-8497-F838563CF858&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;FB8FD702-D3DB-4D42-899D-B91D8881D5FD&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>7</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>25</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;male&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>100</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Here</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Here]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Here</remote-alias>
              <ordinal>8</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>53</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AO Whipple&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;V Apgar&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>212</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Id</remote-alias>
              <ordinal>9</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2723</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;002C011F-44AF-4E22-8BF3-46CF6998021D&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;FFD09F36-1A3E-4B6D-B5F2-10387758B905&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Inbound</remote-name>
              <remote-type>11</remote-type>
              <local-name>[Inbound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Inbound</remote-alias>
              <ordinal>10</ordinal>
              <family>cSQL Referral</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='boolean'>false</statistic>
                <statistic aggregation='Max' datatype='boolean'>true</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;bool&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>IntProvId</remote-name>
              <remote-type>129</remote-type>
              <local-name>[IntProvId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>IntProvId</remote-alias>
              <ordinal>11</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;18B7662E-2EA5-49D7-91E6-97ADD16BD8CE&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;D98B0E7A-4FD8-4EE1-92B3-2368E5F5D010&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LINK</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LINK]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LINK</remote-alias>
              <ordinal>12</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>4</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;link&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;link&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>13</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PatientId</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PatientId]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PatientId</remote-alias>
              <ordinal>14</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2140</approx-count>
              <scale>1</scale>
              <width>40</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;000676CB-3B4E-4744-8FED-57204FC146D6&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;FFF9A969-D1E3-4152-801F-37BE4467E214&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>160</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Patient</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Patient]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Patient</remote-alias>
              <ordinal>15</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2140</approx-count>
              <scale>1</scale>
              <width>94</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aasen, Lamont J.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zúñiga, Gracias M.&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>376</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PlanName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PlanName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PlanName</remote-alias>
              <ordinal>16</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <scale>1</scale>
              <width>50</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aetna HMO&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United Healthcare PPO&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>200</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Reason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Reason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Reason</remote-alias>
              <ordinal>17</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>50</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;diabetes eval (specialist)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;shortness of breath; pulmonolog. consult req.&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>200</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Referral Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Referral Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Referral Date</remote-alias>
              <ordinal>18</ordinal>
              <family>cSQL Referral</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>902</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-02#</statistic>
                <statistic aggregation='Max' datatype='date'>#2014-12-25#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Report Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Report Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Report Date</remote-alias>
              <ordinal>19</ordinal>
              <family>cSQL Referral</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>954</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-14#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-01-10#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Specialty</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Specialty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Specialty</remote-alias>
              <ordinal>20</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>50</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Cardiology&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Pulmonology&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>200</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>There</remote-name>
              <remote-type>129</remote-type>
              <local-name>[There]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>There</remote-alias>
              <ordinal>21</ordinal>
              <family>cSQL Referral</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <scale>1</scale>
              <width>53</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;A Kussmaul&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WJ Kolff&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>212</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>link1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[link]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>link1</remote-alias>
              <ordinal>22</ordinal>
              <family>Sankey</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>4</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;link&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;link&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>minormax</remote-name>
              <remote-type>129</remote-type>
              <local-name>[minormax]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>minormax</remote-alias>
              <ordinal>23</ordinal>
              <family>Sankey</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>3</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Max&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Min&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>12</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>path</remote-name>
              <remote-type>16</remote-type>
              <local-name>[path]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>path</remote-alias>
              <ordinal>24</ordinal>
              <family>Sankey</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>98</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>97</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>t</remote-name>
              <remote-type>4</remote-type>
              <local-name>[t]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>t</remote-alias>
              <ordinal>25</ordinal>
              <family>Sankey</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-6.0</statistic>
                <statistic aggregation='Max' datatype='real'>6.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.385321' group-percentage='0.250765' measure-ordering='alphabetic' measure-percentage='0.174312' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Calculation_2730529105012490:nk]' type='shape'>
            <map to='Custom/return to previous.png'>
              <bucket>&quot;Inbound Referrals&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_5000528163600546:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;x other&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;E Blackwell&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;RD Lee Crumpler&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;EK Willits&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;AO Whipple&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;SL Picotte&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;GE Goodfellow&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;V Apgar&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;0ther&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_6200528163525848:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;A Kussmaul&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;KF Wenckebach&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;W Stokes&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;W Harvey&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;P Langerhans&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;W Mobitz&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;SP Himsworth&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;x other&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;WJ Kolff&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;J Cheyne&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;SG Banting&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;N Alwall&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_0280529100138029:nk]' type='shape'>
            <map to='Custom/return to previous.png'>
              <bucket>&quot;Outbound Referrals&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Referrers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
          <range max='15' min='1' />
        </column>
        <column caption='Receivers' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='6'>
          <calculation class='tableau' formula='6' />
          <range max='15' min='1' />
        </column>
        <column caption='Payer' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;None&quot;' value='No Insurance' />
            <alias key='&quot;Private&quot;' value='Private Insurance' />
          </aliases>
          <members>
            <member value='&quot;Medicare&quot;' />
            <member alias='Private Insurance' value='&quot;Private&quot;' />
            <member alias='No Insurance' value='&quot;None&quot;' />
            <member value='&quot;All&quot;' />
          </members>
        </column>
        <column alias='Number of Encounters' caption='Measure Selection' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Count&quot;'>
          <calculation class='tableau' formula='&quot;Count&quot;' />
          <aliases>
            <alias key='&quot;Charge&quot;' value='Associated Charges' />
            <alias key='&quot;Count&quot;' value='Number of Encounters' />
            <alias key='&quot;Pay&quot;' value='Associated Payments' />
          </aliases>
          <members>
            <member alias='Number of Encounters' value='&quot;Count&quot;' />
            <member alias='Associated Charges' value='&quot;Charge&quot;' />
            <member alias='Associated Payments' value='&quot;Pay&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <actions>
    <action caption='see details for outbound referrals' name='[Action1]'>
      <activation auto-clear='true' />
      <source dashboard='Referrals Outbound' type='sheet'>
        <exclude-sheet name='.start NAV' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Outbound Patient List' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Referrals Outbound' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Referrals Outbound' />
      </command>
    </action>
    <action caption='NAV Outbound SNK' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Start' type='sheet' worksheet='.outb NAV' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Referrals Outbound' />
      </command>
    </action>
    <action caption='see details for inbound referrals' name='[Action4]'>
      <source dashboard='Referrals Inbound' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Inbound Patient List' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Referrals Inbound' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Referrals Inbound' />
      </command>
    </action>
    <action caption='NAV Inbound SNK' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Start' type='sheet' worksheet='.inbound NAV' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Referrals Inbound' />
      </command>
    </action>
    <action caption='NAV Start' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Referrals Outbound' type='sheet' worksheet='.start NAV' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='.inbound NAV,.outb NAV' />
        <param name='special-fields' value='all' />
        <param name='target' value='Start' />
      </command>
    </action>
    <action caption='NAV back to Inbound' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Inbound Patient List' type='sheet' worksheet='.inbound NAV back' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='.start NAV' />
        <param name='special-fields' value='all' />
        <param name='target' value='Referrals Inbound' />
      </command>
    </action>
    <action caption='NAV back to Outbound Referrals' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Outbound Patient List' type='sheet' worksheet='.outbound NAV back' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='.start NAV' />
        <param name='special-fields' value='all' />
        <param name='target' value='Referrals Outbound' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='.PAT in'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column datatype='date' name='[DoB]' role='dimension' type='ordinal'>
            </column>
            <column caption='Provider internal' datatype='string' name='[Here]' role='dimension' type='nominal'>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Patient]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[PlanName]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Reason]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='-' />
              </aliases>
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Provider external' datatype='string' name='[There]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[DoB]' derivation='None' name='[none:DoB:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Here]' derivation='None' name='[none:Here:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[Patient]' derivation='None' name='[none:Patient:nk]' pivot='key' type='nominal' />
            <column-instance column='[PlanName]' derivation='None' name='[none:PlanName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Reason]' derivation='None' name='[none:Reason:nk]' pivot='key' type='nominal' />
            <column-instance column='[There]' derivation='None' name='[none:There:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Year' name='[yr:Referral Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (Internal agg)]'>
            <groupfilter function='level-members' level='[Calculation_5000528163600546]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (Internal agg,External agg,Minormax,T)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_5000528163600546]' member='&quot;V Apgar&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Calculation_6200528163525848]' member='&quot;W Stokes&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[minormax]' member='&quot;Max&quot;' />
                  <groupfilter function='member' level='[t]' member='-0.75' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[Action (Internal agg)]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (Internal agg,External agg,Minormax,T)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='341' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Patient:nk]' value='176' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Reason:nk]' value='264' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Here:nk]' value='116' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:There:nk]' value='116' />
            <format attr='width' field='[sqlserver.42152.682083842592].[yr:Referral Date:ok]' value='68' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlserver.42152.682083842592].[none:PlanName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlserver.42152.682083842592].[none:Here:nk] / ([sqlserver.42152.682083842592].[none:There:nk] / ([sqlserver.42152.682083842592].[yr:Referral Date:ok] / ([sqlserver.42152.682083842592].[none:Patient:nk] / ([sqlserver.42152.682083842592].[none:DoB:ok] / [sqlserver.42152.682083842592].[none:Reason:nk])))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.PAT out'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column datatype='date' name='[DoB]' role='dimension' type='ordinal'>
            </column>
            <column caption='Provider internal' datatype='string' name='[Here]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Patient]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[PlanName]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Reason]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='-' />
              </aliases>
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column datatype='string' name='[Specialty]' role='dimension' type='nominal'>
            </column>
            <column caption='Provider external' datatype='string' name='[There]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[DoB]' derivation='None' name='[none:DoB:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Here]' derivation='None' name='[none:Here:nk]' pivot='key' type='nominal' />
            <column-instance column='[Patient]' derivation='None' name='[none:Patient:nk]' pivot='key' type='nominal' />
            <column-instance column='[PlanName]' derivation='None' name='[none:PlanName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Reason]' derivation='None' name='[none:Reason:nk]' pivot='key' type='nominal' />
            <column-instance column='[Specialty]' derivation='None' name='[none:Specialty:nk]' pivot='key' type='nominal' />
            <column-instance column='[There]' derivation='None' name='[none:There:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Year' name='[yr:Referral Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (External agg)]'>
            <groupfilter function='level-members' level='[Calculation_6200528163525848]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (Internal agg,External agg,Minormax,T)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_5000528163600546]' member='&quot;RD Lee Crumpler&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Calculation_6200528163525848]' member='&quot;x other&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[minormax]' member='&quot;Min&quot;' />
                  <groupfilter function='member' level='[t]' member='0.0' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[Action (External agg)]</column>
            <column>[sqlserver.42152.682083842592].[Action (Internal agg,External agg,Minormax,T)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnaxis' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='143' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[sqlserver.42152.682083842592].[none:There:nk]' value='124' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Here:nk]' value='116' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Specialty:nk]' value='76' />
            <format attr='width' field='[sqlserver.42152.682083842592].[yr:Referral Date:ok]' value='64' />
            <format attr='width' field='[sqlserver.42152.682083842592].[none:Reason:nk]' value='152' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='col-levels' value='8' />
            <format attr='row-levels' value='8' />
            <format attr='row-horiz-levels' value='8' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlserver.42152.682083842592].[none:PlanName:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='aspect' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([sqlserver.42152.682083842592].[none:Here:nk] / ([sqlserver.42152.682083842592].[none:There:nk] / ([sqlserver.42152.682083842592].[none:Specialty:nk] / ([sqlserver.42152.682083842592].[yr:Referral Date:ok] / ([sqlserver.42152.682083842592].[none:Patient:nk] / ([sqlserver.42152.682083842592].[none:DoB:ok] / [sqlserver.42152.682083842592].[none:Reason:nk]))))))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.SNK in'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Referrers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range max='15' min='1' />
            </column>
            <column caption='Receivers' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='6'>
              <calculation class='tableau' formula='6' />
              <range max='15' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Measure Selection' datatype='real' name='[Calculation_0460528175838696]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 4]=&apos;Count&apos;&#13;&#10;THEN COUNTD([Id])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Charge&apos;&#13;&#10;THEN SUM([Associated Charges])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Pay&apos;&#13;&#10;THEN SUM([Associated Payments])&#13;&#10;END&#13;&#10;// More measures can be added here. Just make sure to also add them in the corresponding parameter!' scope-isolation='false' />
            </column>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column caption='Curve Polygon' datatype='real' name='[Calculation_5910528170359377]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE ATTR([minormax])&#13;&#10;WHEN &apos;Min&apos; THEN [Calculation_1350528170309389]&#13;&#10;WHEN &apos;Max&apos; THEN [Calculation_7910528170236455]&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='External agg' datatype='string' name='[Calculation_6200528163525848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [There modified] &#13;&#10;THEN [There]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Minormax' datatype='string' name='[minormax]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6200528163525848]' derivation='None' name='[none:Calculation_6200528163525848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[minormax]' derivation='None' name='[none:minormax:nk]' pivot='key' type='nominal' />
            <column-instance column='[t]' derivation='None' name='[none:t:qk]' pivot='key' type='quantitative' />
            <column caption='Path' datatype='integer' name='[path]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[path]' derivation='Sum' name='[sum:path:qk]' pivot='key' type='quantitative' />
            <column caption='T' datatype='real' datatype-customized='true' name='[t]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0460528175838696]' derivation='User' name='[usr:Calculation_0460528175838696:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[Calculation_5910528170359377]' derivation='User' name='[usr:Calculation_5910528170359377:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Max Here (copy)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Calculation_7910528170236455]' ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Min Here (copy)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Calculation_7580528163834476]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Calculation_1350528170309389]' ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Calculation_2140528170019951]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Calculation_2620528170108911]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV inb)]'>
            <groupfilter function='level-members' level='[Calculation_2730529105012490]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (xxxNAV inb)]'>
            <groupfilter function='member' level='[Calculation_2730529105012490]' member='&quot;Inbound Referrals&quot;' user:ui-action-filter='[Action8]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' direction='ASC' />
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='7' included-values='in-range'>
            <min>#2012-01-01 00:00:00#</min>
            <max>#2014-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV inb)]</column>
            <column>[sqlserver.42152.682083842592].[Action (xxxNAV inb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]' scope='rows' value='false' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern' scope='cols' value='none' />
            <format attr='line-pattern' scope='rows' value='none' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Referred to&#10;' />
            <format attr='title' field='[Parameters].[Parameter 2]' value='Referred from&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
              <lod column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
              <path column='[sqlserver.42152.682083842592].[sum:path:qk]' />
              <lod column='[sqlserver.42152.682083842592].[none:minormax:nk]' />
              <lod column='[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Referred from:&#9;</run>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Referred to:&#9;</run>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;&#9;&lt;[Parameters].[Parameter 4]&gt;: &lt;[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]&gt; </run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='trendline'>
                <format attr='line-pattern' value='none' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]</rows>
        <cols>[sqlserver.42152.682083842592].[none:t:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='.SNK out'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column caption='External agg' datatype='string' name='[Calculation_6200528163525848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [There modified] &#13;&#10;THEN [There]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column caption='Curve Polygon OUT' datatype='real' name='[Curve Polygon (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE ATTR([minormax])&#13;&#10;WHEN &apos;Min&apos; THEN [Curve Min (copy)]&#13;&#10;WHEN &apos;Max&apos; THEN [Curve Max (copy)]&#13;&#10;END' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column caption='Measure Outbound' datatype='integer' name='[Measure Selection (copy)]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='COUNTD([Id])&#13;&#10;// The outbound referral streams only go by COUNT as we have no numbers for charges and payments.' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column caption='Minormax' datatype='string' name='[minormax]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6200528163525848]' derivation='None' name='[none:Calculation_6200528163525848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[minormax]' derivation='None' name='[none:minormax:nk]' pivot='key' type='nominal' />
            <column-instance column='[t]' derivation='None' name='[none:t:qk]' pivot='key' type='quantitative' />
            <column caption='Path' datatype='integer' name='[path]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[path]' derivation='Sum' name='[sum:path:qk]' pivot='key' type='quantitative' />
            <column caption='T' datatype='real' datatype-customized='true' name='[t]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Curve Polygon (copy)]' derivation='User' name='[usr:Curve Polygon (copy):qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Max Here (copy 2)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Min Here (copy 2)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Curve Min (copy)]' ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Curve Max (copy)]' ordering-type='Rows' />
              <table-calc field='[sqlserver.42152.682083842592].[Flow Size (copy)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Min There (copy)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
              </table-calc>
              <table-calc field='[sqlserver.42152.682083842592].[Max There (copy)]' ordering-type='Field'>
                <order field='[sqlserver.42152.682083842592].[Calculation_6200528163525848]' />
                <order field='[sqlserver.42152.682083842592].[Calculation_5000528163600546]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Measure Selection (copy)]' derivation='User' name='[usr:Measure Selection (copy):vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV outb)]'>
            <groupfilter function='level-members' level='[Calculation_0280529100138029]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (xxxNAV outb)]'>
            <groupfilter function='member' level='[Calculation_0280529100138029]' member='&quot;Outbound Referrals&quot;' user:ui-action-filter='[Action9]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Calculation_5000528163600546:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' direction='ASC' />
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='5' included-values='in-range'>
            <min>#2013-07-31 00:00:00#</min>
            <max>#2014-08-12 23:59:59#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV outb)]</column>
            <column>[sqlserver.42152.682083842592].[Action (xxxNAV outb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' scope='cols' value='false' />
            <encoding attr='space' class='0' field='[sqlserver.42152.682083842592].[none:t:qk]' field-type='quantitative' max='6.5818930041152255' min='-6.6181069958847738' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' value='Referrers'>
              <formatted-text>
                <run>Referrers</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
              <lod column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
              <path column='[sqlserver.42152.682083842592].[sum:path:qk]' />
              <lod column='[sqlserver.42152.682083842592].[none:minormax:nk]' />
              <tooltip column='[sqlserver.42152.682083842592].[usr:Measure Selection (copy):vtsum:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Referred from:&#9;</run>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Referred to:&#9;</run>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]&gt;&#10;&lt;[sqlserver.42152.682083842592].[usr:Measure Selection (copy):vtsum:qk]&gt; referrals</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='190' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]</rows>
        <cols>[sqlserver.42152.682083842592].[none:t:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='.external IN'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Measure Selection' datatype='real' name='[Calculation_0460528175838696]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 4]=&apos;Count&apos;&#13;&#10;THEN COUNTD([Id])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Charge&apos;&#13;&#10;THEN SUM([Associated Charges])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Pay&apos;&#13;&#10;THEN SUM([Associated Payments])&#13;&#10;END&#13;&#10;// More measures can be added here. Just make sure to also add them in the corresponding parameter!' scope-isolation='false' />
            </column>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='External agg' datatype='string' name='[Calculation_6200528163525848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [There modified] &#13;&#10;THEN [There]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6200528163525848]' derivation='None' name='[none:Calculation_6200528163525848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0460528175838696]' derivation='User' name='[usr:Calculation_0460528175838696:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV inb)]'>
            <groupfilter function='level-members' level='[Calculation_2730529105012490]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (xxxNAV inb)]'>
            <groupfilter function='member' level='[Calculation_2730529105012490]' member='&quot;Inbound Referrals&quot;' user:ui-action-filter='[Action8]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='7' included-values='in-range'>
            <min>#2012-01-01 00:00:00#</min>
            <max>#2014-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV inb)]</column>
            <column>[sqlserver.42152.682083842592].[Action (xxxNAV inb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
              <text column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]&gt;</run>
                <run>&#10;&lt;[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.external out'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column caption='External agg' datatype='string' name='[Calculation_6200528163525848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [There modified] &#13;&#10;THEN [There]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column caption='Measure Outbound' datatype='integer' name='[Measure Selection (copy)]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='COUNTD([Id])&#13;&#10;// The outbound referral streams only go by COUNT as we have no numbers for charges and payments.' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6200528163525848]' derivation='None' name='[none:Calculation_6200528163525848:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Measure Selection (copy)]' derivation='User' name='[usr:Measure Selection (copy):vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV outb)]'>
            <groupfilter function='level-members' level='[Calculation_0280529100138029]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (xxxNAV outb)]'>
            <groupfilter function='member' level='[Calculation_0280529100138029]' member='&quot;Outbound Referrals&quot;' user:ui-action-filter='[Action9]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Calculation_5000528163600546:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='5' included-values='in-range'>
            <min>#2013-07-31 00:00:00#</min>
            <max>#2014-08-12 23:59:59#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV outb)]</column>
            <column>[sqlserver.42152.682083842592].[Action (xxxNAV outb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='92' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' value='Referred To'>
              <formatted-text>
                <run>Referred To</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
              <text column='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Measure Selection (copy):vtsum:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.inbound NAV'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='xxxNAV inb' datatype='string' name='[Calculation_2730529105012490]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;Inbound Referrals&apos;' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_2730529105012490]' derivation='None' name='[none:Calculation_2730529105012490:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='220' />
            <format attr='height' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontname='Trebuchet MS'>Examine referrals streams to providers in your organization.</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>&lt;</run>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]</run>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.inbound NAV back'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='xxxNAV inb' datatype='string' name='[Calculation_2730529105012490]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;Inbound Referrals&apos;' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_2730529105012490]' derivation='None' name='[none:Calculation_2730529105012490:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='220' />
            <format attr='height' value='72' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#b7d2f2' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <shape column='[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontname='Trebuchet MS'>go back to Inbound Referrals diagram</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.internal IN'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Measure Selection' datatype='real' name='[Calculation_0460528175838696]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 4]=&apos;Count&apos;&#13;&#10;THEN COUNTD([Id])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Charge&apos;&#13;&#10;THEN SUM([Associated Charges])&#13;&#10;ELSEIF [Parameters].[Parameter 4]=&apos;Pay&apos;&#13;&#10;THEN SUM([Associated Payments])&#13;&#10;END&#13;&#10;// More measures can be added here. Just make sure to also add them in the corresponding parameter!' scope-isolation='false' />
            </column>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_0460528175838696]' derivation='User' name='[usr:Calculation_0460528175838696:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV inb)]'>
            <groupfilter function='level-members' level='[Calculation_2730529105012490]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (xxxNAV inb)]'>
            <groupfilter function='member' level='[Calculation_2730529105012490]' member='&quot;Inbound Referrals&quot;' user:ui-action-filter='[Action8]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='8'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='7' included-values='in-range'>
            <min>#2012-01-01 00:00:00#</min>
            <max>#2014-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV inb)]</column>
            <column>[sqlserver.42152.682083842592].[Action (xxxNAV inb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
              <text column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Æ&#9;</run>
                <run bold='true'>&lt;[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]&gt;</run>
                <run>&#10;&#9;&lt;[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.internal out'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='Payer Filter' datatype='boolean' name='[Calculation_0800528175314644]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Medicare] AND [Parameters].[Parameter 3]=&apos;Medicare&apos;&#13;&#10;OR&#13;&#10;[Private Insurance] AND [Parameters].[Parameter 3]=&apos;Private&apos;&#13;&#10;OR&#13;&#10;[No Insurance] AND [Parameters].[Parameter 3]=&apos;None&apos;&#13;&#10;OR&#13;&#10;[Parameters].[Parameter 3]=&apos;All&apos;' scope-isolation='false' />
            </column>
            <column caption='Internal agg' datatype='string' name='[Calculation_5000528163600546]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Here Top] &#13;&#10;THEN [Here]&#13;&#10;ELSE &apos;x other&apos;&#13;&#10;END' scope-isolation='false' />
              <aliases>
                <alias key='&quot;x other&quot;' value='other' />
              </aliases>
            </column>
            <column datatype='boolean' name='[Inbound]' role='dimension' type='nominal'>
            </column>
            <column caption='Measure Outbound' datatype='integer' name='[Measure Selection (copy)]' role='measure' type='quantitative' visual-totals='Sum'>
              <calculation class='tableau' formula='COUNTD([Id])&#13;&#10;// The outbound referral streams only go by COUNT as we have no numbers for charges and payments.' scope-isolation='false' />
            </column>
            <column datatype='date' name='[Referral Date]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_0800528175314644]' derivation='None' name='[none:Calculation_0800528175314644:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5000528163600546]' derivation='None' name='[none:Calculation_5000528163600546:nk]' pivot='key' type='nominal' />
            <column-instance column='[Inbound]' derivation='None' name='[none:Inbound:nk]' pivot='key' type='nominal' />
            <column-instance column='[Referral Date]' derivation='Quarter-Trunc' name='[tqr:Referral Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Measure Selection (copy)]' derivation='User' name='[usr:Measure Selection (copy):vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (NAV outb)]'>
            <groupfilter function='level-members' level='[Calculation_0280529100138029]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (xxxNAV outb)]'>
            <groupfilter function='member' level='[Calculation_0280529100138029]' member='&quot;Outbound Referrals&quot;' user:ui-action-filter='[Action9]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:Calculation_0800528175314644:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Calculation_5000528163600546:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' direction='ASC' />
          <filter class='categorical' column='[sqlserver.42152.682083842592].[none:Inbound:nk]' filter-group='4'>
            <groupfilter function='member' level='[none:Inbound:nk]' member='false' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' filter-group='5' included-values='in-range'>
            <min>#2013-07-31 00:00:00#</min>
            <max>#2014-08-12 23:59:59#</max>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[tqr:Referral Date:qk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Inbound:nk]</column>
            <column>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</column>
            <column>[sqlserver.42152.682083842592].[Action (NAV outb)]</column>
            <column>[sqlserver.42152.682083842592].[Action (xxxNAV outb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='92' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='12' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' value='Referrers of Interest'>
              <formatted-text>
                <run>Referrers of Interest</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
              <text column='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[sqlserver.42152.682083842592].[usr:Measure Selection (copy):vtsum:qk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.outb NAV'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='xxxNAV outb' datatype='string' name='[Calculation_0280529100138029]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;Outbound Referrals&apos;' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_0280529100138029]' derivation='None' name='[none:Calculation_0280529100138029:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='258' />
            <format attr='height' value='65' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontname='Trebuchet MS'>Examine referrals from providers in your organization to other providers.</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>&lt;</run>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]</run>
                <run bold='true' fontname='Trebuchet MS' fontsize='18'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.outbound NAV back'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='xxxNAV outb' datatype='string' name='[Calculation_0280529100138029]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;Outbound Referrals&apos;' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_0280529100138029]' derivation='None' name='[none:Calculation_0280529100138029:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (Internal agg,External agg,Minormax,T)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_5000528163600546]' member='&quot;RD Lee Crumpler&quot;' />
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Calculation_6200528163525848]' member='&quot;x other&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[minormax]' member='&quot;Min&quot;' />
                  <groupfilter function='member' level='[t]' member='0.0' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[Action (Internal agg,External agg,Minormax,T)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='258' />
            <format attr='height' value='65' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#d7e9ff' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <shape column='[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run fontname='Trebuchet MS'>go back to Outbound Referral diagram</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='.start NAV'>
      <table>
        <view>
          <datasources>
            <datasource caption='cSQL Referral+ (DemoStandard)' name='sqlserver.42152.682083842592' />
          </datasources>
          <datasource-dependencies datasource='sqlserver.42152.682083842592'>
            <column caption='xxxNAV Start' datatype='string' name='[Calculation_9320529150555755]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' scope-isolation='false' />
            </column>
            <column-instance column='[Calculation_9320529150555755]' derivation='None' name='[none:Calculation_9320529150555755:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[sqlserver.42152.682083842592].[Action (xxxNAV inb)]'>
            <groupfilter function='member' level='[Calculation_2730529105012490]' member='&quot;Inbound Referrals&quot;' user:ui-action-filter='[Action6]' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[sqlserver.42152.682083842592].[Action (xxxNAV inb)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='53' />
            <format attr='width' value='80' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[sqlserver.42152.682083842592].[none:Calculation_9320529150555755:nk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontname='Trebuchet MS'>Return to the Start page</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='Custom/return to previous.png' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Inbound Patient List'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='7' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='82750' id='1' name='.PAT in' w='99600' x='0' y='17250'>
              </zone>
              <zone h='17250' id='3' param='C:\Users\Mahitha\Google Drive\Tableau Dashboard Library\Demonstration Dashboards\Referrals.twb Files\Image/Referral Analysis.jpg' type='bitmap' w='21713' x='0' y='0'>
              </zone>
              <zone h='6750' id='4' type='empty' w='9300' x='90300' y='10500'>
              </zone>
              <zone h='17250' id='5' type='text' w='68587' x='21713' y='0'>
                <formatted-text>
                  <run bold='true' fontname='Trebuchet MS' fontsize='24'>Patient List &#10;inbound referrals</run>
                </formatted-text>
              </zone>
              <zone h='10500' id='6' name='.inbound NAV back' w='9300' x='90300' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Outbound Patient List'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='10' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='8' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='17250' id='3' param='C:\Users\Mahitha\Google Drive\Tableau Dashboard Library\Demonstration Dashboards\Referrals.twb Files\Image/Referral Analysis.jpg' type='bitmap' w='21713' x='0' y='0'>
              </zone>
              <zone h='8625' id='4' type='empty' w='8800' x='90800' y='8625'>
              </zone>
              <zone forceUpdate='true' h='17250' id='5' type='text' w='69087' x='21713' y='0'>
                <formatted-text>
                  <run bold='true' fontname='Trebuchet MS' fontsize='24'>Patient List &#10;outbound referrals</run>
                </formatted-text>
              </zone>
              <zone h='82750' id='6' name='.PAT out' w='99600' x='0' y='17250'>
              </zone>
              <zone h='8625' id='7' name='.outbound NAV back' w='8800' x='90800' y='0'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Referrals Inbound'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='82250' id='5' param='horz' type='layout-flow' w='100000' x='0' y='17750'>
            <zone h='82250' id='3' type='layout-basic' w='84000' x='0' y='17750'>
              <zone h='78250' id='1' name='.SNK in' w='51800' x='16300' y='21750'>
              </zone>
              <zone h='78035' id='12' name='.external IN' w='16300' x='0' y='17750'>
              </zone>
              <zone h='78035' id='14' name='.internal IN' w='15900' x='68100' y='17750'>
              </zone>
              <zone h='4000' id='15' type='empty' w='51800' x='16300' y='17750'>
              </zone>
              <zone h='4215' id='16' type='empty' w='16300' x='0' y='95785'>
              </zone>
              <zone h='4215' id='17' type='empty' w='15900' x='68100' y='95785'>
              </zone>
            </zone>
            <zone fixed-size='160' h='82250' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='17750'>
              <zone h='8250' id='6' name='.SNK in' param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' type='filter' w='16000' x='84000' y='17750'>
              </zone>
              <zone h='8875' id='8' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='84000' y='26000'>
                <formatted-text>
                  <run>Referred from&#10;</run>
                </formatted-text>
              </zone>
              <zone h='8875' id='9' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='84000' y='34875'>
                <formatted-text>
                  <run>Referred to&#10;</run>
                </formatted-text>
              </zone>
              <zone h='6375' id='10' param='[Parameters].[Parameter 3]' type='paramctrl' w='16000' x='84000' y='43750'>
              </zone>
              <zone h='6375' id='11' param='[Parameters].[Parameter 4]' type='paramctrl' w='16000' x='84000' y='50125'>
              </zone>
            </zone>
          </zone>
          <zone h='17750' id='18' is-scaled='1' param='C:\Users\Mahitha\Google Drive\Tableau Dashboard Library\Demonstration Dashboards\Referrals.twb Files\Image/Referral Analysis.jpg' type='bitmap' w='16300' x='0' y='0'>
          </zone>
          <zone forceUpdate='true' h='17750' id='19' name='' type='text' w='74100' x='16300' y='0'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontname='Trebuchet MS' fontsize='24'>Inbound Referrals</run>
            </formatted-text>
          </zone>
          <zone h='7750' id='20' type='empty' w='9600' x='90400' y='10000'>
          </zone>
          <zone h='10000' id='21' name='.start NAV' w='9600' x='90400' y='0'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Referrals Outbound'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_20' value='center' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='82500' id='5' param='horz' type='layout-flow' w='100000' x='0' y='17500'>
            <zone h='82500' id='3' type='layout-basic' w='84000' x='0' y='17500'>
              <zone h='78375' id='1' name='.SNK out' w='39700' x='23300' y='21625'>
              </zone>
              <zone h='78273' id='11' name='.internal out' w='23300' x='0' y='17500'>
              </zone>
              <zone h='78273' id='13' name='.external out' w='21000' x='63000' y='17500'>
              </zone>
              <zone h='4125' id='14' type='empty' w='39700' x='23300' y='17500'>
              </zone>
              <zone h='4227' id='15' type='empty' w='23300' x='0' y='95773'>
              </zone>
              <zone h='4227' id='16' type='empty' w='21000' x='63000' y='95773'>
              </zone>
            </zone>
            <zone fixed-size='160' h='82500' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='17500'>
              <zone h='8250' id='6' name='.SNK out' param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' type='filter' w='16000' x='84000' y='17500'>
              </zone>
              <zone h='8875' id='8' param='[Parameters].[Parameter 2]' type='paramctrl' w='16000' x='84000' y='25750'>
              </zone>
              <zone h='8875' id='9' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='84000' y='34625'>
              </zone>
              <zone h='6375' id='10' param='[Parameters].[Parameter 3]' type='paramctrl' w='16000' x='84000' y='43500'>
              </zone>
              <zone h='6500' id='17' name='.internal out' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='filter' w='16000' x='84000' y='49875'>
              </zone>
            </zone>
          </zone>
          <zone h='17500' id='18' type='empty' w='19700' x='71000' y='0'>
          </zone>
          <zone h='17500' id='19' is-scaled='1' param='C:\Users\Mahitha\Google Drive\Tableau Dashboard Library\Demonstration Dashboards\Referrals.twb Files\Image/Referral Analysis.jpg' type='bitmap' w='14600' x='0' y='0'>
          </zone>
          <zone forceUpdate='true' h='17500' id='20' name='' type='text' w='56400' x='14600' y='0'>
            <formatted-text>
              <run bold='true' fontname='Trebuchet MS' fontsize='24'>Outbound Referrals</run>
            </formatted-text>
          </zone>
          <zone h='9625' id='21' name='.start NAV' w='9300' x='90700' y='0'>
          </zone>
          <zone h='7875' id='22' type='empty' w='9300' x='90700' y='9625'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Start'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='24687' id='1' param='C:\Users\Mahitha\Google Drive\Tableau Dashboard Library\Demonstration Dashboards\Referrals.twb Files\Image/Referral Analysis.jpg' type='bitmap' w='46067' x='26311' y='18594'>
          </zone>
          <zone h='100000' id='3' name='' type='empty' w='27622' x='72378' y='0'>
          </zone>
          <zone h='100000' id='4' type='empty' w='26311' x='0' y='0'>
          </zone>
          <zone h='18594' id='5' is-scaled='1' param='C:\Users\Mahitha\Google Drive\Tableau Dashboard Library\Demonstration Dashboards\Referrals.twb Files\Image/Mimir Logo resize.jpg' type='bitmap' w='46067' x='26311' y='0'>
          </zone>
          <zone h='40313' id='6' param='vert' type='layout-flow' w='46067' x='26311' y='43281'>
            <zone fixed-size='61' h='10781' id='10' is-fixed='true' type='empty' w='46067' x='26311' y='43281'>
            </zone>
            <zone fixed-size='100' h='14766' id='7' is-fixed='true' name='.outb NAV' w='46067' x='26311' y='54062'>
              <layout-cache type-h='cell' type-w='fixed' />
            </zone>
            <zone fixed-size='100' h='14766' id='8' is-fixed='true' name='.inbound NAV' w='46067' x='26311' y='68828'>
              <layout-cache type-h='cell' type-w='fixed' />
            </zone>
          </zone>
          <zone h='16406' id='9' type='empty' w='46067' x='26311' y='83594'>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='1' name='Start'>
      <active id='8' />
      <zones>
        <zone h='16406' id='9' name='' type='empty' w='46067' x='26311' y='83594' />
        <zone h='100000' id='4' name='' type='empty' w='26311' x='0' y='0' />
        <zone is-scaled='1' name='' type='bitmap' />
        <zone fixed-size='61' h='10781' id='10' is-fixed='true' name='' type='empty' w='46067' x='26311' y='43281' />
        <zone name='.outb NAV'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='.inbound NAV'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                    </x-fields>
                    <y-fields>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Inbound Referrals&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
        <zone h='16406' id='9' name='' type='empty' w='46067' x='26311' y='83594' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Referrals Outbound'>
      <active id='21' />
      <zones>
        <zone name='.SNK out'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='.internal out'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='.external out'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone h='4125' id='14' name='' type='empty' w='39700' x='23300' y='17500' />
        <zone h='4227' id='15' name='' type='empty' w='23300' x='0' y='95773' />
        <zone h='4227' id='16' name='' type='empty' w='21000' x='63000' y='95773' />
        <zone name='.SNK out' param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' show-null-ctrls='false' type='filter' />
        <zone mode='slider' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone mode='slider' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone mode='checkdropdown' name='.internal out' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='filter' values='relevant' />
        <zone h='17500' id='18' name='' type='empty' w='29000' x='71000' y='0' />
        <zone is-scaled='1' name='' type='bitmap' />
        <zone forceUpdate='true' name='' type='text' />
        <zone name='.start NAV'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                    </x-fields>
                    <y-fields>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[sqlserver.42152.682083842592].[none:Calculation_9320529150555755:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Referrals Inbound'>
      <active id='11' />
      <zones>
        <zone name='.SNK in'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</field>
            </color-one-way>
          </highlight>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[sqlserver.42152.682083842592].[none:t:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</field>
                    <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
                    <field>[sqlserver.42152.682083842592].[none:minormax:nk]</field>
                    <field>[sqlserver.42152.682083842592].[none:t:qk]</field>
                    <field>[sqlserver.42152.682083842592].[sum:path:qk]</field>
                    <field>[sqlserver.42152.682083842592].[usr:Calculation_0460528175838696:vtsum:qk]</field>
                    <field>[sqlserver.42152.682083842592].[usr:Calculation_5910528170359377:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;V Apgar&quot;</value>
                  <value>&quot;W Stokes&quot;</value>
                  <value>&quot;Max&quot;</value>
                  <value>-0.75</value>
                  <value>5548</value>
                  <value>73.0</value>
                  <value>0.87827954254572427</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
        <zone name='.external IN'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='.internal IN'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone h='4000' id='15' name='' type='empty' w='51800' x='16300' y='17750' />
        <zone h='4215' id='16' name='' type='empty' w='16300' x='0' y='95785' />
        <zone h='4215' id='17' name='' type='empty' w='15900' x='68100' y='95785' />
        <zone name='.SNK in' param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' show-null-ctrls='false' type='filter' />
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 2]' type='paramctrl' />
        <zone custom-title='true' mode='slider' name='' param='[Parameters].[Parameter 1]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 3]' type='paramctrl' />
        <zone mode='compact' name='' param='[Parameters].[Parameter 4]' type='paramctrl' />
        <zone is-scaled='1' name='' type='bitmap' />
        <zone forceUpdate='true' name='' type='text' />
        <zone h='17750' id='20' name='' type='empty' w='25000' x='75000' y='0' />
        <zone name='.start NAV'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.SNK out'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='37' type='pages' />
            <card size='15' type='filters' />
            <card size='254' type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' size='101' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='checkdropdown' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Inbound:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:minormax:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:t:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[sqlserver.42152.682083842592].[usr:Curve Polygon (copy):qk:1]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.internal out'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.external out'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.PAT out'>
      <cards>
        <edge name='left'>
          <strip size='166'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Here:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Patient:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:PlanName:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Reason:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Specialty:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:There:nk]</field>
          <field>[sqlserver.42152.682083842592].[yr:DoB:ok]</field>
          <field>[sqlserver.42152.682083842592].[yr:Referral Date:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.outb NAV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.outbound NAV back'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.SNK in'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[sqlserver.42152.682083842592].[tqr:Referral Date:qk]' show-null-ctrls='false' type='filter' />
            <card custom-title='true' mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card custom-title='true' mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_0800528175314644:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Inbound:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:minormax:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:t:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.PAT in'>
      <cards>
        <edge name='left'>
          <strip size='166'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Here:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Inbound:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Patient:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:PlanName:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Reason:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Specialty:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:There:nk]</field>
          <field>[sqlserver.42152.682083842592].[yr:DoB:ok]</field>
          <field>[sqlserver.42152.682083842592].[yr:Referral Date:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.external IN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_6200528163525848:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Inbound:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.internal IN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_5000528163600546:nk]</field>
          <field>[sqlserver.42152.682083842592].[none:Inbound:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.inbound NAV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.inbound NAV back'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]' type='shape' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Inbound Patient List'>
      <active id='6' />
      <zones>
        <zone h='17250' id='4' name='' type='empty' w='33333' x='66667' y='0' />
        <zone h='17250' id='5' name='' type='text' w='44867' x='21800' y='0' />
        <zone name='.inbound NAV back'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]' type='shape'>
            <bucket-selection>
            </bucket-selection>
          </highlight>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                    </x-fields>
                    <y-fields>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[sqlserver.42152.682083842592].[none:Calculation_2730529105012490:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Inbound Referrals&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Outbound Patient List'>
      <active id='7' />
      <zones>
        <zone h='17250' id='4' name='' type='empty' w='33333' x='66667' y='0' />
        <zone forceUpdate='true' h='17250' id='5' name='' type='text' w='44867' x='21800' y='0' />
        <zone name='.outbound NAV back'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]' type='shape'>
            <bucket-selection>
            </bucket-selection>
          </highlight>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                    </x-fields>
                    <y-fields>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[sqlserver.42152.682083842592].[none:Calculation_0280529100138029:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Outbound Referrals&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='.start NAV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[sqlserver.42152.682083842592].[none:Calculation_9320529150555755:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Start' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Referrals Outbound' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Referrals Inbound' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='.SNK out' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='.internal out' width='133'>
      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
    </thumbnail>
    <thumbnail height='192' name='.external out' width='139'>
      iVBORw0KGgoAAAANSUhEUgAAAIsAAADACAYAAAA0hpBQAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARXUlEQVR4nO3dfVxUdb7A8c/MMAMMMwiICCg+P4Ao4OOGuanZlsq9V1517VZWVnrXNrfS
      7YHWVyamua5laZtae7XSzFrpem03e7JeamWUWz7ypAOCioCIPA4DMzBz7h+ASyj40xAqv+/X
      iz8458yZ38zrwzkzw5lzdJqmaQihQN/ZAxA/HxKLUCaxCGUSi1AmsQhlEotQJrEIZRKLUCax
      CGUSi1AmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlEotQ
      JrEIZRKLUCaxCGUSi1AmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlEotQJrEIZRKLUCaxCGUS
      i1AmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlXp09gPaUlZXV2UP4RftFxQIQGRnZ2UP4xZLd
      kFAmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlEotQJrEIZRKLUCaxCGUSi1AmsQhlEotQJrEI
      ZR148FMVB9Yv5ZXduVS5TATHTeP3D09niBUKtz3Bo++eOL9k/PytzI8HqlJZk7SGPSUQHHcn
      SUkJ9DZ03IhFC1pHOfiqNnP+Zi3bqWmaM1t75/E7tJmvHtQ0rV77csV07fH/LWhxg2pt17I7
      tIfWp2tOZ7a2ef4d2rJd1W3eRWZm5tUavdA0reN2Q7FzePPFGfQ3Aab+XD8mDIfDAWSTk2Mg
      IiKsxQ1sHD3qTcyoIZhM/Rk3JoQDBw512HDFhTrnNYv7BHtTKxg3LhZKs8ku9Sb9jZncefud
      zHx6MxlVAA4cjiCCghoHajBAQSGFnTJgAZ1xwLa7jK9e/jOHxj3D0tFmIIElWxMa5rlOs33J
      46x4K5oND7W9GjmSv+N1bCyuHFKeXUXexEUsndSdC16rmnowMiaMLftyKaY/ZnMppaVABHjc
      bggPo2lndbGj+CWgq6vjdkPuE6QsWo/7/pU80TyUnM3MnbuBIzVucOWwd18h3WJjCWMoMbFO
      Dn+XgcuVw1f7ihk+PLbDhisupNM0TeuIOyrdsZAHNx794cT4+WydP5Kcv7/Ayq0HKXGZfvgW
      +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
    </thumbnail>
    <thumbnail height='192' name='.PAT out' width='192'>
      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
    </thumbnail>
    <thumbnail height='109' name='.outb NAV' width='192'>
      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
    </thumbnail>
    <thumbnail height='109' name='.outbound NAV back' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABtCAYAAAD3Xm43AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFV0lEQVR4nO3cy2tUZxjH8d/RJI2p0aiJN6q1apOAt25KaZtgaoUoFGopiFJECoUuXCkU
      dwWh2J0b/QOEEppCFy66SLpIqB0vUNoQtSUmtqYGHJ1oMiYxt0l8u5g5kzmT0aoLp2+f72ch
      M+ObMIHnO+fMOXMmcM45AUYtKPYTAIqJAGAaAcC0kvwHehLFeBpAcbAFgGkEANMIAKYRAEwj
      AJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYA
      MI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBg
      GgHANAKAaQQA0wgAppUU+wm8MEM9xX4G+A+yE4AkLa8v9jPAfwy7QDCNAGAaAcA0AoBpBADT
      CACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATLN1PQC8V1v9KHLfOSdJCoIg8tjoVEpt
      vXfUeTOhK/GkbiUfamgypeXlpVpf9bK2r16qpo0rFbjwN2T0JF7AX1EMQz1cEPM/UFv9KDv0
      zrnI4EtS370RnYpd17dXBzQxM6sgvVAusy68r8x9tgDwUv7wT6RmdaLjms5c7lPqUWarkF74
      2OF3IgB4KH/4b9wf1YHWi7qWGFG4O5M//JkfjAy/RADwTP7wd98e1gffnNfg+PQThz+QtGrx
      It19OBlZx1EgeOvG/dGnHv6K0oX68dOdWlNZPrdOBADPhK/+E6lZHWi9+NTD//3Bd1VXs0Rt
      h3dqbSYCiQDgqRMd1/51nz93+HdtWiXnnGqrK9V2uElLy0slEQA81HdvRGcu9z3T8Odq77ut
      kcmUJAKAZ5xzOhW7/thDneFj+cMfnjs4falXx9uvZOMhAHhldCql1qsDkp5n+Psiwy8RADzT
      1ntH4wXO8EpPHn5JOt7eHRl+iQDgmc6bieca/tOXeucNv8SJMHimOz78TMMfBIF+Gbivjj8T
      as57M6yAAOCZgeT4Mw2/JL25boXOHWqM/J5wDbtA8MrQ5HT29tMMfyh3dyh3DQHAK8vKyxRI
      CjJDPJ6a1f7Wi4r1D2Y/J5R/bYCUHnbn3Lw17ALBK+urKjQ4PhX5VOfo9Iz2tcR07pMGNWyo
      ya4Nh729N64THb/LySmQMv+mf5otALyyY3VV9nbumeCx6Rl91BJTrH8w/X85nxptrl2jj7e8
      oq54Ur/Gk/otPqyu+LC64kkCgF+aXlspKTr8oXBLEOtPzNsNOtZQl70/9/rPm2B4Zm/dWi0q
      WSgpOvyhsekZfdhyIbIlkNLvAU7u3pYdeD4KAS8tKS/V/q3rIq/i+R5mtwTpCMKtwdHGen21
      e2t2HRfEwEtfNNardEGh1/85Y5kILvx9b+5B53SsoV4nd2/jghj4yTmnzdWVOvLW65IK7waF
      xvK2BFJ6a7Cnbo0qy0okx1EgeOrLXVu0pWbJE9fkHiKN9Q8qCAL9kXigvWfPa3QqJXEiDL4J
      9+crykr03cF3VFPxUsF1+YdI97XEssN/d2xCCgKOAsFfzjltXlGpHw41zosg/xBpuCVoPvtT
      ZPglAoCHck9y7Vi7TJ2fvZfdHSo0/OH9wbHJyPBzFAjeKfR1iJuWL9bPn7+vo2/XqmxBUHD4
      0zeCedcREwC8FgZRUVqir/fsUNeRZh1+Y4PK80+WOTdv+BUEfDku/FJX47Kf6pTm3hTnjnEQ
      BBqZTKmt97Y6/0qoO57UrQfj2W+HfrWqQttXL1PTxhoCgG3sAsE0AoBpBADTCACmEQBMIwCY
      RgAwjQBgGgHANAKAaQQA0wgApv0DGv8fG4ObDV4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='.SNK in' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='.PAT in' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='.external IN' width='64'>
      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
      zchdK9BkxYMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='.internal IN' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAADACAYAAAC02WUGAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAE6UlEQVR4nO2dTUwcZRyHn9l1gQVaoCDg0m1oBbNllybaNl4a9eChMZp4UBPTRJuqTRS/
      DiZ+1KRtUjThoKfaxJiKJNUDHho9NG1CExPjpe2h6UJXwbB0oVRYaluBDUthPDS0fCwwkra/
      GP7Pbd55591nnryzHDZhHNd1XVYxPrWAGgugFlBjAdQCaiyAWkCNBVALqLEAagE1FkAtoMYC
      qAXUWAC1gBoLoBZQYwHUAmosgFpAjQVQC6ixAGoBNRZALaDGAqgF1FgAtYAaC6AWUGMB1AJq
      LIBaQI0FUAuosQBqATUWQC2gxgKoBdQ8sNyERCJxPzxkLBsAIBKJ3GsPGav+EbAAagE1FkAt
      oMYCqAXUWAC1gBoLoBZQYwHUAmosgFpAjQVQC6ixAGoBNRZALaDGAqgF1Hj6XWApGr9rvBse
      940Lr16Yc7zqd4AFUAuosQBqATUWQC2gxgKoBdRYALWAGgugFlBjAdQCaiyAWkCNBVALqLEA
      agE1FkAtoMYCqAXUWAC1gBoLoBZQYwHUAmosgFpAjQVQC6ixAGoBNRZALaDGAqgF1FgAtYAa
      C6AWUGMB1AJqLIBaQI0FUAuosQBqATUWQC2gxgKoBdRYALWAGgugFlBjAdQCaiyAWkCNBVAL
      qLEAagE1FkAtoMYCqAXUWAC1gBoLoBZQYwHUAmosgFpAjQVQC6ixAGoBNRZALaDGAqgF1FgA
      tYCaVR/A0z9XjzoOXbOOA2sbef2H03z1TAUMDNG9b4iJ22d9BBorWL+3kqI18xY6kyJ+GMKt
      YUrugjwAUzcZ/bmfyyfHyGZcfOXFVLwRpjLi93S5xx3QwP64i+u6uO44v73j45umFs7cPp9P
      ZXOMWGuM2Nf1VBWMkGwZnhXlXuEy2tZN37l8Qoc2E2uNEnkzyI0v+hhJe1thBY9AkG0vP099
      Mkky1+m8AKV7qilKXeVqj9c1p8mcSPL73jjx17roafsn59jU/Msy10j/4qd8z0MUl/sAB19d
      FeG3S8nPTt/anbt7SR2+SPzDv7hxvBsneoBOANp5yYmuJECGs23tdNXWUrvYlGAhhaFJbv7t
      bUU3PkiyI0CoJUrsyEaKE5dyjvX/Oi/Bn+NkCBLcOHc4f8s6ikMztzbOVOwRop9Vkp/jsz2+
      YKGLgzGHgzP3t2EnX/7UzHZvFy9LtmecqfQEfe/fKVaWY8yJj8GOtXcuLPDhY3qZ1fMorPPj
      LPKV4DFAA/vjnRyIZjj76RPsPN3IozWBxadnxhm/nE9hyNvqAMRq2PxBGTOeE8e7F4wtoKaA
      Av8wmV4ombULsh1JUmNVPLx17nRf4cKV/uMjEGTboRMcWf8tL7zVTs7vmewk145eYaxuHaU1
      3lbN21SI/+II6d5pyGa48klnzrHejsl5OqWU75hi5OggoyPTgMt0T5qB45Os2Rpc8DmBsgAM
      nOd8epLBtu85xYreMVLBi8eOcSr0LE83N4ADMMHQvjhDAH4feQ0V1L5XTl7O66+T2n2d1Mzh
      9jCxpmo2PJei//Muhqd8FDwZpnpL0YKx2qfm7zqH4lfqCf94iYGPu5jMcuvPYNMmKmuAgXnT
      Hyvno46T7HqwhMi7u3icP3Bc13WXut1EIrHky9ftJSv/cyyAWkCNBVALqLEAagE1FkAtoMYC
      qAXUWAC1gBoLoBZQYwHUAmr+BWzOKM5YtCuRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='116' name='.inbound NAV' width='192'>
      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
    </thumbnail>
    <thumbnail height='116' name='.inbound NAV back' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Inbound Patient List' width='192'>
      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
      l4Vc207IbQVeHkG8fJ3gXD6P12Unma8TDrhXFcbaNRii1LLTFVp7eaZbyQnWe4ANslwEG2xe
      mokRiq4uSrEStXIciyvM4dv3kY2PMz7XZKC7zDf//iv07t9FNZ7E1tFPJpPl7Q+9iqnYzJYH
      wNI6wXKDZDLJQHQvuaaBVDyxqjBWwG8jWW+vGwBw66wTrAfATbAogpu1EpeKXvp7BzEEm3gc
      ICCSb4Df30n3gJt6S2b37TL+zm5qVhsGh5+OoA8BGcnp23JBbLLa6OvpxGp14HK5qNY1esMS
      NX9gVWGsvmgYU+nqx9OrQ+tsW3QneJuz3UXwrYTeA2yQtdKh16KUjdMQnYS8RuLxGg6HaZV7
      OTE2Ru/gIIYtbO+SExzxcSkWxxcKo2giLsm8Kh16oL+bura+CIZbxwnWA+AmOH78OE25iVac
      4VJeoao6CUlVrAYDtp47uG9/H99/6gmaggm5NMvYWJme2wZwUeD8hSy+wT7e9tpj/MtX/pLO
      Aw+xb8f15/ffOAqnT59HFMFuUDh3KU0o6MMqiqvSoQeDFk5mbRzZs74w1+cE6xCPx2lUSzQa
      dUxWBwoWRK0CiopNciIFe2gWEgDkM7OUa0Yi3SFquRTlSptAT5Qen0S6akCppPB29F61N7kp
      WhWSZRAa+fklkkIBGtUSwZ5dq9Khw24rsRJ0X6MHuBXmBP9fFmf72bIWjl8AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Outbound Patient List' width='192'>
      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
    </thumbnail>
    <thumbnail height='97' name='.start NAV' width='134'>
      iVBORw0KGgoAAAANSUhEUgAAAIYAAABhCAYAAAATONmrAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFX0lEQVR4nO3bz0scZxzH8c+zqxvcVkiz20Bw1ZpCDMbEVGJJRLG00kJ68EcPDUSqhv4H
      0p6jl0KhObaXmlySnpJWc5D+AInF/GogxKLVGFDEbBN0XVIS1sZd9+nBnXF29jsmh33WpPm8
      IOCOM8MD+87zzMyuSmutQeTi2+4B0IuJYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCI
      YZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCI
      YZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCIYZCo
      aLsHUCgzMzPbPYSXyisTBgDs379/u4fw0uBSQiKGQSKGQSKGQSKGQSKGQSKGQSKGQSKGQSKG
      QSKGQSKGQaJX6kO0Qkqn09Bae/5+4sEjDE1HcW1hGbOxx1hOrOHNYAD7wqVorAijvSaCuj07
      PY9XSsHnM/f/WumtRv8/MjMzU9BPV9fX18XtV+aW0D86ieuLK1nbNQDl2vdYeQin369Fy97d
      4rn8fn8eRipjGIa4w1hNptA3cgdnb8/n7OuOwvlaAeitr8I3xw+jpDh7gjcZBq8xCiCeeIoP
      z415RgEAwWK//dodyeDteXx0bgzxxFPTQ7UxDMNWkym0nR/HrWg853dWFEU+haGTzXgtkHvJ
      Z+3zRzSOtvPjWE2mzA3WgWEY1jdyZ+solMJgRwOa3wpj6GQTXncsF9Y+1gxyKxpH38gdo+O1
      MAyDrswtbbl8FPsUBjsbcOJQJZRSaKoMo72mLGsf5Trm3O15jM0tmRw2AIZhVP/oZM4250zx
      fcdGFFpraK0xMDqFCxMLOVE4f9YATgvnzTeGYcjEg0fiLSmwEcXZznftKJRSGBidwle/T4tR
      uF1fXMHEg0cmhm1jGIYMTUezXruXj08PVdhRaK3FKKTnCDrzb9h1/nzjk09Dri0s2z97LR9W
      FAOjU1kReP1sUQCuOs5vAsMw5G7sMYDsW9JBVxQAkNYaXXWV6KqrBBSgdfaModTmSdovjONe
      /AkAYDZzflMYhiGxxFrW8uGeKQBAaw2/z4e3w6U5xzv3swSKNlf+WGLN2NgBhmFMOBjAwyf/
      AgBSaY3Pf7qFYr8Pnxwot990pRSeptbx50OvC0nHdAFgNbluvwoFA0bHzzAM2RcqtcPQAJJp
      je6LN6Gg0HkgYu8X8PtweTqKr8fvAsi98HQ/Hre2VQuzTD7xrsSQxsowgM3PPhQ2Zo7uizdw
      aXLR3k8phYHWg/Y+1jGAdxQA0FgRNjTyDQzDkI6ajVnB/TxiLa3Rfekmfpy6b29TSuHLpmoA
      zxcFALTXRGASwzCkbs9OHI2EsrZZb3AqrfHZxRu4lIlDa43+1oP4oqk6a+ZwHuPcdjQS2vJL
      PPnAMAzq/6DWc3lIpTV6MsuKdSE60HoQJ2rL7eO9noL2t9aaG3QGwzCoZe9u9LxT5fkGJzPL
      ijVzjM0v4/LdvwF4Lym99VVoqZK/0ZVPvCsx7MzHhzG59E/WR+/OL+OkMncroZIAOn8YR8Jx
      S+qOoqHsDZw5frgg4+aMYVhJcRGGu5rQULbL8w1PptPouPDsKIa7mnO+3mcKwyiAXcEd+LW3
      BafqqzwvLFdTchQAcKq+Cr/1vodQcIfxsVoYRoGUFBfh27Yj+Lm7BcccdytbPbs4Ggnhl54W
      fNd2pGAzhT0ufkvcjOf6u5K/7uPqQgyzK48RS6whHAyg+gX5uxJefBryrDetPhJCves5x4uE
      SwmJGAaJGAaJGAaJGAaJGAaJGAaJGAaJGAaJ/gMvX7tTB6eDQQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Custom/help-icon.jpg'>
        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
      </shape>
      <shape name='Custom/mail.png'>
        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
      </shape>
      <shape name='Custom/return to previous.png'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
